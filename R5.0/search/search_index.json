{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Documentation These documentation are automatically created using mkdocs on Wed, 07 Aug 2024 16:01 GMT Thunder This section contains the documentation created from Thunder Repo Commit-Id Commit-Date Thunder f3132aff41c144983135a6c43c34289e9b7581f7 Tue, 23 Jul 2024 12:30 GMT Interfaces This section contains the documentation created from interfaces Repo Commit-Id Commit-Date ThunderInterfaces 227976cc2fa9e7167414aa6e924d3767ae9cf2b0 Sat, 06 Jul 2024 22:13 GMT Plugins This section contains the documentation created from plugins Repo Commit-Id Commit-Date ThunderNanoServices 851dc4061f09be0743c6b0a9b0b2c71c3a4bf96a Tue, 09 Jul 2024 09:31 GMT ThunderNanoServicesRDK cfefc6c391d9622a9b8b7640f556690577a2e034 Tue, 23 Jul 2024 13:23 GMT","title":"Home"},{"location":"#welcome-to-documentation","text":"These documentation are automatically created using mkdocs on Wed, 07 Aug 2024 16:01 GMT","title":"Welcome to Documentation"},{"location":"#thunder","text":"This section contains the documentation created from Thunder Repo Commit-Id Commit-Date Thunder f3132aff41c144983135a6c43c34289e9b7581f7 Tue, 23 Jul 2024 12:30 GMT","title":"Thunder"},{"location":"#interfaces","text":"This section contains the documentation created from interfaces Repo Commit-Id Commit-Date ThunderInterfaces 227976cc2fa9e7167414aa6e924d3767ae9cf2b0 Sat, 06 Jul 2024 22:13 GMT","title":"Interfaces"},{"location":"#plugins","text":"This section contains the documentation created from plugins Repo Commit-Id Commit-Date ThunderNanoServices 851dc4061f09be0743c6b0a9b0b2c71c3a4bf96a Tue, 09 Jul 2024 09:31 GMT ThunderNanoServicesRDK cfefc6c391d9622a9b8b7640f556690577a2e034 Tue, 23 Jul 2024 13:23 GMT","title":"Plugins"},{"location":"api/AVSControllerAPI/","text":"AVSController API Version: 1.0.0 Status: AVSController interface for Thunder framework. (Defined with IAVSController in IAVSClient.h ) Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the AVSController interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description AVSController JSON-RPC interface. Methods The following methods are provided by the AVSController interface: AVSController interface methods: Method Description mute Mutes the audio output of AVS record Starts or stops the voice recording, skipping keyword detection mute method Mutes the audio output of AVS. Parameters Name Type Description params boolean ... Result Name Type Description result null Always null Errors Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVSController.1.mute\", \"params\": false } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } record method Starts or stops the voice recording, skipping keyword detection. Parameters Name Type Description params boolean ... Result Name Type Description result null Always null Errors Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVSController.1.record\", \"params\": false } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the AVSController interface: AVSController interface events: Notification Description dialoguestatechange Notifies about dialogue state changes dialoguestatechange notification Notifies about dialogue state changes. Parameters Name Type Description params string The new state (must be one of the following: Expecting, Idle, Listening, Speaking, Thinking ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVSController.1.register\", \"params\": { \"event\": \"dialoguestatechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.dialoguestatechange\", \"params\": \"SPEAKING\" }","title":"AVSController API"},{"location":"api/AVSControllerAPI/#avscontroller-api","text":"Version: 1.0.0 Status: AVSController interface for Thunder framework. (Defined with IAVSController in IAVSClient.h )","title":"AVSController API"},{"location":"api/AVSControllerAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"api/AVSControllerAPI/#introduction","text":"","title":"Introduction"},{"location":"api/AVSControllerAPI/#scope","text":"This document describes purpose and functionality of the AVSController interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"api/AVSControllerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/AVSControllerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/AVSControllerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/AVSControllerAPI/#description","text":"AVSController JSON-RPC interface.","title":"Description"},{"location":"api/AVSControllerAPI/#methods","text":"The following methods are provided by the AVSController interface: AVSController interface methods: Method Description mute Mutes the audio output of AVS record Starts or stops the voice recording, skipping keyword detection","title":"Methods"},{"location":"api/AVSControllerAPI/#mute-method","text":"Mutes the audio output of AVS.","title":"mute method"},{"location":"api/AVSControllerAPI/#parameters","text":"Name Type Description params boolean ...","title":"Parameters"},{"location":"api/AVSControllerAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/AVSControllerAPI/#errors","text":"Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible","title":"Errors"},{"location":"api/AVSControllerAPI/#example","text":"","title":"Example"},{"location":"api/AVSControllerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVSController.1.mute\", \"params\": false }","title":"Request"},{"location":"api/AVSControllerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/AVSControllerAPI/#record-method","text":"Starts or stops the voice recording, skipping keyword detection.","title":"record method"},{"location":"api/AVSControllerAPI/#parameters_1","text":"Name Type Description params boolean ...","title":"Parameters"},{"location":"api/AVSControllerAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/AVSControllerAPI/#errors_1","text":"Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible","title":"Errors"},{"location":"api/AVSControllerAPI/#example_1","text":"","title":"Example"},{"location":"api/AVSControllerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVSController.1.record\", \"params\": false }","title":"Request"},{"location":"api/AVSControllerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/AVSControllerAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the AVSController interface: AVSController interface events: Notification Description dialoguestatechange Notifies about dialogue state changes","title":"Notifications"},{"location":"api/AVSControllerAPI/#dialoguestatechange-notification","text":"Notifies about dialogue state changes.","title":"dialoguestatechange notification"},{"location":"api/AVSControllerAPI/#parameters_2","text":"Name Type Description params string The new state (must be one of the following: Expecting, Idle, Listening, Speaking, Thinking )","title":"Parameters"},{"location":"api/AVSControllerAPI/#example_2","text":"","title":"Example"},{"location":"api/AVSControllerAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVSController.1.register\", \"params\": { \"event\": \"dialoguestatechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/AVSControllerAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.dialoguestatechange\", \"params\": \"SPEAKING\" }","title":"Message"},{"location":"api/AmazonPrimeAPI/","text":"AmazonPrime API Version: 1.0.0 Status: AmazonPrime interface for Thunder framework. (Defined with IAmazonPrime in IAmazonPrime.h ) Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the AmazonPrime interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description AmazonPrime JSON-RPC interface. Methods The following methods are provided by the AmazonPrime interface: AmazonPrime interface methods: Method Description send Send a message over the message bus to ignition send method Send a message over the message bus to ignition. Parameters Name Type Description params string ... Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AmazonPrime.1.send\", \"params\": \"...\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the AmazonPrime interface: AmazonPrime interface events: Notification Description receive Receive a message from the generic message bus receive notification Receive a message from the generic message bus. Parameters Name Type Description params string ... Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AmazonPrime.1.register\", \"params\": { \"event\": \"receive\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.receive\", \"params\": \"...\" }","title":"AmazonPrime API"},{"location":"api/AmazonPrimeAPI/#amazonprime-api","text":"Version: 1.0.0 Status: AmazonPrime interface for Thunder framework. (Defined with IAmazonPrime in IAmazonPrime.h )","title":"AmazonPrime API"},{"location":"api/AmazonPrimeAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"api/AmazonPrimeAPI/#introduction","text":"","title":"Introduction"},{"location":"api/AmazonPrimeAPI/#scope","text":"This document describes purpose and functionality of the AmazonPrime interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"api/AmazonPrimeAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/AmazonPrimeAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/AmazonPrimeAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/AmazonPrimeAPI/#description","text":"AmazonPrime JSON-RPC interface.","title":"Description"},{"location":"api/AmazonPrimeAPI/#methods","text":"The following methods are provided by the AmazonPrime interface: AmazonPrime interface methods: Method Description send Send a message over the message bus to ignition","title":"Methods"},{"location":"api/AmazonPrimeAPI/#send-method","text":"Send a message over the message bus to ignition.","title":"send method"},{"location":"api/AmazonPrimeAPI/#parameters","text":"Name Type Description params string ...","title":"Parameters"},{"location":"api/AmazonPrimeAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/AmazonPrimeAPI/#example","text":"","title":"Example"},{"location":"api/AmazonPrimeAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AmazonPrime.1.send\", \"params\": \"...\" }","title":"Request"},{"location":"api/AmazonPrimeAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/AmazonPrimeAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the AmazonPrime interface: AmazonPrime interface events: Notification Description receive Receive a message from the generic message bus","title":"Notifications"},{"location":"api/AmazonPrimeAPI/#receive-notification","text":"Receive a message from the generic message bus.","title":"receive notification"},{"location":"api/AmazonPrimeAPI/#parameters_1","text":"Name Type Description params string ...","title":"Parameters"},{"location":"api/AmazonPrimeAPI/#example_1","text":"","title":"Example"},{"location":"api/AmazonPrimeAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AmazonPrime.1.register\", \"params\": { \"event\": \"receive\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/AmazonPrimeAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.receive\", \"params\": \"...\" }","title":"Message"},{"location":"api/ApplicationAPI/","text":"Application API Version: 1.0.0 Status: Application interface for Thunder framework. (Defined with IApplication in IApplication.h ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Application interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Application JSON-RPC interface. Methods The following methods are provided by the Application interface: Application interface methods: Method Description reset Resets application data reset method Resets application data. Parameters Name Type Description params string Type of reset to perform (must be one of the following: Cache, Credentials, Factory, Recordings ) Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.reset\", \"params\": \"Factory\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Application interface: Application interface properties: Property Description identifier (read-only) Application-specific identification string contentlink (write-only) URI of the associated application-specific content launchpoint Application launching point visible Current application visibility language Current application user interface language identifier property Provides access to the application-specific identification string. This property is read-only . Value Name Type Description (property) string Identifier string Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.identifier\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } contentlink property Provides access to the URI of the associated application-specific content. This property is write-only . Value Name Type Description (property) string Content URI Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.contentlink\", \"params\": \"https://youtube.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } launchpoint property Provides access to the application launching point. Value Name Type Description (property) string Application launching point (must be one of the following: ApplicationList, ApplicationPromotion, BannerAd, ChannelBar, ChannelNumber, ChannelZap, DedicatedButton, DedicatedIcon, Dial, EpgGrid, IntegratedTile, PowerOn, PowerOnFromDedicatedButton, Restart, ResumedFromScreenSaver, ResumedFromStandby, SearchContinuation, SearchResult, SuspendedPowerOn, SuspendedRestart, TitleRecommendation, TouchGesture, Undefined, VisualGesture, VoiceControl, VoiceSearchResult, WebBrowser ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.launchpoint\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Undefined\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.launchpoint\", \"params\": \"Undefined\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visible property Provides access to the current application visibility. Value Name Type Description (property) boolean Current application visibility Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.visible\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.visible\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } language property Provides access to the current application user interface language. Value Name Type Description (property) string Language string as per RFC5646 Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.language\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"en\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.language\", \"params\": \"en\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Application interface: Application interface events: Notification Description visibilitychange Application visibility changes visibilitychange notification Application visibility changes. Parameters Name Type Description params boolean Denotes if application is currently hidden Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": false }","title":"Application API"},{"location":"api/ApplicationAPI/#application-api","text":"Version: 1.0.0 Status: Application interface for Thunder framework. (Defined with IApplication in IApplication.h )","title":"Application API"},{"location":"api/ApplicationAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/ApplicationAPI/#introduction","text":"","title":"Introduction"},{"location":"api/ApplicationAPI/#scope","text":"This document describes purpose and functionality of the Application interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/ApplicationAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/ApplicationAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/ApplicationAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/ApplicationAPI/#description","text":"Application JSON-RPC interface.","title":"Description"},{"location":"api/ApplicationAPI/#methods","text":"The following methods are provided by the Application interface: Application interface methods: Method Description reset Resets application data","title":"Methods"},{"location":"api/ApplicationAPI/#reset-method","text":"Resets application data.","title":"reset method"},{"location":"api/ApplicationAPI/#parameters","text":"Name Type Description params string Type of reset to perform (must be one of the following: Cache, Credentials, Factory, Recordings )","title":"Parameters"},{"location":"api/ApplicationAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/ApplicationAPI/#example","text":"","title":"Example"},{"location":"api/ApplicationAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.reset\", \"params\": \"Factory\" }","title":"Request"},{"location":"api/ApplicationAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/ApplicationAPI/#properties","text":"The following properties are provided by the Application interface: Application interface properties: Property Description identifier (read-only) Application-specific identification string contentlink (write-only) URI of the associated application-specific content launchpoint Application launching point visible Current application visibility language Current application user interface language","title":"Properties"},{"location":"api/ApplicationAPI/#identifier-property","text":"Provides access to the application-specific identification string. This property is read-only .","title":"identifier property"},{"location":"api/ApplicationAPI/#value","text":"Name Type Description (property) string Identifier string","title":"Value"},{"location":"api/ApplicationAPI/#example_1","text":"","title":"Example"},{"location":"api/ApplicationAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.identifier\" }","title":"Get Request"},{"location":"api/ApplicationAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"api/ApplicationAPI/#contentlink-property","text":"Provides access to the URI of the associated application-specific content. This property is write-only .","title":"contentlink property"},{"location":"api/ApplicationAPI/#value_1","text":"Name Type Description (property) string Content URI","title":"Value"},{"location":"api/ApplicationAPI/#example_2","text":"","title":"Example"},{"location":"api/ApplicationAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.contentlink\", \"params\": \"https://youtube.com\" }","title":"Set Request"},{"location":"api/ApplicationAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ApplicationAPI/#launchpoint-property","text":"Provides access to the application launching point.","title":"launchpoint property"},{"location":"api/ApplicationAPI/#value_2","text":"Name Type Description (property) string Application launching point (must be one of the following: ApplicationList, ApplicationPromotion, BannerAd, ChannelBar, ChannelNumber, ChannelZap, DedicatedButton, DedicatedIcon, Dial, EpgGrid, IntegratedTile, PowerOn, PowerOnFromDedicatedButton, Restart, ResumedFromScreenSaver, ResumedFromStandby, SearchContinuation, SearchResult, SuspendedPowerOn, SuspendedRestart, TitleRecommendation, TouchGesture, Undefined, VisualGesture, VoiceControl, VoiceSearchResult, WebBrowser )","title":"Value"},{"location":"api/ApplicationAPI/#example_3","text":"","title":"Example"},{"location":"api/ApplicationAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.launchpoint\" }","title":"Get Request"},{"location":"api/ApplicationAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Undefined\" }","title":"Get Response"},{"location":"api/ApplicationAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.launchpoint\", \"params\": \"Undefined\" }","title":"Set Request"},{"location":"api/ApplicationAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ApplicationAPI/#visible-property","text":"Provides access to the current application visibility.","title":"visible property"},{"location":"api/ApplicationAPI/#value_3","text":"Name Type Description (property) boolean Current application visibility","title":"Value"},{"location":"api/ApplicationAPI/#example_4","text":"","title":"Example"},{"location":"api/ApplicationAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.visible\" }","title":"Get Request"},{"location":"api/ApplicationAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"api/ApplicationAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.visible\", \"params\": false }","title":"Set Request"},{"location":"api/ApplicationAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ApplicationAPI/#language-property","text":"Provides access to the current application user interface language.","title":"language property"},{"location":"api/ApplicationAPI/#value_4","text":"Name Type Description (property) string Language string as per RFC5646","title":"Value"},{"location":"api/ApplicationAPI/#example_5","text":"","title":"Example"},{"location":"api/ApplicationAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.language\" }","title":"Get Request"},{"location":"api/ApplicationAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"en\" }","title":"Get Response"},{"location":"api/ApplicationAPI/#set-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.language\", \"params\": \"en\" }","title":"Set Request"},{"location":"api/ApplicationAPI/#set-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ApplicationAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Application interface: Application interface events: Notification Description visibilitychange Application visibility changes","title":"Notifications"},{"location":"api/ApplicationAPI/#visibilitychange-notification","text":"Application visibility changes.","title":"visibilitychange notification"},{"location":"api/ApplicationAPI/#parameters_1","text":"Name Type Description params boolean Denotes if application is currently hidden","title":"Parameters"},{"location":"api/ApplicationAPI/#example_6","text":"","title":"Example"},{"location":"api/ApplicationAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Application.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/ApplicationAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": false }","title":"Message"},{"location":"api/BluetoothControlAPI/","text":"Bluetooth Control API Version: 1.0.0 Status: BluetoothControl interface for Thunder framework. (Defined by BluetoothControl.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the BluetoothControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Bluetooth Control JSON-RPC interface. Methods The following methods are provided by the BluetoothControl interface: BluetoothControl interface methods: Method Description setdiscoverable Starts advertising (or inquiry scanning), making the local interface visible by nearby Bluetooth devices stopdiscoverable Stops advertising (or inquiry scanning) operation scan Starts active discovery (or inquiry) of nearby Bluetooth devices stopscanning Stops discovery (or inquiry) operation connect Connects to a Bluetooth device disconnect Disconnects from a connected Bluetooth device pair Pairs a Bluetooth device unpair Unpairs a paired Bluetooth device abortpairing Aborts pairing operation providepincode Provides a PIN-code for authentication during a legacy pairing process providepasskey Provides a passkey for authentication during a pairing process confirmpasskey Confirms a passkey for authentication during a pairing process forget Forgets a known Bluetooth device getdevicelist Retrieves a list of known remote Bluetooth devices getdeviceinfo Retrieves detailed information about a known Bluetooth device setdiscoverable method Starts advertising (or inquiry scanning), making the local interface visible by nearby Bluetooth devices. Description Please note that discoverable state in Limited mode for Bluetooth Classic is bounded to 30 seconds only. Also see: discoverablestarted , discoverablecomplete Parameters Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) params?.mode string (optional) Discoverable mode (default: General ) params?.connectable boolean (optional) Selects connectable advertising (true, LowEnergy only) (default: False ) params?.duration integer (optional) Duration of the discoverable operation (in seconds) (default: 30 ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed set discoverable state ERROR_INPROGRESS Discoverable state of selected type is already in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.setdiscoverable\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"connectable\": false, \"duration\": 30 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } stopdiscoverable method Stops advertising (or inquiry scanning) operation. Also see: discoverablecomplete Parameters Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to top scanning ERROR_ILLEGAL_STATE Adapter is in not discoverable state of selected type Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopdiscoverable\", \"params\": { \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } scan method Starts active discovery (or inquiry) of nearby Bluetooth devices. Also see: scanstarted , scancomplete Parameters Name Type Description params object ... params.type string Scan type (default: LowEnergy ) params?.mode string (optional) Scan mode (default: General ) params?.timeout integer (deprecated) (optional) Duration of the scan (in seconds) (default: 10 ) params?.duration integer (optional) Duration of the scan (in seconds) (default: 10 ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to scan ERROR_INPROGRESS Scan of selected type is already in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.scan\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"duration\": 60 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } stopscanning method Stops discovery (or inquiry) operation. Also see: scancomplete Parameters Name Type Description params object ... params?.type string (optional) Scan type (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to top scanning ERROR_ILLEGAL_STATE Scan of selected type is not in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopscanning\", \"params\": { \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } connect method Connects to a Bluetooth device. Description This call also enables automatic reconnection of the device. If the device is currently not available it will be automatically connected as soon it becomes available. Also see: devicestatechange Parameters Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not paired ERROR_ALREADY_CONNECTED Device already connected ERROR_GENERAL Failed to connect the device ERROR_REQUEST_SUBMITTED Device has not been connected but will be automatically connected when available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.connect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } disconnect method Disconnects from a connected Bluetooth device. Description This call also disables automatic reconnection. If the device is currently not connected it will not be reconnected when it becomes available. Also see: devicestatechange Parameters Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_RELEASED Device not connected ERROR_REQUEST_SUBMITTED Device is currently not connected but it's autoconnection mode has been disabled Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.disconnect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } pair method Pairs a Bluetooth device. Description PIN-code or passkey requests may appear during the pairing process. The process can be cancelled any time by calling the abortpairing method. Also see: devicestatechange , pincoderequest , passkeyrequest , passkeyconfirmrequest Parameters Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) params?.capabilities string (optional) Pairing capabilities (must be one of the following: DisplayOnly, DisplayYesNo, KeyboardDisplay, KeyboardOnly, NoInputNoOutput ) (default: NoInputNoOutput ) params?.timeout integer (optional) Maximum time allowed for the pairing process to complete (in seconds) (default: 20 ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_CONNECTED Device already paired ERROR_GENERAL Failed to pair the device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\", \"capabilities\": \"NoInputNoOutput\", \"timeout\": 60 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } unpair method Unpairs a paired Bluetooth device. Also see: devicestatechange Parameters Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_RELEASED Device not paired Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.unpair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } abortpairing method Aborts pairing operation. Also see: devicestatechange Parameters Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.abortpairing\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } providepincode method Provides a PIN-code for authentication during a legacy pairing process. Description This method should be called upon receiving a pincoderequest event during a legacy pairing process. If the specified PIN-code is incorrect the pairing process will be aborted. Also see: devicestatechange , pincoderequest Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret string A PIN-code string typically consisting of (but not limited to) four decimal digits Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing or PIN code has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.providepincode\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": \"0000\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } providepasskey method Provides a passkey for authentication during a pairing process. Description This method should be called upon receiving a passkeyrequest event during pairing process. If the specified passkey is incorrect or empty the pairing process will be aborted. Also see: devicestatechange , passkeyrequest Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret integer A six-digit decimal number passkey Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing or a passkey has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.providepasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": 123456 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } confirmpasskey method Confirms a passkey for authentication during a pairing process. Description This method should be called upon receiving a passkeyconfirmationrequest event during a pairing process. If the confirmation is negative the pairing process will be aborted. Also see: devicestatechange , passkeyconfirmrequest Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.iscorrect boolean Specifies if the passkey sent in passkeyconfirmrequest event is correct (true) or incorrect (false) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device is currently not pairing or passkey confirmation has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.confirmpasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"iscorrect\": true } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } forget method Forgets a known Bluetooth device. Description The device will no longer be listed and its status tracked. If the device is connected and/or paired it will be disconnected and unpaired. Also see: devicestatechange Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.forget\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } getdevicelist method Retrieves a list of known remote Bluetooth devices. Parameters This method takes no parameters. Result Name Type Description result array List of devices result[#] object (device entry) result[#].address string Bluetooth address result[#].type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.getdevicelist\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } ] } getdeviceinfo method Retrieves detailed information about a known Bluetooth device. Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result object ... result.address string Bluetooth address result.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) result?.name string (optional) Name of the device result?.class integer (optional) Class of device result?.appearance integer (optional) Appearance value result?.services array (optional) List of supported services result?.services[#] string (optional) Service UUID result.connected boolean Indicates if the device is currently connected result.paired boolean Indicates if the device is currently paired Errors Message Description ERROR_UNKNOWN_KEY Unknown device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.getdeviceinfo\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"name\": \"Thunder Bluetooth Speaker\", \"class\": 2360324, \"appearance\": 2113, \"services\": [ \"110a\" ], \"connected\": true, \"paired\": true } } Properties The following properties are provided by the BluetoothControl interface: BluetoothControl interface properties: Property Description adapters (read-only) List of local Bluetooth adapters adapter (read-only) Local Bluetooth adapter information devices deprecated (read-only) List of known remote Bluetooth devices device deprecated (read-only) Remote Bluetooth device information adapters property Provides access to the list of local Bluetooth adapters. This property is read-only . Value Result Name Type Description result array List of local Bluetooth adapters result[#] integer Adapter ID Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapters\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0 ] } adapter property Provides access to the local Bluetooth adapter information. This property is read-only . Value The adapter id argument shall be passed as the index to the property, e.g. BluetoothControl.1.adapter@<adapter id> . Result Name Type Description result object Local Bluetooth adapter information result.id integer Interface ID number result.interface string Interface name result.address string Bluetooth address result.type string Adapter type (default: Dual ) result.version integer Version result?.manufacturer integer (optional) Manufacturer company identifer result?.class integer (optional) Class of device result?.name string (optional) Name result?.shortname string (optional) Short name Errors Message Description ERROR_UNKNOWN_KEY Unknown adapter device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapter@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": 0, \"interface\": \"hci0\", \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Dual\", \"version\": 8, \"manufacturer\": 15, \"class\": 1060, \"name\": \"Thunder Bluetooth Controller\", \"shortname\": \"Thunder\" } } devices property Provides access to the list of known remote Bluetooth devices. This property is read-only . devices is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Result Name Type Description result array List of known remote Bluetooth devices result[#] string Bluetooth address Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.devices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"81:6F:B0:91:9B:FE\" ] } device property Provides access to the remote Bluetooth device information. This property is read-only . device is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value The device address argument shall be passed as the index to the property, e.g. BluetoothControl.1.device@<device address> . Result Name Type Description result object Remote Bluetooth device information result.address string Bluetooth address result.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) result?.name string (optional) Name of the device result?.class integer (optional) Class of device result?.appearance integer (optional) Appearance value result?.services array (optional) List of supported services result?.services[#] string (optional) Service UUID result.connected boolean Indicates if the device is currently connected result.paired boolean Indicates if the device is currently paired Errors Message Description ERROR_UNKNOWN_KEY Unknown device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.device@81:6F:B0:91:9B:FE\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"name\": \"Thunder Bluetooth Speaker\", \"class\": 2360324, \"appearance\": 2113, \"services\": [ \"110a\" ], \"connected\": true, \"paired\": true } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothControl interface: BluetoothControl interface events: Notification Description discoverablestarted Notifies of entering the discoverable state discoverablecomplete Notifies of leaving the discoverable state scanstarted Notifies of scan start scancomplete Notifies of scan completion devicestatechange Notifies of device state changes pincoderequest Notifies of a PIN code request passkeyrequest Notifies of a passkey request passkeyconfirmrequest Notifies of a passkey confirmation request discoverablestarted notification Notifies of entering the discoverable state. Description Register to this event to be notified about entering the discoverable state If applicable, this notification may be sent out during registration, reflecting the current status. Parameters Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) params.mode string Discoverable mode (default: General ) params?.connectable boolean (optional) Indicates connectable advertising (true, LowEnergy only) (default: False ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"discoverablestarted\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.discoverablestarted\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"connectable\": false } } discoverablecomplete notification Notifies of leaving the discoverable state. Description Register to this event to be notified about leaving the discoverable state Parameters Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"discoverablecomplete\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.discoverablecomplete\", \"params\": { \"type\": \"LowEnergy\" } } scanstarted notification Notifies of scan start. Description Register to this event to be notified about device scan start If applicable, this notification may be sent out during registration, reflecting the current status. Parameters Name Type Description params object ... params.type string Scan type (default: LowEnergy ) params?.mode string (optional) Scan mode (default: General ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"scanstarted\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.scanstarted\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\" } } scancomplete notification Notifies of scan completion. Description Register to this event to be notified about device scan completion Parameters Name Type Description params object ... params.type string Scan type (default: LowEnergy ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"scancomplete\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.scancomplete\", \"params\": { \"type\": \"LowEnergy\" } } devicestatechange notification Notifies of device state changes. Description Register to this event to be notified about device state changes If applicable, this notification may be sent out during registration, reflecting the current status. Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) params.state string Device state params?.disconnectreason string (optional) Disconnection reason in case of Disconnected event The device type argument will be passed within the designator, e.g. LowEnergy.client.devicestatechange . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"devicestatechange\", \"id\": \"LowEnergy.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"LowEnergy.client.devicestatechange\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\", \"state\": \"Disconnected\", \"disconnectreason\": \"ConnectionTimeout\" } } pincoderequest notification Notifies of a PIN code request. Description Register to this event to be notified about PIN code requests during a legacy pairing process. Upon receiving this event the client is required to respond with a providepincode call in order to complete the pairing procedure. The PIN code value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Note that this event will never be send for a Bluetooth LowEnergy device Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"pincoderequest\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.pincoderequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\" } } passkeyrequest notification Notifies of a passkey request. Description Register to this event to be notified about passkey requests that may be required during a pairing process. Upon receiving this event the client is required to respond with a providepasskey call in order to complete the pairing procedure. The passkey value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"passkeyrequest\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.passkeyrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\" } } passkeyconfirmrequest notification Notifies of a passkey confirmation request. Description Register to this event to be notified about passkey confirmation requests that may required during a pairing process. Upon receiving this event the client is required to respond with a passkeyconfirm call in order to complete the pairing procedure. The passkey confirmation would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret integer A six-digit decimal number passkey sent by the remote device for confirmation; may be 0 for a simple accept/forbid paring request Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"passkeyconfirmrequest\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.passkeyconfirmrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": 123456 } }","title":"Bluetooth Control API"},{"location":"api/BluetoothControlAPI/#bluetooth-control-api","text":"Version: 1.0.0 Status: BluetoothControl interface for Thunder framework. (Defined by BluetoothControl.json )","title":"Bluetooth Control API"},{"location":"api/BluetoothControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/BluetoothControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/BluetoothControlAPI/#scope","text":"This document describes purpose and functionality of the BluetoothControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/BluetoothControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/BluetoothControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/BluetoothControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/BluetoothControlAPI/#description","text":"Bluetooth Control JSON-RPC interface.","title":"Description"},{"location":"api/BluetoothControlAPI/#methods","text":"The following methods are provided by the BluetoothControl interface: BluetoothControl interface methods: Method Description setdiscoverable Starts advertising (or inquiry scanning), making the local interface visible by nearby Bluetooth devices stopdiscoverable Stops advertising (or inquiry scanning) operation scan Starts active discovery (or inquiry) of nearby Bluetooth devices stopscanning Stops discovery (or inquiry) operation connect Connects to a Bluetooth device disconnect Disconnects from a connected Bluetooth device pair Pairs a Bluetooth device unpair Unpairs a paired Bluetooth device abortpairing Aborts pairing operation providepincode Provides a PIN-code for authentication during a legacy pairing process providepasskey Provides a passkey for authentication during a pairing process confirmpasskey Confirms a passkey for authentication during a pairing process forget Forgets a known Bluetooth device getdevicelist Retrieves a list of known remote Bluetooth devices getdeviceinfo Retrieves detailed information about a known Bluetooth device","title":"Methods"},{"location":"api/BluetoothControlAPI/#setdiscoverable-method","text":"Starts advertising (or inquiry scanning), making the local interface visible by nearby Bluetooth devices.","title":"setdiscoverable method"},{"location":"api/BluetoothControlAPI/#description_1","text":"Please note that discoverable state in Limited mode for Bluetooth Classic is bounded to 30 seconds only. Also see: discoverablestarted , discoverablecomplete","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters","text":"Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) params?.mode string (optional) Discoverable mode (default: General ) params?.connectable boolean (optional) Selects connectable advertising (true, LowEnergy only) (default: False ) params?.duration integer (optional) Duration of the discoverable operation (in seconds) (default: 30 )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors","text":"Message Description ERROR_GENERAL Failed set discoverable state ERROR_INPROGRESS Discoverable state of selected type is already in progress","title":"Errors"},{"location":"api/BluetoothControlAPI/#example","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.setdiscoverable\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"connectable\": false, \"duration\": 30 } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#stopdiscoverable-method","text":"Stops advertising (or inquiry scanning) operation. Also see: discoverablecomplete","title":"stopdiscoverable method"},{"location":"api/BluetoothControlAPI/#parameters_1","text":"Name Type Description params object ... params.type string Discoverable type (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_1","text":"Message Description ERROR_GENERAL Failed to top scanning ERROR_ILLEGAL_STATE Adapter is in not discoverable state of selected type","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_1","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopdiscoverable\", \"params\": { \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#scan-method","text":"Starts active discovery (or inquiry) of nearby Bluetooth devices. Also see: scanstarted , scancomplete","title":"scan method"},{"location":"api/BluetoothControlAPI/#parameters_2","text":"Name Type Description params object ... params.type string Scan type (default: LowEnergy ) params?.mode string (optional) Scan mode (default: General ) params?.timeout integer (deprecated) (optional) Duration of the scan (in seconds) (default: 10 ) params?.duration integer (optional) Duration of the scan (in seconds) (default: 10 )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_2","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_2","text":"Message Description ERROR_GENERAL Failed to scan ERROR_INPROGRESS Scan of selected type is already in progress","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_2","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.scan\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"duration\": 60 } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#stopscanning-method","text":"Stops discovery (or inquiry) operation. Also see: scancomplete","title":"stopscanning method"},{"location":"api/BluetoothControlAPI/#parameters_3","text":"Name Type Description params object ... params?.type string (optional) Scan type (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_3","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_3","text":"Message Description ERROR_GENERAL Failed to top scanning ERROR_ILLEGAL_STATE Scan of selected type is not in progress","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_3","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopscanning\", \"params\": { \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#connect-method","text":"Connects to a Bluetooth device.","title":"connect method"},{"location":"api/BluetoothControlAPI/#description_2","text":"This call also enables automatic reconnection of the device. If the device is currently not available it will be automatically connected as soon it becomes available. Also see: devicestatechange","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_4","text":"Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_4","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_4","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not paired ERROR_ALREADY_CONNECTED Device already connected ERROR_GENERAL Failed to connect the device ERROR_REQUEST_SUBMITTED Device has not been connected but will be automatically connected when available","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_4","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.connect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#disconnect-method","text":"Disconnects from a connected Bluetooth device.","title":"disconnect method"},{"location":"api/BluetoothControlAPI/#description_3","text":"This call also disables automatic reconnection. If the device is currently not connected it will not be reconnected when it becomes available. Also see: devicestatechange","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_5","text":"Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_5","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_5","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_RELEASED Device not connected ERROR_REQUEST_SUBMITTED Device is currently not connected but it's autoconnection mode has been disabled","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_5","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.disconnect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#pair-method","text":"Pairs a Bluetooth device.","title":"pair method"},{"location":"api/BluetoothControlAPI/#description_4","text":"PIN-code or passkey requests may appear during the pairing process. The process can be cancelled any time by calling the abortpairing method. Also see: devicestatechange , pincoderequest , passkeyrequest , passkeyconfirmrequest","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_6","text":"Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) params?.capabilities string (optional) Pairing capabilities (must be one of the following: DisplayOnly, DisplayYesNo, KeyboardDisplay, KeyboardOnly, NoInputNoOutput ) (default: NoInputNoOutput ) params?.timeout integer (optional) Maximum time allowed for the pairing process to complete (in seconds) (default: 20 )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_6","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_6","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_CONNECTED Device already paired ERROR_GENERAL Failed to pair the device","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_6","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\", \"capabilities\": \"NoInputNoOutput\", \"timeout\": 60 } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#unpair-method","text":"Unpairs a paired Bluetooth device. Also see: devicestatechange","title":"unpair method"},{"location":"api/BluetoothControlAPI/#parameters_7","text":"Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_7","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_7","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_RELEASED Device not paired","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_7","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.unpair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#abortpairing-method","text":"Aborts pairing operation. Also see: devicestatechange","title":"abortpairing method"},{"location":"api/BluetoothControlAPI/#parameters_8","text":"Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_8","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_8","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_8","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.abortpairing\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#providepincode-method","text":"Provides a PIN-code for authentication during a legacy pairing process.","title":"providepincode method"},{"location":"api/BluetoothControlAPI/#description_5","text":"This method should be called upon receiving a pincoderequest event during a legacy pairing process. If the specified PIN-code is incorrect the pairing process will be aborted. Also see: devicestatechange , pincoderequest","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_9","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret string A PIN-code string typically consisting of (but not limited to) four decimal digits","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_9","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_9","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing or PIN code has not been requested","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_9","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.providepincode\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": \"0000\" } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#providepasskey-method","text":"Provides a passkey for authentication during a pairing process.","title":"providepasskey method"},{"location":"api/BluetoothControlAPI/#description_6","text":"This method should be called upon receiving a passkeyrequest event during pairing process. If the specified passkey is incorrect or empty the pairing process will be aborted. Also see: devicestatechange , passkeyrequest","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_10","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret integer A six-digit decimal number passkey","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_10","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_10","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing or a passkey has not been requested","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_10","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.providepasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": 123456 } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#confirmpasskey-method","text":"Confirms a passkey for authentication during a pairing process.","title":"confirmpasskey method"},{"location":"api/BluetoothControlAPI/#description_7","text":"This method should be called upon receiving a passkeyconfirmationrequest event during a pairing process. If the confirmation is negative the pairing process will be aborted. Also see: devicestatechange , passkeyconfirmrequest","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_11","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.iscorrect boolean Specifies if the passkey sent in passkeyconfirmrequest event is correct (true) or incorrect (false)","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_11","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_11","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device is currently not pairing or passkey confirmation has not been requested","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_11","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.confirmpasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"iscorrect\": true } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#forget-method","text":"Forgets a known Bluetooth device.","title":"forget method"},{"location":"api/BluetoothControlAPI/#description_8","text":"The device will no longer be listed and its status tracked. If the device is connected and/or paired it will be disconnected and unpaired. Also see: devicestatechange","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_12","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_12","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_12","text":"Message Description ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_12","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.forget\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothControlAPI/#getdevicelist-method","text":"Retrieves a list of known remote Bluetooth devices.","title":"getdevicelist method"},{"location":"api/BluetoothControlAPI/#parameters_13","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_13","text":"Name Type Description result array List of devices result[#] object (device entry) result[#].address string Bluetooth address result[#].type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Result"},{"location":"api/BluetoothControlAPI/#example_13","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.getdevicelist\" }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } ] }","title":"Response"},{"location":"api/BluetoothControlAPI/#getdeviceinfo-method","text":"Retrieves detailed information about a known Bluetooth device.","title":"getdeviceinfo method"},{"location":"api/BluetoothControlAPI/#parameters_14","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#result_14","text":"Name Type Description result object ... result.address string Bluetooth address result.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) result?.name string (optional) Name of the device result?.class integer (optional) Class of device result?.appearance integer (optional) Appearance value result?.services array (optional) List of supported services result?.services[#] string (optional) Service UUID result.connected boolean Indicates if the device is currently connected result.paired boolean Indicates if the device is currently paired","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_13","text":"Message Description ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_14","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#request_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.getdeviceinfo\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"api/BluetoothControlAPI/#response_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"name\": \"Thunder Bluetooth Speaker\", \"class\": 2360324, \"appearance\": 2113, \"services\": [ \"110a\" ], \"connected\": true, \"paired\": true } }","title":"Response"},{"location":"api/BluetoothControlAPI/#properties","text":"The following properties are provided by the BluetoothControl interface: BluetoothControl interface properties: Property Description adapters (read-only) List of local Bluetooth adapters adapter (read-only) Local Bluetooth adapter information devices deprecated (read-only) List of known remote Bluetooth devices device deprecated (read-only) Remote Bluetooth device information","title":"Properties"},{"location":"api/BluetoothControlAPI/#adapters-property","text":"Provides access to the list of local Bluetooth adapters. This property is read-only .","title":"adapters property"},{"location":"api/BluetoothControlAPI/#value","text":"","title":"Value"},{"location":"api/BluetoothControlAPI/#result_15","text":"Name Type Description result array List of local Bluetooth adapters result[#] integer Adapter ID","title":"Result"},{"location":"api/BluetoothControlAPI/#example_15","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapters\" }","title":"Get Request"},{"location":"api/BluetoothControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0 ] }","title":"Get Response"},{"location":"api/BluetoothControlAPI/#adapter-property","text":"Provides access to the local Bluetooth adapter information. This property is read-only .","title":"adapter property"},{"location":"api/BluetoothControlAPI/#value_1","text":"The adapter id argument shall be passed as the index to the property, e.g. BluetoothControl.1.adapter@<adapter id> .","title":"Value"},{"location":"api/BluetoothControlAPI/#result_16","text":"Name Type Description result object Local Bluetooth adapter information result.id integer Interface ID number result.interface string Interface name result.address string Bluetooth address result.type string Adapter type (default: Dual ) result.version integer Version result?.manufacturer integer (optional) Manufacturer company identifer result?.class integer (optional) Class of device result?.name string (optional) Name result?.shortname string (optional) Short name","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_14","text":"Message Description ERROR_UNKNOWN_KEY Unknown adapter device","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_16","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapter@0\" }","title":"Get Request"},{"location":"api/BluetoothControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": 0, \"interface\": \"hci0\", \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Dual\", \"version\": 8, \"manufacturer\": 15, \"class\": 1060, \"name\": \"Thunder Bluetooth Controller\", \"shortname\": \"Thunder\" } }","title":"Get Response"},{"location":"api/BluetoothControlAPI/#devices-property","text":"Provides access to the list of known remote Bluetooth devices. This property is read-only . devices is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"devices property"},{"location":"api/BluetoothControlAPI/#value_2","text":"","title":"Value"},{"location":"api/BluetoothControlAPI/#result_17","text":"Name Type Description result array List of known remote Bluetooth devices result[#] string Bluetooth address","title":"Result"},{"location":"api/BluetoothControlAPI/#example_17","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.devices\" }","title":"Get Request"},{"location":"api/BluetoothControlAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"81:6F:B0:91:9B:FE\" ] }","title":"Get Response"},{"location":"api/BluetoothControlAPI/#device-property","text":"Provides access to the remote Bluetooth device information. This property is read-only . device is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"device property"},{"location":"api/BluetoothControlAPI/#value_3","text":"The device address argument shall be passed as the index to the property, e.g. BluetoothControl.1.device@<device address> .","title":"Value"},{"location":"api/BluetoothControlAPI/#result_18","text":"Name Type Description result object Remote Bluetooth device information result.address string Bluetooth address result.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) result?.name string (optional) Name of the device result?.class integer (optional) Class of device result?.appearance integer (optional) Appearance value result?.services array (optional) List of supported services result?.services[#] string (optional) Service UUID result.connected boolean Indicates if the device is currently connected result.paired boolean Indicates if the device is currently paired","title":"Result"},{"location":"api/BluetoothControlAPI/#errors_15","text":"Message Description ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"api/BluetoothControlAPI/#example_18","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.device@81:6F:B0:91:9B:FE\" }","title":"Get Request"},{"location":"api/BluetoothControlAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"name\": \"Thunder Bluetooth Speaker\", \"class\": 2360324, \"appearance\": 2113, \"services\": [ \"110a\" ], \"connected\": true, \"paired\": true } }","title":"Get Response"},{"location":"api/BluetoothControlAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothControl interface: BluetoothControl interface events: Notification Description discoverablestarted Notifies of entering the discoverable state discoverablecomplete Notifies of leaving the discoverable state scanstarted Notifies of scan start scancomplete Notifies of scan completion devicestatechange Notifies of device state changes pincoderequest Notifies of a PIN code request passkeyrequest Notifies of a passkey request passkeyconfirmrequest Notifies of a passkey confirmation request","title":"Notifications"},{"location":"api/BluetoothControlAPI/#discoverablestarted-notification","text":"Notifies of entering the discoverable state.","title":"discoverablestarted notification"},{"location":"api/BluetoothControlAPI/#description_9","text":"Register to this event to be notified about entering the discoverable state If applicable, this notification may be sent out during registration, reflecting the current status.","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_15","text":"Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) params.mode string Discoverable mode (default: General ) params?.connectable boolean (optional) Indicates connectable advertising (true, LowEnergy only) (default: False )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#example_19","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"discoverablestarted\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BluetoothControlAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.discoverablestarted\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"connectable\": false } }","title":"Message"},{"location":"api/BluetoothControlAPI/#discoverablecomplete-notification","text":"Notifies of leaving the discoverable state.","title":"discoverablecomplete notification"},{"location":"api/BluetoothControlAPI/#description_10","text":"Register to this event to be notified about leaving the discoverable state","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_16","text":"Name Type Description params object ... params.type string Discoverable type (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#example_20","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"discoverablecomplete\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BluetoothControlAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.discoverablecomplete\", \"params\": { \"type\": \"LowEnergy\" } }","title":"Message"},{"location":"api/BluetoothControlAPI/#scanstarted-notification","text":"Notifies of scan start.","title":"scanstarted notification"},{"location":"api/BluetoothControlAPI/#description_11","text":"Register to this event to be notified about device scan start If applicable, this notification may be sent out during registration, reflecting the current status.","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_17","text":"Name Type Description params object ... params.type string Scan type (default: LowEnergy ) params?.mode string (optional) Scan mode (default: General )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#example_21","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"scanstarted\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BluetoothControlAPI/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.scanstarted\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\" } }","title":"Message"},{"location":"api/BluetoothControlAPI/#scancomplete-notification","text":"Notifies of scan completion.","title":"scancomplete notification"},{"location":"api/BluetoothControlAPI/#description_12","text":"Register to this event to be notified about device scan completion","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_18","text":"Name Type Description params object ... params.type string Scan type (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#example_22","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#registration_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"scancomplete\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BluetoothControlAPI/#message_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.scancomplete\", \"params\": { \"type\": \"LowEnergy\" } }","title":"Message"},{"location":"api/BluetoothControlAPI/#devicestatechange-notification","text":"Notifies of device state changes.","title":"devicestatechange notification"},{"location":"api/BluetoothControlAPI/#description_13","text":"Register to this event to be notified about device state changes If applicable, this notification may be sent out during registration, reflecting the current status.","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_19","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) params.state string Device state params?.disconnectreason string (optional) Disconnection reason in case of Disconnected event The device type argument will be passed within the designator, e.g. LowEnergy.client.devicestatechange .","title":"Parameters"},{"location":"api/BluetoothControlAPI/#example_23","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#registration_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"devicestatechange\", \"id\": \"LowEnergy.client\" } }","title":"Registration"},{"location":"api/BluetoothControlAPI/#message_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"LowEnergy.client.devicestatechange\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\", \"state\": \"Disconnected\", \"disconnectreason\": \"ConnectionTimeout\" } }","title":"Message"},{"location":"api/BluetoothControlAPI/#pincoderequest-notification","text":"Notifies of a PIN code request.","title":"pincoderequest notification"},{"location":"api/BluetoothControlAPI/#description_14","text":"Register to this event to be notified about PIN code requests during a legacy pairing process. Upon receiving this event the client is required to respond with a providepincode call in order to complete the pairing procedure. The PIN code value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Note that this event will never be send for a Bluetooth LowEnergy device","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_20","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#example_24","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#registration_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"pincoderequest\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BluetoothControlAPI/#message_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.pincoderequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\" } }","title":"Message"},{"location":"api/BluetoothControlAPI/#passkeyrequest-notification","text":"Notifies of a passkey request.","title":"passkeyrequest notification"},{"location":"api/BluetoothControlAPI/#description_15","text":"Register to this event to be notified about passkey requests that may be required during a pairing process. Upon receiving this event the client is required to respond with a providepasskey call in order to complete the pairing procedure. The passkey value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_21","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"api/BluetoothControlAPI/#example_25","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#registration_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"passkeyrequest\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BluetoothControlAPI/#message_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.passkeyrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\" } }","title":"Message"},{"location":"api/BluetoothControlAPI/#passkeyconfirmrequest-notification","text":"Notifies of a passkey confirmation request.","title":"passkeyconfirmrequest notification"},{"location":"api/BluetoothControlAPI/#description_16","text":"Register to this event to be notified about passkey confirmation requests that may required during a pairing process. Upon receiving this event the client is required to respond with a passkeyconfirm call in order to complete the pairing procedure. The passkey confirmation would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted","title":"Description"},{"location":"api/BluetoothControlAPI/#parameters_22","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret integer A six-digit decimal number passkey sent by the remote device for confirmation; may be 0 for a simple accept/forbid paring request","title":"Parameters"},{"location":"api/BluetoothControlAPI/#example_26","text":"","title":"Example"},{"location":"api/BluetoothControlAPI/#registration_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"passkeyconfirmrequest\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BluetoothControlAPI/#message_7","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.passkeyconfirmrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": 123456 } }","title":"Message"},{"location":"api/BluetoothRemoteControlAPI/","text":"Bluetooth Remote Control API Version: 1.0.0 Status: BluetoothRemoteControl interface for Thunder framework. (Defined by BluetoothRemoteControl.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the BluetoothRemoteControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Bluetooth Remote Control JSON-RPC interface. Methods The following methods are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface methods: Method Description assign Assigns a bluetooth device as a remote control unit revoke Revokes the current remote control assignment assign method Assigns a bluetooth device as a remote control unit. Parameters Name Type Description params object ... params.address string Bluetooth address Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Bluetooth unavailable ERROR_UNKNOWN_KEY Device unknown ERROR_GENERAL Failed to assign the device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.assign\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } revoke method Revokes the current remote control assignment. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_ILLEGAL_STATE Remote not assigned Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.revoke\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface properties: Property Description name (read-only) Unit name address (read-only) Bluetooth address of the unit info (read-only) Unit auxiliary information batterylevel (read-only) Battery level voice Enable or Disable the flow of Voice data fragments from the remote audioprofile (read-only) Audio profile details name property Provides access to the unit name. This property is read-only . Value Result Name Type Description result string Name of the remote control unit Errors Message Description ERROR_ILLEGAL_STATE No remote has been assigned Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.name\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Acme Bluetooth RCU\" } address property Provides access to the bluetooth address of the unit. This property is read-only . Value Result Name Type Description result string Bluetooth address Errors Message Description ERROR_ILLEGAL_STATE No remote has been assigned Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.address\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"81:6F:B0:91:9B:FE\" } info property Provides access to the unit auxiliary information. This property is read-only . Value Result Name Type Description result object Unit auxiliary information result?.model string (optional) Unit model name or number result?.serial string (optional) Unit serial number result?.firmware string (optional) Unit firmware revision result?.software string (optional) Unit software revision result?.manufacturer string (optional) Unit manufacturer name Errors Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_GENERAL Failed to retrieve information Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.info\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Acme 1500 Plus\", \"serial\": \"1234567890\", \"firmware\": \"1.0\", \"software\": \"1.0\", \"manufacturer\": \"Acme Inc.\" } } batterylevel property Provides access to the battery level. This property is read-only . Value Result Name Type Description result integer Remote control unit's battery level in percentage Errors Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_GENERAL Failed to retrieve battery level Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.batterylevel\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 50 } voice property Provides access to the enable or Disable the flow of Voice data fragments from the remote. Value Name Type Description (property) boolean Enable (true) or Disable (false) flow of voice data Result Name Type Description result boolean Enable (true) or Disable (false) flow of voice data Errors Message Description ERROR_GENERAL Failed to set the voice flow Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } audioprofile property Provides access to the audio profile details. This property is read-only . Value Result Name Type Description result object Audio profile details result.codec string Name of the audio codec ( pcm for uncompressed audio) result.channels integer Number of audio channels (1: mono, 2: stereo, etc.) result.rate integer Sample rate (in Hz) result.resolution integer Sample resolution (in bits per sample) Errors Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_UNKNOWN_KEY The supplied audio profile is unknown Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.audioprofile\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"ADPCM\", \"channels\": 1, \"rate\": 16000, \"resolution\": 16 } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface events: Notification Description audiotransmission Notifies about audio data transmission audioframe Notifies about new audio data available batterylevelchange Notifies about battery level changes audiotransmission notification Notifies about audio data transmission. Description Register to this event to be notified about audio transmission status Parameters Name Type Description params object ... params?.profile string (optional) Type of audio profile, marking start of transmission; empty in case of end of transmission Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"audiotransmission\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.audiotransmission\", \"params\": { \"profile\": \"pcm\" } } audioframe notification Notifies about new audio data available. Description Register to this event to be notified about audio data Parameters Name Type Description params object ... params?.seq integer (optional) Sequence number of the audio frame within current audio transmission params.data string Base64 representation of the binary data of the audio frame; format of the data is specified by the audio profile denoted by the most recent audiotransmission notification Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"audioframe\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.audioframe\", \"params\": { \"seq\": 1, \"data\": \"yKMHiYh6qJiDspB6S7ihlKOAbivApYEQDCgY0aECCQhpkAqZogP1ECk9GbHGEAkwG8Ax8wArgaAtEMjGQIoYCKKgGCuzBSA/iuWkKEwamLKzOKoCeR2hwQQZKqgBKKqELoGQwQ==\" } } batterylevelchange notification Notifies about battery level changes. Description Register to this event to be notified about battery level drops Parameters Name Type Description params object ... params.level integer Battery level (in percentage) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"batterylevelchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.batterylevelchange\", \"params\": { \"level\": 50 } }","title":"Bluetooth Remote Control API"},{"location":"api/BluetoothRemoteControlAPI/#bluetooth-remote-control-api","text":"Version: 1.0.0 Status: BluetoothRemoteControl interface for Thunder framework. (Defined by BluetoothRemoteControl.json )","title":"Bluetooth Remote Control API"},{"location":"api/BluetoothRemoteControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/BluetoothRemoteControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/BluetoothRemoteControlAPI/#scope","text":"This document describes purpose and functionality of the BluetoothRemoteControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/BluetoothRemoteControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/BluetoothRemoteControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/BluetoothRemoteControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/BluetoothRemoteControlAPI/#description","text":"Bluetooth Remote Control JSON-RPC interface.","title":"Description"},{"location":"api/BluetoothRemoteControlAPI/#methods","text":"The following methods are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface methods: Method Description assign Assigns a bluetooth device as a remote control unit revoke Revokes the current remote control assignment","title":"Methods"},{"location":"api/BluetoothRemoteControlAPI/#assign-method","text":"Assigns a bluetooth device as a remote control unit.","title":"assign method"},{"location":"api/BluetoothRemoteControlAPI/#parameters","text":"Name Type Description params object ... params.address string Bluetooth address","title":"Parameters"},{"location":"api/BluetoothRemoteControlAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothRemoteControlAPI/#errors","text":"Message Description ERROR_UNAVAILABLE Bluetooth unavailable ERROR_UNKNOWN_KEY Device unknown ERROR_GENERAL Failed to assign the device","title":"Errors"},{"location":"api/BluetoothRemoteControlAPI/#example","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.assign\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"api/BluetoothRemoteControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothRemoteControlAPI/#revoke-method","text":"Revokes the current remote control assignment.","title":"revoke method"},{"location":"api/BluetoothRemoteControlAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/BluetoothRemoteControlAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BluetoothRemoteControlAPI/#errors_1","text":"Message Description ERROR_ILLEGAL_STATE Remote not assigned","title":"Errors"},{"location":"api/BluetoothRemoteControlAPI/#example_1","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.revoke\" }","title":"Request"},{"location":"api/BluetoothRemoteControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BluetoothRemoteControlAPI/#properties","text":"The following properties are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface properties: Property Description name (read-only) Unit name address (read-only) Bluetooth address of the unit info (read-only) Unit auxiliary information batterylevel (read-only) Battery level voice Enable or Disable the flow of Voice data fragments from the remote audioprofile (read-only) Audio profile details","title":"Properties"},{"location":"api/BluetoothRemoteControlAPI/#name-property","text":"Provides access to the unit name. This property is read-only .","title":"name property"},{"location":"api/BluetoothRemoteControlAPI/#value","text":"","title":"Value"},{"location":"api/BluetoothRemoteControlAPI/#result_2","text":"Name Type Description result string Name of the remote control unit","title":"Result"},{"location":"api/BluetoothRemoteControlAPI/#errors_2","text":"Message Description ERROR_ILLEGAL_STATE No remote has been assigned","title":"Errors"},{"location":"api/BluetoothRemoteControlAPI/#example_2","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.name\" }","title":"Get Request"},{"location":"api/BluetoothRemoteControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Acme Bluetooth RCU\" }","title":"Get Response"},{"location":"api/BluetoothRemoteControlAPI/#address-property","text":"Provides access to the bluetooth address of the unit. This property is read-only .","title":"address property"},{"location":"api/BluetoothRemoteControlAPI/#value_1","text":"","title":"Value"},{"location":"api/BluetoothRemoteControlAPI/#result_3","text":"Name Type Description result string Bluetooth address","title":"Result"},{"location":"api/BluetoothRemoteControlAPI/#errors_3","text":"Message Description ERROR_ILLEGAL_STATE No remote has been assigned","title":"Errors"},{"location":"api/BluetoothRemoteControlAPI/#example_3","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.address\" }","title":"Get Request"},{"location":"api/BluetoothRemoteControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"81:6F:B0:91:9B:FE\" }","title":"Get Response"},{"location":"api/BluetoothRemoteControlAPI/#info-property","text":"Provides access to the unit auxiliary information. This property is read-only .","title":"info property"},{"location":"api/BluetoothRemoteControlAPI/#value_2","text":"","title":"Value"},{"location":"api/BluetoothRemoteControlAPI/#result_4","text":"Name Type Description result object Unit auxiliary information result?.model string (optional) Unit model name or number result?.serial string (optional) Unit serial number result?.firmware string (optional) Unit firmware revision result?.software string (optional) Unit software revision result?.manufacturer string (optional) Unit manufacturer name","title":"Result"},{"location":"api/BluetoothRemoteControlAPI/#errors_4","text":"Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_GENERAL Failed to retrieve information","title":"Errors"},{"location":"api/BluetoothRemoteControlAPI/#example_4","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.info\" }","title":"Get Request"},{"location":"api/BluetoothRemoteControlAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Acme 1500 Plus\", \"serial\": \"1234567890\", \"firmware\": \"1.0\", \"software\": \"1.0\", \"manufacturer\": \"Acme Inc.\" } }","title":"Get Response"},{"location":"api/BluetoothRemoteControlAPI/#batterylevel-property","text":"Provides access to the battery level. This property is read-only .","title":"batterylevel property"},{"location":"api/BluetoothRemoteControlAPI/#value_3","text":"","title":"Value"},{"location":"api/BluetoothRemoteControlAPI/#result_5","text":"Name Type Description result integer Remote control unit's battery level in percentage","title":"Result"},{"location":"api/BluetoothRemoteControlAPI/#errors_5","text":"Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_GENERAL Failed to retrieve battery level","title":"Errors"},{"location":"api/BluetoothRemoteControlAPI/#example_5","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.batterylevel\" }","title":"Get Request"},{"location":"api/BluetoothRemoteControlAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 50 }","title":"Get Response"},{"location":"api/BluetoothRemoteControlAPI/#voice-property","text":"Provides access to the enable or Disable the flow of Voice data fragments from the remote.","title":"voice property"},{"location":"api/BluetoothRemoteControlAPI/#value_4","text":"Name Type Description (property) boolean Enable (true) or Disable (false) flow of voice data","title":"Value"},{"location":"api/BluetoothRemoteControlAPI/#result_6","text":"Name Type Description result boolean Enable (true) or Disable (false) flow of voice data","title":"Result"},{"location":"api/BluetoothRemoteControlAPI/#errors_6","text":"Message Description ERROR_GENERAL Failed to set the voice flow","title":"Errors"},{"location":"api/BluetoothRemoteControlAPI/#example_6","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\" }","title":"Get Request"},{"location":"api/BluetoothRemoteControlAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"api/BluetoothRemoteControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\", \"params\": false }","title":"Set Request"},{"location":"api/BluetoothRemoteControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/BluetoothRemoteControlAPI/#audioprofile-property","text":"Provides access to the audio profile details. This property is read-only .","title":"audioprofile property"},{"location":"api/BluetoothRemoteControlAPI/#value_5","text":"","title":"Value"},{"location":"api/BluetoothRemoteControlAPI/#result_7","text":"Name Type Description result object Audio profile details result.codec string Name of the audio codec ( pcm for uncompressed audio) result.channels integer Number of audio channels (1: mono, 2: stereo, etc.) result.rate integer Sample rate (in Hz) result.resolution integer Sample resolution (in bits per sample)","title":"Result"},{"location":"api/BluetoothRemoteControlAPI/#errors_7","text":"Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_UNKNOWN_KEY The supplied audio profile is unknown","title":"Errors"},{"location":"api/BluetoothRemoteControlAPI/#example_7","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.audioprofile\" }","title":"Get Request"},{"location":"api/BluetoothRemoteControlAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"ADPCM\", \"channels\": 1, \"rate\": 16000, \"resolution\": 16 } }","title":"Get Response"},{"location":"api/BluetoothRemoteControlAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothRemoteControl interface: BluetoothRemoteControl interface events: Notification Description audiotransmission Notifies about audio data transmission audioframe Notifies about new audio data available batterylevelchange Notifies about battery level changes","title":"Notifications"},{"location":"api/BluetoothRemoteControlAPI/#audiotransmission-notification","text":"Notifies about audio data transmission.","title":"audiotransmission notification"},{"location":"api/BluetoothRemoteControlAPI/#description_1","text":"Register to this event to be notified about audio transmission status","title":"Description"},{"location":"api/BluetoothRemoteControlAPI/#parameters_2","text":"Name Type Description params object ... params?.profile string (optional) Type of audio profile, marking start of transmission; empty in case of end of transmission","title":"Parameters"},{"location":"api/BluetoothRemoteControlAPI/#example_8","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"audiotransmission\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BluetoothRemoteControlAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.audiotransmission\", \"params\": { \"profile\": \"pcm\" } }","title":"Message"},{"location":"api/BluetoothRemoteControlAPI/#audioframe-notification","text":"Notifies about new audio data available.","title":"audioframe notification"},{"location":"api/BluetoothRemoteControlAPI/#description_2","text":"Register to this event to be notified about audio data","title":"Description"},{"location":"api/BluetoothRemoteControlAPI/#parameters_3","text":"Name Type Description params object ... params?.seq integer (optional) Sequence number of the audio frame within current audio transmission params.data string Base64 representation of the binary data of the audio frame; format of the data is specified by the audio profile denoted by the most recent audiotransmission notification","title":"Parameters"},{"location":"api/BluetoothRemoteControlAPI/#example_9","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"audioframe\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BluetoothRemoteControlAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.audioframe\", \"params\": { \"seq\": 1, \"data\": \"yKMHiYh6qJiDspB6S7ihlKOAbivApYEQDCgY0aECCQhpkAqZogP1ECk9GbHGEAkwG8Ax8wArgaAtEMjGQIoYCKKgGCuzBSA/iuWkKEwamLKzOKoCeR2hwQQZKqgBKKqELoGQwQ==\" } }","title":"Message"},{"location":"api/BluetoothRemoteControlAPI/#batterylevelchange-notification","text":"Notifies about battery level changes.","title":"batterylevelchange notification"},{"location":"api/BluetoothRemoteControlAPI/#description_3","text":"Register to this event to be notified about battery level drops","title":"Description"},{"location":"api/BluetoothRemoteControlAPI/#parameters_4","text":"Name Type Description params object ... params.level integer Battery level (in percentage)","title":"Parameters"},{"location":"api/BluetoothRemoteControlAPI/#example_10","text":"","title":"Example"},{"location":"api/BluetoothRemoteControlAPI/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"batterylevelchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BluetoothRemoteControlAPI/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.batterylevelchange\", \"params\": { \"level\": 50 } }","title":"Message"},{"location":"api/BrowserAPI/","text":"Browser API Version: 1.0.0 Status: Browser interface for Thunder framework. (Defined by Browser.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Browser interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Browser JSON-RPC interface. Methods The following methods are provided by the Browser interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Browser interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps (read-only) Current number of frames per second the browser is rendering url property Provides access to the URL loaded in the browser. Also see: urlchange Value Name Type Description (property) string URL loaded in the browser Result Name Type Description result string URL loaded in the browser Errors Message Description ERROR_INCORRECT_URL Incorrect URL given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.url\", \"params\": \"https://www.google.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the current browser visibility. Also see: visibilitychange Value Name Type Description (property) string Current browser visibility Result Name Type Description result string Current browser visibility Errors Message Description ERROR_UNAVAILABLE Returned when the operation is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current number of frames per second the browser is rendering. This property is read-only . Value Result Name Type Description result integer Current number of frames per second the browser is rendering Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Browser interface: Browser interface events: Notification Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser pageclosure Notifies that the web page requests to close its window urlchange notification Signals a URL change in the browser. Parameters Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) (default: True ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } } visibilitychange notification Signals a visibility change of the browser. Parameters Name Type Description params object ... params.hidden boolean Determines if the browser has been hidden (true) or made visible (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } } pageclosure notification Notifies that the web page requests to close its window. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.register\", \"params\": { \"event\": \"pageclosure\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.pageclosure\" }","title":"Browser API"},{"location":"api/BrowserAPI/#browser-api","text":"Version: 1.0.0 Status: Browser interface for Thunder framework. (Defined by Browser.json )","title":"Browser API"},{"location":"api/BrowserAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/BrowserAPI/#introduction","text":"","title":"Introduction"},{"location":"api/BrowserAPI/#scope","text":"This document describes purpose and functionality of the Browser interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/BrowserAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/BrowserAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/BrowserAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/BrowserAPI/#description","text":"Browser JSON-RPC interface.","title":"Description"},{"location":"api/BrowserAPI/#methods","text":"The following methods are provided by the Browser interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"api/BrowserAPI/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"api/BrowserAPI/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"api/BrowserAPI/#parameters","text":"Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"api/BrowserAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/BrowserAPI/#errors","text":"Message Description ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"api/BrowserAPI/#example","text":"","title":"Example"},{"location":"api/BrowserAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"api/BrowserAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BrowserAPI/#properties","text":"The following properties are provided by the Browser interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps (read-only) Current number of frames per second the browser is rendering","title":"Properties"},{"location":"api/BrowserAPI/#url-property","text":"Provides access to the URL loaded in the browser. Also see: urlchange","title":"url property"},{"location":"api/BrowserAPI/#value","text":"Name Type Description (property) string URL loaded in the browser","title":"Value"},{"location":"api/BrowserAPI/#result_1","text":"Name Type Description result string URL loaded in the browser","title":"Result"},{"location":"api/BrowserAPI/#errors_1","text":"Message Description ERROR_INCORRECT_URL Incorrect URL given","title":"Errors"},{"location":"api/BrowserAPI/#example_1","text":"","title":"Example"},{"location":"api/BrowserAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.url\" }","title":"Get Request"},{"location":"api/BrowserAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" }","title":"Get Response"},{"location":"api/BrowserAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.url\", \"params\": \"https://www.google.com\" }","title":"Set Request"},{"location":"api/BrowserAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/BrowserAPI/#visibility-property","text":"Provides access to the current browser visibility. Also see: visibilitychange","title":"visibility property"},{"location":"api/BrowserAPI/#value_1","text":"Name Type Description (property) string Current browser visibility","title":"Value"},{"location":"api/BrowserAPI/#result_2","text":"Name Type Description result string Current browser visibility","title":"Result"},{"location":"api/BrowserAPI/#errors_2","text":"Message Description ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"api/BrowserAPI/#example_2","text":"","title":"Example"},{"location":"api/BrowserAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.visibility\" }","title":"Get Request"},{"location":"api/BrowserAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" }","title":"Get Response"},{"location":"api/BrowserAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"api/BrowserAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/BrowserAPI/#fps-property","text":"Provides access to the current number of frames per second the browser is rendering. This property is read-only .","title":"fps property"},{"location":"api/BrowserAPI/#value_2","text":"","title":"Value"},{"location":"api/BrowserAPI/#result_3","text":"Name Type Description result integer Current number of frames per second the browser is rendering","title":"Result"},{"location":"api/BrowserAPI/#example_3","text":"","title":"Example"},{"location":"api/BrowserAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.fps\" }","title":"Get Request"},{"location":"api/BrowserAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 }","title":"Get Response"},{"location":"api/BrowserAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Browser interface: Browser interface events: Notification Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser pageclosure Notifies that the web page requests to close its window","title":"Notifications"},{"location":"api/BrowserAPI/#urlchange-notification","text":"Signals a URL change in the browser.","title":"urlchange notification"},{"location":"api/BrowserAPI/#parameters_1","text":"Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) (default: True )","title":"Parameters"},{"location":"api/BrowserAPI/#example_4","text":"","title":"Example"},{"location":"api/BrowserAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BrowserAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } }","title":"Message"},{"location":"api/BrowserAPI/#visibilitychange-notification","text":"Signals a visibility change of the browser.","title":"visibilitychange notification"},{"location":"api/BrowserAPI/#parameters_2","text":"Name Type Description params object ... params.hidden boolean Determines if the browser has been hidden (true) or made visible (false)","title":"Parameters"},{"location":"api/BrowserAPI/#example_5","text":"","title":"Example"},{"location":"api/BrowserAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BrowserAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Message"},{"location":"api/BrowserAPI/#pageclosure-notification","text":"Notifies that the web page requests to close its window.","title":"pageclosure notification"},{"location":"api/BrowserAPI/#parameters_3","text":"This notification carries no parameters.","title":"Parameters"},{"location":"api/BrowserAPI/#example_6","text":"","title":"Example"},{"location":"api/BrowserAPI/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Browser.1.register\", \"params\": { \"event\": \"pageclosure\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BrowserAPI/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.pageclosure\" }","title":"Message"},{"location":"api/BrowserCookieJarAPI/","text":"BrowserCookieJar API Version: 1.0.0 Status: BrowserCookieJar interface for Thunder framework. (Defined with IBrowserCookieJar in IBrowser.h ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the BrowserCookieJar interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description BrowserCookieJar JSON-RPC interface. Properties The following properties are provided by the BrowserCookieJar interface: BrowserCookieJar interface properties: Property Description cookiejar Get/Set CookieJar config details cookiejar property Provides access to the get/Set CookieJar config details. Value Name Type Description (property) object Get/Set CookieJar config details (property).version integer Version of payload format (property).checksum integer The checksum of the string used for payload creation (property).payload string Base64 string representation of compressed and encrypted cookies Result Name Type Description result object Config info CookieJar result.version integer Version of payload format result.checksum integer The checksum of the string used for payload creation result.payload string Base64 string representation of compressed and encrypted cookies Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserCookieJar.1.cookiejar\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"version\": 0, \"checksum\": 0, \"payload\": \"...\" } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserCookieJar.1.cookiejar\", \"params\": { \"version\": 0, \"checksum\": 0, \"payload\": \"...\" } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BrowserCookieJar interface: BrowserCookieJar interface events: Notification Description cookiejarchanged Notifies that cookies were added, removed or modified cookiejarchanged notification Notifies that cookies were added, removed or modified. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserCookieJar.1.register\", \"params\": { \"event\": \"cookiejarchanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.cookiejarchanged\" }","title":"BrowserCookieJar API"},{"location":"api/BrowserCookieJarAPI/#browsercookiejar-api","text":"Version: 1.0.0 Status: BrowserCookieJar interface for Thunder framework. (Defined with IBrowserCookieJar in IBrowser.h )","title":"BrowserCookieJar API"},{"location":"api/BrowserCookieJarAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/BrowserCookieJarAPI/#introduction","text":"","title":"Introduction"},{"location":"api/BrowserCookieJarAPI/#scope","text":"This document describes purpose and functionality of the BrowserCookieJar interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/BrowserCookieJarAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/BrowserCookieJarAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/BrowserCookieJarAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/BrowserCookieJarAPI/#description","text":"BrowserCookieJar JSON-RPC interface.","title":"Description"},{"location":"api/BrowserCookieJarAPI/#properties","text":"The following properties are provided by the BrowserCookieJar interface: BrowserCookieJar interface properties: Property Description cookiejar Get/Set CookieJar config details","title":"Properties"},{"location":"api/BrowserCookieJarAPI/#cookiejar-property","text":"Provides access to the get/Set CookieJar config details.","title":"cookiejar property"},{"location":"api/BrowserCookieJarAPI/#value","text":"Name Type Description (property) object Get/Set CookieJar config details (property).version integer Version of payload format (property).checksum integer The checksum of the string used for payload creation (property).payload string Base64 string representation of compressed and encrypted cookies","title":"Value"},{"location":"api/BrowserCookieJarAPI/#result","text":"Name Type Description result object Config info CookieJar result.version integer Version of payload format result.checksum integer The checksum of the string used for payload creation result.payload string Base64 string representation of compressed and encrypted cookies","title":"Result"},{"location":"api/BrowserCookieJarAPI/#example","text":"","title":"Example"},{"location":"api/BrowserCookieJarAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserCookieJar.1.cookiejar\" }","title":"Get Request"},{"location":"api/BrowserCookieJarAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"version\": 0, \"checksum\": 0, \"payload\": \"...\" } }","title":"Get Response"},{"location":"api/BrowserCookieJarAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserCookieJar.1.cookiejar\", \"params\": { \"version\": 0, \"checksum\": 0, \"payload\": \"...\" } }","title":"Set Request"},{"location":"api/BrowserCookieJarAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/BrowserCookieJarAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BrowserCookieJar interface: BrowserCookieJar interface events: Notification Description cookiejarchanged Notifies that cookies were added, removed or modified","title":"Notifications"},{"location":"api/BrowserCookieJarAPI/#cookiejarchanged-notification","text":"Notifies that cookies were added, removed or modified.","title":"cookiejarchanged notification"},{"location":"api/BrowserCookieJarAPI/#parameters","text":"This notification carries no parameters.","title":"Parameters"},{"location":"api/BrowserCookieJarAPI/#example_1","text":"","title":"Example"},{"location":"api/BrowserCookieJarAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserCookieJar.1.register\", \"params\": { \"event\": \"cookiejarchanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/BrowserCookieJarAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.cookiejarchanged\" }","title":"Message"},{"location":"api/BrowserResourcesAPI/","text":"BrowserResources API Version: 1.0.0 Status: BrowserResources interface for Thunder framework. (Defined with IBrowserResources in IBrowser.h ) Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the BrowserResources interface (version 1.0.0). It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description BrowserResources JSON-RPC interface. Properties The following properties are provided by the BrowserResources interface: BrowserResources interface properties: Property Description userscripts User scripts used by the browser userstylesheets User style sheets used by the browser userscripts property Provides access to the user scripts used by the browser. Value Name Type Description (property) array User scripts used by the browser (property)[#] string ... Result Name Type Description result array JSON array containing URIs pointing to user scripts, supported protocols: file:// result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userscripts\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userscripts\", \"params\": [ \"...\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } userstylesheets property Provides access to the user style sheets used by the browser. Value Name Type Description (property) array User style sheets used by the browser (property)[#] string ... Result Name Type Description result array JSON array containing URIs pointing to user style sheets, supported protocols: file:// result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userstylesheets\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userstylesheets\", \"params\": [ \"...\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"BrowserResources API"},{"location":"api/BrowserResourcesAPI/#browserresources-api","text":"Version: 1.0.0 Status: BrowserResources interface for Thunder framework. (Defined with IBrowserResources in IBrowser.h )","title":"BrowserResources API"},{"location":"api/BrowserResourcesAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"api/BrowserResourcesAPI/#introduction","text":"","title":"Introduction"},{"location":"api/BrowserResourcesAPI/#scope","text":"This document describes purpose and functionality of the BrowserResources interface (version 1.0.0). It includes detailed specification about its properties provided.","title":"Scope"},{"location":"api/BrowserResourcesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/BrowserResourcesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/BrowserResourcesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/BrowserResourcesAPI/#description","text":"BrowserResources JSON-RPC interface.","title":"Description"},{"location":"api/BrowserResourcesAPI/#properties","text":"The following properties are provided by the BrowserResources interface: BrowserResources interface properties: Property Description userscripts User scripts used by the browser userstylesheets User style sheets used by the browser","title":"Properties"},{"location":"api/BrowserResourcesAPI/#userscripts-property","text":"Provides access to the user scripts used by the browser.","title":"userscripts property"},{"location":"api/BrowserResourcesAPI/#value","text":"Name Type Description (property) array User scripts used by the browser (property)[#] string ...","title":"Value"},{"location":"api/BrowserResourcesAPI/#result","text":"Name Type Description result array JSON array containing URIs pointing to user scripts, supported protocols: file:// result[#] string ...","title":"Result"},{"location":"api/BrowserResourcesAPI/#example","text":"","title":"Example"},{"location":"api/BrowserResourcesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userscripts\" }","title":"Get Request"},{"location":"api/BrowserResourcesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"api/BrowserResourcesAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userscripts\", \"params\": [ \"...\" ] }","title":"Set Request"},{"location":"api/BrowserResourcesAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/BrowserResourcesAPI/#userstylesheets-property","text":"Provides access to the user style sheets used by the browser.","title":"userstylesheets property"},{"location":"api/BrowserResourcesAPI/#value_1","text":"Name Type Description (property) array User style sheets used by the browser (property)[#] string ...","title":"Value"},{"location":"api/BrowserResourcesAPI/#result_1","text":"Name Type Description result array JSON array containing URIs pointing to user style sheets, supported protocols: file:// result[#] string ...","title":"Result"},{"location":"api/BrowserResourcesAPI/#example_1","text":"","title":"Example"},{"location":"api/BrowserResourcesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userstylesheets\" }","title":"Get Request"},{"location":"api/BrowserResourcesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"api/BrowserResourcesAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserResources.1.userstylesheets\", \"params\": [ \"...\" ] }","title":"Set Request"},{"location":"api/BrowserResourcesAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/BrowserScriptingAPI/","text":"BrowserScripting API Version: 1.0.0 Status: BrowserScripting interface for Thunder framework. (Defined with IBrowserScripting in IBrowser.h ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the BrowserScripting interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description BrowserScripting JSON-RPC interface. Methods The following methods are provided by the BrowserScripting interface: BrowserScripting interface methods: Method Description runjavascript Run javascript in main frame adduserscript Add user script to be executed at document start removealluserscripts Remove all user scripts runjavascript method Run javascript in main frame. Parameters Name Type Description params object ... params.script string Utf8 encoded JS code string Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserScripting.1.runjavascript\", \"params\": { \"script\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } adduserscript method Add user script to be executed at document start. Parameters Name Type Description params object ... params.script string Utf8 encoded JS code string params.topframeonly boolean Enable only top frame Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserScripting.1.adduserscript\", \"params\": { \"script\": \"...\", \"topframeonly\": false } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } removealluserscripts method Remove all user scripts. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserScripting.1.removealluserscripts\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"BrowserScripting API"},{"location":"api/BrowserScriptingAPI/#browserscripting-api","text":"Version: 1.0.0 Status: BrowserScripting interface for Thunder framework. (Defined with IBrowserScripting in IBrowser.h )","title":"BrowserScripting API"},{"location":"api/BrowserScriptingAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/BrowserScriptingAPI/#introduction","text":"","title":"Introduction"},{"location":"api/BrowserScriptingAPI/#scope","text":"This document describes purpose and functionality of the BrowserScripting interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/BrowserScriptingAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/BrowserScriptingAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/BrowserScriptingAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/BrowserScriptingAPI/#description","text":"BrowserScripting JSON-RPC interface.","title":"Description"},{"location":"api/BrowserScriptingAPI/#methods","text":"The following methods are provided by the BrowserScripting interface: BrowserScripting interface methods: Method Description runjavascript Run javascript in main frame adduserscript Add user script to be executed at document start removealluserscripts Remove all user scripts","title":"Methods"},{"location":"api/BrowserScriptingAPI/#runjavascript-method","text":"Run javascript in main frame.","title":"runjavascript method"},{"location":"api/BrowserScriptingAPI/#parameters","text":"Name Type Description params object ... params.script string Utf8 encoded JS code string","title":"Parameters"},{"location":"api/BrowserScriptingAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/BrowserScriptingAPI/#example","text":"","title":"Example"},{"location":"api/BrowserScriptingAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserScripting.1.runjavascript\", \"params\": { \"script\": \"...\" } }","title":"Request"},{"location":"api/BrowserScriptingAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BrowserScriptingAPI/#adduserscript-method","text":"Add user script to be executed at document start.","title":"adduserscript method"},{"location":"api/BrowserScriptingAPI/#parameters_1","text":"Name Type Description params object ... params.script string Utf8 encoded JS code string params.topframeonly boolean Enable only top frame","title":"Parameters"},{"location":"api/BrowserScriptingAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/BrowserScriptingAPI/#example_1","text":"","title":"Example"},{"location":"api/BrowserScriptingAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserScripting.1.adduserscript\", \"params\": { \"script\": \"...\", \"topframeonly\": false } }","title":"Request"},{"location":"api/BrowserScriptingAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BrowserScriptingAPI/#removealluserscripts-method","text":"Remove all user scripts.","title":"removealluserscripts method"},{"location":"api/BrowserScriptingAPI/#parameters_2","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/BrowserScriptingAPI/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/BrowserScriptingAPI/#example_2","text":"","title":"Example"},{"location":"api/BrowserScriptingAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserScripting.1.removealluserscripts\" }","title":"Request"},{"location":"api/BrowserScriptingAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/BrowserSecurityAPI/","text":"BrowserSecurity API Version: 1.0.0 Status: BrowserSecurity interface for Thunder framework. (Defined with IBrowserSecurity in IBrowser.h ) Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the BrowserSecurity interface (version 1.0.0). It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description BrowserSecurity JSON-RPC interface. Properties The following properties are provided by the BrowserSecurity interface: BrowserSecurity interface properties: Property Description securityprofile Security profile for secure connections mixedcontentpolicy Mixed content policy securityprofile property Provides access to the security profile for secure connections. Value Name Type Description (property) string Security profile for secure connections Result Name Type Description result string Security profile for secure connections Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.securityprofile\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"compatible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.securityprofile\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } mixedcontentpolicy property Provides access to the mixed content policy. Value Name Type Description (property) string Mixed content policy (must be one of the following: allowed, blocked ) Result Name Type Description result string Mixed content policy type (must be one of the following: allowed, blocked ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.mixedcontentpolicy\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"allowed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.mixedcontentpolicy\", \"params\": \"allowed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"BrowserSecurity API"},{"location":"api/BrowserSecurityAPI/#browsersecurity-api","text":"Version: 1.0.0 Status: BrowserSecurity interface for Thunder framework. (Defined with IBrowserSecurity in IBrowser.h )","title":"BrowserSecurity API"},{"location":"api/BrowserSecurityAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"api/BrowserSecurityAPI/#introduction","text":"","title":"Introduction"},{"location":"api/BrowserSecurityAPI/#scope","text":"This document describes purpose and functionality of the BrowserSecurity interface (version 1.0.0). It includes detailed specification about its properties provided.","title":"Scope"},{"location":"api/BrowserSecurityAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/BrowserSecurityAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/BrowserSecurityAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/BrowserSecurityAPI/#description","text":"BrowserSecurity JSON-RPC interface.","title":"Description"},{"location":"api/BrowserSecurityAPI/#properties","text":"The following properties are provided by the BrowserSecurity interface: BrowserSecurity interface properties: Property Description securityprofile Security profile for secure connections mixedcontentpolicy Mixed content policy","title":"Properties"},{"location":"api/BrowserSecurityAPI/#securityprofile-property","text":"Provides access to the security profile for secure connections.","title":"securityprofile property"},{"location":"api/BrowserSecurityAPI/#value","text":"Name Type Description (property) string Security profile for secure connections","title":"Value"},{"location":"api/BrowserSecurityAPI/#result","text":"Name Type Description result string Security profile for secure connections","title":"Result"},{"location":"api/BrowserSecurityAPI/#example","text":"","title":"Example"},{"location":"api/BrowserSecurityAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.securityprofile\" }","title":"Get Request"},{"location":"api/BrowserSecurityAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"compatible\" }","title":"Get Response"},{"location":"api/BrowserSecurityAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.securityprofile\", \"params\": \"...\" }","title":"Set Request"},{"location":"api/BrowserSecurityAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/BrowserSecurityAPI/#mixedcontentpolicy-property","text":"Provides access to the mixed content policy.","title":"mixedcontentpolicy property"},{"location":"api/BrowserSecurityAPI/#value_1","text":"Name Type Description (property) string Mixed content policy (must be one of the following: allowed, blocked )","title":"Value"},{"location":"api/BrowserSecurityAPI/#result_1","text":"Name Type Description result string Mixed content policy type (must be one of the following: allowed, blocked )","title":"Result"},{"location":"api/BrowserSecurityAPI/#example_1","text":"","title":"Example"},{"location":"api/BrowserSecurityAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.mixedcontentpolicy\" }","title":"Get Request"},{"location":"api/BrowserSecurityAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"allowed\" }","title":"Get Response"},{"location":"api/BrowserSecurityAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BrowserSecurity.1.mixedcontentpolicy\", \"params\": \"allowed\" }","title":"Set Request"},{"location":"api/BrowserSecurityAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ButlerAPI/","text":"Butler API Version: 1.0.0 Status: Butler interface for Thunder framework. (Defined by Butler.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Butler interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Butler JSON-RPC interface. Methods The following methods are provided by the Butler interface: Butler interface methods: Method Description persist Make sure the current information is persisted, so it survives a reboot persist method Make sure the current information is persisted, so it survives a reboot. Parameters This method takes no parameters. Errors Message Description ERROR_BAD_REQUEST Storage failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.persist\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Butler interface: Butler interface properties: Property Description orphans (read-only) List of devices not attached to any nodes bundle (read-only) List of devices not attached to any nodes device (read-only) Device specific information value Set or Get the value of the device group Get the names part of a group link Link an external ID to a node move Move a node to another location branch Create a new group delete Destroy an existing, empty group orphans property Provides access to the list of devices not attached to any nodes. This property is read-only . Value The module index argument shall be passed as the index to the property, e.g. Butler.1.orphans@<module index> . 0 = any module, >0 orphans from the requested module. Result Name Type Description result array List of devices not attached to any nodes result[#] object ... result[#].id integer Identifier of the device result[#]?.bundle integer (optional) If this value point belongs to a bundle of more value points result[#].name string Name given to this device result[#]?.callsign string (optional) The callsign that owns this external result[#].basic string Basic description of the device (measure or control) result[#].specific string More eleborated description of the device result[#].dimension string What is the dimension of the value that is returned by the device result[#].decimals integer Number of digits that should be considered fractional result[#].minimum integer Minimum value that the device can reach result[#].maximum integer Maximum value that the device can reach result[#]?.value integer (optional) Value of the device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.orphans@[ {}, {}, {} ]\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"id\": 123456, \"bundle\": 342, \"name\": \"/kitchen/ceiling/dimmer\", \"callsign\": \"VirtualControl\", \"basic\": \"measure\", \"specific\": \"electricity\", \"dimension\": \"logic\", \"decimals\": 0, \"minimum\": -80, \"maximum\": 200, \"value\": 1 } ] } bundle property Provides access to the list of devices not attached to any nodes. This property is read-only . Value The bundle id argument shall be passed as the index to the property, e.g. Butler.1.bundle@<bundle id> . The id of the bundle for which you would like to have the value points. Result Name Type Description result array List of devices not attached to any nodes result[#] object ... result[#].id integer Identifier of the device result[#]?.bundle integer (optional) If this value point belongs to a bundle of more value points result[#].name string Name given to this device result[#]?.callsign string (optional) The callsign that owns this external result[#].basic string Basic description of the device (measure or control) result[#].specific string More eleborated description of the device result[#].dimension string What is the dimension of the value that is returned by the device result[#].decimals integer Number of digits that should be considered fractional result[#].minimum integer Minimum value that the device can reach result[#].maximum integer Maximum value that the device can reach result[#]?.value integer (optional) Value of the device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.bundle@[ {}, {}, {} ]\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"id\": 123456, \"bundle\": 342, \"name\": \"/kitchen/ceiling/dimmer\", \"callsign\": \"VirtualControl\", \"basic\": \"measure\", \"specific\": \"electricity\", \"dimension\": \"logic\", \"decimals\": 0, \"minimum\": -80, \"maximum\": 200, \"value\": 1 } ] } device property Provides access to the device specific information. This property is read-only . Value The device name argument shall be passed as the index to the property, e.g. Butler.1.device@<device name> . Result Name Type Description result object Device specific information result.id integer Identifier of the device result?.bundle integer (optional) If this value point belongs to a bundle of more value points result.name string Name given to this device result?.callsign string (optional) The callsign that owns this external result.basic string Basic description of the device (measure or control) result.specific string More eleborated description of the device result.dimension string What is the dimension of the value that is returned by the device result.decimals integer Number of digits that should be considered fractional result.minimum integer Minimum value that the device can reach result.maximum integer Maximum value that the device can reach result?.value integer (optional) Value of the device Errors Message Description ERROR_UNKNOWN_KEY Unknown device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.device@The name of the device or the Id of the device\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": 123456, \"bundle\": 342, \"name\": \"/kitchen/ceiling/dimmer\", \"callsign\": \"VirtualControl\", \"basic\": \"measure\", \"specific\": \"electricity\", \"dimension\": \"logic\", \"decimals\": 0, \"minimum\": -80, \"maximum\": 200, \"value\": 1 } } value property Provides access to the set or Get the value of the device. Value Name Type Description (property) integer Value of the device The device name argument shall be passed as the index to the property, e.g. Butler.1.value@<device name> . Result Name Type Description result integer Value of the device Errors Message Description ERROR_UNKNOWN_KEY Unknown device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.value@The name of the device (name) or the numerical identifier of the device\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.value@The name of the device (name) or the numerical identifier of the device\", \"params\": 1 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } group property Provides access to the get the names part of a group. Value Name Type Description (property) object Get the names part of a group (property)?.parent integer (optional) Identifier of the group to wich this group belongs (property)?.id integer (optional) Identifier of this group (property)?.base string (optional) Path identifier leading up to this group (property)?.members array (optional) An array of group member (property)?.members[#] object (optional) ... (property)?.members[#]?.name array (optional) Name of a room or sensor (property)?.members[#]?.name[#] string (optional) ... (property)?.members[#]?.callsign string (optional) The callsign that owns this external (property)?.members[#]?.children integer (optional) The number of children in a group (property)?.members[#]?.bundle integer (optional) The bundle id if this is a bundle (property)?.members[#]?.id integer (optional) The id of the single point in this member, it is not a bundle (property)?.members[#]?.point array (optional) An array of device info (property)?.members[#]?.point[#] object (optional) Device specific information (property)?.members[#]?.point[#].id integer Identifier of the device (property)?.members[#]?.point[#]?.bundle integer (optional) If this value point belongs to a bundle of more value points (property)?.members[#]?.point[#].name string Name given to this device (property)?.members[#]?.point[#]?.callsign string (optional) The callsign that owns this external (property)?.members[#]?.point[#].basic string Basic description of the device (measure or control) (property)?.members[#]?.point[#].specific string More eleborated description of the device (property)?.members[#]?.point[#].dimension string What is the dimension of the value that is returned by the device (property)?.members[#]?.point[#].decimals integer Number of digits that should be considered fractional (property)?.members[#]?.point[#].minimum integer Minimum value that the device can reach (property)?.members[#]?.point[#].maximum integer Maximum value that the device can reach (property)?.members[#]?.point[#]?.value integer (optional) Value of the device","title":"Butler API"},{"location":"api/ButlerAPI/#butler-api","text":"Version: 1.0.0 Status: Butler interface for Thunder framework. (Defined by Butler.json )","title":"Butler API"},{"location":"api/ButlerAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/ButlerAPI/#introduction","text":"","title":"Introduction"},{"location":"api/ButlerAPI/#scope","text":"This document describes purpose and functionality of the Butler interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/ButlerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/ButlerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/ButlerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/ButlerAPI/#description","text":"Butler JSON-RPC interface.","title":"Description"},{"location":"api/ButlerAPI/#methods","text":"The following methods are provided by the Butler interface: Butler interface methods: Method Description persist Make sure the current information is persisted, so it survives a reboot","title":"Methods"},{"location":"api/ButlerAPI/#persist-method","text":"Make sure the current information is persisted, so it survives a reboot.","title":"persist method"},{"location":"api/ButlerAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/ButlerAPI/#errors","text":"Message Description ERROR_BAD_REQUEST Storage failed","title":"Errors"},{"location":"api/ButlerAPI/#example","text":"","title":"Example"},{"location":"api/ButlerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.persist\" }","title":"Request"},{"location":"api/ButlerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/ButlerAPI/#properties","text":"The following properties are provided by the Butler interface: Butler interface properties: Property Description orphans (read-only) List of devices not attached to any nodes bundle (read-only) List of devices not attached to any nodes device (read-only) Device specific information value Set or Get the value of the device group Get the names part of a group link Link an external ID to a node move Move a node to another location branch Create a new group delete Destroy an existing, empty group","title":"Properties"},{"location":"api/ButlerAPI/#orphans-property","text":"Provides access to the list of devices not attached to any nodes. This property is read-only .","title":"orphans property"},{"location":"api/ButlerAPI/#value","text":"The module index argument shall be passed as the index to the property, e.g. Butler.1.orphans@<module index> . 0 = any module, >0 orphans from the requested module.","title":"Value"},{"location":"api/ButlerAPI/#result","text":"Name Type Description result array List of devices not attached to any nodes result[#] object ... result[#].id integer Identifier of the device result[#]?.bundle integer (optional) If this value point belongs to a bundle of more value points result[#].name string Name given to this device result[#]?.callsign string (optional) The callsign that owns this external result[#].basic string Basic description of the device (measure or control) result[#].specific string More eleborated description of the device result[#].dimension string What is the dimension of the value that is returned by the device result[#].decimals integer Number of digits that should be considered fractional result[#].minimum integer Minimum value that the device can reach result[#].maximum integer Maximum value that the device can reach result[#]?.value integer (optional) Value of the device","title":"Result"},{"location":"api/ButlerAPI/#example_1","text":"","title":"Example"},{"location":"api/ButlerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.orphans@[ {}, {}, {} ]\" }","title":"Get Request"},{"location":"api/ButlerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"id\": 123456, \"bundle\": 342, \"name\": \"/kitchen/ceiling/dimmer\", \"callsign\": \"VirtualControl\", \"basic\": \"measure\", \"specific\": \"electricity\", \"dimension\": \"logic\", \"decimals\": 0, \"minimum\": -80, \"maximum\": 200, \"value\": 1 } ] }","title":"Get Response"},{"location":"api/ButlerAPI/#bundle-property","text":"Provides access to the list of devices not attached to any nodes. This property is read-only .","title":"bundle property"},{"location":"api/ButlerAPI/#value_1","text":"The bundle id argument shall be passed as the index to the property, e.g. Butler.1.bundle@<bundle id> . The id of the bundle for which you would like to have the value points.","title":"Value"},{"location":"api/ButlerAPI/#result_1","text":"Name Type Description result array List of devices not attached to any nodes result[#] object ... result[#].id integer Identifier of the device result[#]?.bundle integer (optional) If this value point belongs to a bundle of more value points result[#].name string Name given to this device result[#]?.callsign string (optional) The callsign that owns this external result[#].basic string Basic description of the device (measure or control) result[#].specific string More eleborated description of the device result[#].dimension string What is the dimension of the value that is returned by the device result[#].decimals integer Number of digits that should be considered fractional result[#].minimum integer Minimum value that the device can reach result[#].maximum integer Maximum value that the device can reach result[#]?.value integer (optional) Value of the device","title":"Result"},{"location":"api/ButlerAPI/#example_2","text":"","title":"Example"},{"location":"api/ButlerAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.bundle@[ {}, {}, {} ]\" }","title":"Get Request"},{"location":"api/ButlerAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"id\": 123456, \"bundle\": 342, \"name\": \"/kitchen/ceiling/dimmer\", \"callsign\": \"VirtualControl\", \"basic\": \"measure\", \"specific\": \"electricity\", \"dimension\": \"logic\", \"decimals\": 0, \"minimum\": -80, \"maximum\": 200, \"value\": 1 } ] }","title":"Get Response"},{"location":"api/ButlerAPI/#device-property","text":"Provides access to the device specific information. This property is read-only .","title":"device property"},{"location":"api/ButlerAPI/#value_2","text":"The device name argument shall be passed as the index to the property, e.g. Butler.1.device@<device name> .","title":"Value"},{"location":"api/ButlerAPI/#result_2","text":"Name Type Description result object Device specific information result.id integer Identifier of the device result?.bundle integer (optional) If this value point belongs to a bundle of more value points result.name string Name given to this device result?.callsign string (optional) The callsign that owns this external result.basic string Basic description of the device (measure or control) result.specific string More eleborated description of the device result.dimension string What is the dimension of the value that is returned by the device result.decimals integer Number of digits that should be considered fractional result.minimum integer Minimum value that the device can reach result.maximum integer Maximum value that the device can reach result?.value integer (optional) Value of the device","title":"Result"},{"location":"api/ButlerAPI/#errors_1","text":"Message Description ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"api/ButlerAPI/#example_3","text":"","title":"Example"},{"location":"api/ButlerAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.device@The name of the device or the Id of the device\" }","title":"Get Request"},{"location":"api/ButlerAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": 123456, \"bundle\": 342, \"name\": \"/kitchen/ceiling/dimmer\", \"callsign\": \"VirtualControl\", \"basic\": \"measure\", \"specific\": \"electricity\", \"dimension\": \"logic\", \"decimals\": 0, \"minimum\": -80, \"maximum\": 200, \"value\": 1 } }","title":"Get Response"},{"location":"api/ButlerAPI/#value-property","text":"Provides access to the set or Get the value of the device.","title":"value property"},{"location":"api/ButlerAPI/#value_3","text":"Name Type Description (property) integer Value of the device The device name argument shall be passed as the index to the property, e.g. Butler.1.value@<device name> .","title":"Value"},{"location":"api/ButlerAPI/#result_3","text":"Name Type Description result integer Value of the device","title":"Result"},{"location":"api/ButlerAPI/#errors_2","text":"Message Description ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"api/ButlerAPI/#example_4","text":"","title":"Example"},{"location":"api/ButlerAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.value@The name of the device (name) or the numerical identifier of the device\" }","title":"Get Request"},{"location":"api/ButlerAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 }","title":"Get Response"},{"location":"api/ButlerAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Butler.1.value@The name of the device (name) or the numerical identifier of the device\", \"params\": 1 }","title":"Set Request"},{"location":"api/ButlerAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ButlerAPI/#group-property","text":"Provides access to the get the names part of a group.","title":"group property"},{"location":"api/ButlerAPI/#value_4","text":"Name Type Description (property) object Get the names part of a group (property)?.parent integer (optional) Identifier of the group to wich this group belongs (property)?.id integer (optional) Identifier of this group (property)?.base string (optional) Path identifier leading up to this group (property)?.members array (optional) An array of group member (property)?.members[#] object (optional) ... (property)?.members[#]?.name array (optional) Name of a room or sensor (property)?.members[#]?.name[#] string (optional) ... (property)?.members[#]?.callsign string (optional) The callsign that owns this external (property)?.members[#]?.children integer (optional) The number of children in a group (property)?.members[#]?.bundle integer (optional) The bundle id if this is a bundle (property)?.members[#]?.id integer (optional) The id of the single point in this member, it is not a bundle (property)?.members[#]?.point array (optional) An array of device info (property)?.members[#]?.point[#] object (optional) Device specific information (property)?.members[#]?.point[#].id integer Identifier of the device (property)?.members[#]?.point[#]?.bundle integer (optional) If this value point belongs to a bundle of more value points (property)?.members[#]?.point[#].name string Name given to this device (property)?.members[#]?.point[#]?.callsign string (optional) The callsign that owns this external (property)?.members[#]?.point[#].basic string Basic description of the device (measure or control) (property)?.members[#]?.point[#].specific string More eleborated description of the device (property)?.members[#]?.point[#].dimension string What is the dimension of the value that is returned by the device (property)?.members[#]?.point[#].decimals integer Number of digits that should be considered fractional (property)?.members[#]?.point[#].minimum integer Minimum value that the device can reach (property)?.members[#]?.point[#].maximum integer Maximum value that the device can reach (property)?.members[#]?.point[#]?.value integer (optional) Value of the device","title":"Value"},{"location":"api/CobaltAPI/","text":"Cobalt API Version: 1.0.0 Status: Cobalt interface for Thunder framework. (Defined by Cobalt.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Cobalt interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Cobalt JSON-RPC interface. Methods The following methods are provided by the Cobalt interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Cobalt interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps (read-only) Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service url property Provides access to the URL loaded in the browser. Also see: urlchange Value Name Type Description (property) string URL loaded in the browser Result Name Type Description result string URL loaded in the browser Errors Message Description ERROR_INCORRECT_URL Incorrect URL given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\", \"params\": \"https://www.google.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the current browser visibility. Also see: visibilitychange Value Name Type Description (property) string Current browser visibility Result Name Type Description result string Current browser visibility Errors Message Description ERROR_UNAVAILABLE Returned when the operation is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current number of frames per second the browser is rendering. This property is read-only . Value Result Name Type Description result integer Current number of frames per second the browser is rendering Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service Result Name Type Description result string Running state of the service Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Cobalt interface: Browser interface events: Notification Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Notification Description statechange Signals a state change of the service urlchange notification Signals a URL change in the browser. Parameters Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) (default: True ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } } visibilitychange notification Signals a visibility change of the browser. Parameters Name Type Description params object ... params.hidden boolean Determines if the browser has been hidden (true) or made visible (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } } statechange notification Signals a state change of the service. Parameters Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Cobalt API"},{"location":"api/CobaltAPI/#cobalt-api","text":"Version: 1.0.0 Status: Cobalt interface for Thunder framework. (Defined by Cobalt.json )","title":"Cobalt API"},{"location":"api/CobaltAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/CobaltAPI/#introduction","text":"","title":"Introduction"},{"location":"api/CobaltAPI/#scope","text":"This document describes purpose and functionality of the Cobalt interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/CobaltAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/CobaltAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/CobaltAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/CobaltAPI/#description","text":"Cobalt JSON-RPC interface.","title":"Description"},{"location":"api/CobaltAPI/#methods","text":"The following methods are provided by the Cobalt interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"api/CobaltAPI/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"api/CobaltAPI/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"api/CobaltAPI/#parameters","text":"Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"api/CobaltAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/CobaltAPI/#errors","text":"Message Description ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"api/CobaltAPI/#example","text":"","title":"Example"},{"location":"api/CobaltAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"api/CobaltAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/CobaltAPI/#properties","text":"The following properties are provided by the Cobalt interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps (read-only) Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"api/CobaltAPI/#url-property","text":"Provides access to the URL loaded in the browser. Also see: urlchange","title":"url property"},{"location":"api/CobaltAPI/#value","text":"Name Type Description (property) string URL loaded in the browser","title":"Value"},{"location":"api/CobaltAPI/#result_1","text":"Name Type Description result string URL loaded in the browser","title":"Result"},{"location":"api/CobaltAPI/#errors_1","text":"Message Description ERROR_INCORRECT_URL Incorrect URL given","title":"Errors"},{"location":"api/CobaltAPI/#example_1","text":"","title":"Example"},{"location":"api/CobaltAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\" }","title":"Get Request"},{"location":"api/CobaltAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" }","title":"Get Response"},{"location":"api/CobaltAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\", \"params\": \"https://www.google.com\" }","title":"Set Request"},{"location":"api/CobaltAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/CobaltAPI/#visibility-property","text":"Provides access to the current browser visibility. Also see: visibilitychange","title":"visibility property"},{"location":"api/CobaltAPI/#value_1","text":"Name Type Description (property) string Current browser visibility","title":"Value"},{"location":"api/CobaltAPI/#result_2","text":"Name Type Description result string Current browser visibility","title":"Result"},{"location":"api/CobaltAPI/#errors_2","text":"Message Description ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"api/CobaltAPI/#example_2","text":"","title":"Example"},{"location":"api/CobaltAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\" }","title":"Get Request"},{"location":"api/CobaltAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" }","title":"Get Response"},{"location":"api/CobaltAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"api/CobaltAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/CobaltAPI/#fps-property","text":"Provides access to the current number of frames per second the browser is rendering. This property is read-only .","title":"fps property"},{"location":"api/CobaltAPI/#value_2","text":"","title":"Value"},{"location":"api/CobaltAPI/#result_3","text":"Name Type Description result integer Current number of frames per second the browser is rendering","title":"Result"},{"location":"api/CobaltAPI/#example_3","text":"","title":"Example"},{"location":"api/CobaltAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.fps\" }","title":"Get Request"},{"location":"api/CobaltAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 }","title":"Get Response"},{"location":"api/CobaltAPI/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"api/CobaltAPI/#value_3","text":"Name Type Description (property) string Running state of the service","title":"Value"},{"location":"api/CobaltAPI/#result_4","text":"Name Type Description result string Running state of the service","title":"Result"},{"location":"api/CobaltAPI/#example_4","text":"","title":"Example"},{"location":"api/CobaltAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\" }","title":"Get Request"},{"location":"api/CobaltAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"api/CobaltAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"api/CobaltAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/CobaltAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Cobalt interface: Browser interface events: Notification Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Notification Description statechange Signals a state change of the service","title":"Notifications"},{"location":"api/CobaltAPI/#urlchange-notification","text":"Signals a URL change in the browser.","title":"urlchange notification"},{"location":"api/CobaltAPI/#parameters_1","text":"Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) (default: True )","title":"Parameters"},{"location":"api/CobaltAPI/#example_5","text":"","title":"Example"},{"location":"api/CobaltAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/CobaltAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } }","title":"Message"},{"location":"api/CobaltAPI/#visibilitychange-notification","text":"Signals a visibility change of the browser.","title":"visibilitychange notification"},{"location":"api/CobaltAPI/#parameters_2","text":"Name Type Description params object ... params.hidden boolean Determines if the browser has been hidden (true) or made visible (false)","title":"Parameters"},{"location":"api/CobaltAPI/#example_6","text":"","title":"Example"},{"location":"api/CobaltAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/CobaltAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Message"},{"location":"api/CobaltAPI/#statechange-notification","text":"Signals a state change of the service.","title":"statechange notification"},{"location":"api/CobaltAPI/#parameters_3","text":"Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"api/CobaltAPI/#example_7","text":"","title":"Example"},{"location":"api/CobaltAPI/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/CobaltAPI/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Message"},{"location":"api/CompositorAPI/","text":"Compositor API Version: 1.0.0 Status: Compositor interface for Thunder framework. (Defined by Compositor.json ) Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the Compositor interface (version 1.0.0). It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Compositor JSON-RPC interface. Methods The following methods are provided by the Compositor interface: Compositor interface methods: Method Description putontop Puts client surface on top in z-order putbelow Puts client surface below another surface select Directs the input to the given client, disabling all the others putontop method Puts client surface on top in z-order. Description Use this method to get a client's surface to the top position. Parameters Name Type Description params object ... params.client string Client name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Client not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putontop\", \"params\": { \"client\": \"Netflix\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } putbelow method Puts client surface below another surface. Description Use this method to reorder client surfaces in the z-order list. Parameters Name Type Description params object ... params.client string Client name to change z-order position params.relative string Client to put the other surface below Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Client(s) not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putbelow\", \"params\": { \"client\": \"Netflix\", \"relative\": \"WebKitBrowser\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } select method Directs the input to the given client, disabling all the others. Description Use this method to direct all inputs to this client. The client that is receiving the inputs prior to this call will nolonger receive it anymore after this call. Parameters Name Type Description params object ... params.client string Client name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Client not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.select\", \"params\": { \"client\": \"Netflix\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Compositor interface: Compositor interface properties: Property Description resolution Screen resolution zorder (read-only) List of compositor clients sorted by z-order brightness Brightness of SDR graphics in HDR display geometry Client surface geometry visiblity (write-only) Client surface visibility opacity (write-only) Client surface opacity resolution property Provides access to the screen resolution. Description Use this property to set or retrieve the current resolution of the screen. Value Name Type Description (property) string Screen resolution Result Name Type Description result string Screen resolution Errors Message Description ERROR_UNKNOWN_KEY Unknown resolution ERROR_UNAVAILABLE Set resolution is not supported or failed ERROR_GENERAL Failed to set resolution Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1080p24\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\", \"params\": \"1080p24\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } zorder property Provides access to the list of compositor clients sorted by z-order. This property is read-only . Description Use this property to retrieve the list of all clients in z-order. Each client has an z-order-value that determines its position with respect to the screen. The ordering is that the top position is closest to the screen, the next z-order-value first behind the top, and so on. Value Result Name Type Description result array List of compositor clients sorted by z-order result[#] string Client name Errors Message Description ERROR_GENERAL Failed to get z-order Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.zorder\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Netflix\" ] } brightness property Provides access to the brightness of SDR graphics in HDR display. Description Use this property to set or retrieve the brightness of the SDR graphics. Value Name Type Description (property) string Brightness of SDR graphics in HDR display Result Name Type Description result string Brightness of SDR graphics in HDR display Errors Message Description ERROR_UNKNOWN_KEY Unknown brightness ERROR_UNAVAILABLE Set brightness is not supported or failed ERROR_GENERAL Failed to set brightness Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"match_video\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\", \"params\": \"match_video\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } geometry property Provides access to the client surface geometry. Description Use this property to update or retrieve the geometry of a client's surface. Value Name Type Description (property) object Client surface geometry (property).x integer Horizontal coordinate of the surface (property).y integer Vertical coordinate of the surface (property).width integer Surface width (property).height integer Surface height The client argument shall be passed as the index to the property, e.g. Compositor.1.geometry@<client> . Result Name Type Description result object Client surface geometry result.x integer Horizontal coordinate of the surface result.y integer Vertical coordinate of the surface result.width integer Surface width result.height integer Surface height Errors Message Description ERROR_UNAVAILABLE Client not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visiblity property Provides access to the client surface visibility. This property is write-only . Description Use this property to set the client's surface visibility. Value Name Type Description (property) string Client surface visibility The client argument shall be passed as the index to the property, e.g. Compositor.1.visiblity@<client> . Errors Message Description ERROR_UNAVAILABLE Client not found Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.visiblity@Netflix\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } opacity property Provides access to the client surface opacity. This property is write-only . Description Use this property to set the client's surface opacity level. Value Name Type Description (property) integer Opacity level (0 to 255; 0: fully transparent, 255: fully opaque) The client argument shall be passed as the index to the property, e.g. Compositor.1.opacity@<client> . Errors Message Description ERROR_UNAVAILABLE Client not found Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.opacity@Netflix\", \"params\": 127 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Compositor API"},{"location":"api/CompositorAPI/#compositor-api","text":"Version: 1.0.0 Status: Compositor interface for Thunder framework. (Defined by Compositor.json )","title":"Compositor API"},{"location":"api/CompositorAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"api/CompositorAPI/#introduction","text":"","title":"Introduction"},{"location":"api/CompositorAPI/#scope","text":"This document describes purpose and functionality of the Compositor interface (version 1.0.0). It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"api/CompositorAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/CompositorAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/CompositorAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/CompositorAPI/#description","text":"Compositor JSON-RPC interface.","title":"Description"},{"location":"api/CompositorAPI/#methods","text":"The following methods are provided by the Compositor interface: Compositor interface methods: Method Description putontop Puts client surface on top in z-order putbelow Puts client surface below another surface select Directs the input to the given client, disabling all the others","title":"Methods"},{"location":"api/CompositorAPI/#putontop-method","text":"Puts client surface on top in z-order.","title":"putontop method"},{"location":"api/CompositorAPI/#description_1","text":"Use this method to get a client's surface to the top position.","title":"Description"},{"location":"api/CompositorAPI/#parameters","text":"Name Type Description params object ... params.client string Client name","title":"Parameters"},{"location":"api/CompositorAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/CompositorAPI/#errors","text":"Message Description ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"api/CompositorAPI/#example","text":"","title":"Example"},{"location":"api/CompositorAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putontop\", \"params\": { \"client\": \"Netflix\" } }","title":"Request"},{"location":"api/CompositorAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/CompositorAPI/#putbelow-method","text":"Puts client surface below another surface.","title":"putbelow method"},{"location":"api/CompositorAPI/#description_2","text":"Use this method to reorder client surfaces in the z-order list.","title":"Description"},{"location":"api/CompositorAPI/#parameters_1","text":"Name Type Description params object ... params.client string Client name to change z-order position params.relative string Client to put the other surface below","title":"Parameters"},{"location":"api/CompositorAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/CompositorAPI/#errors_1","text":"Message Description ERROR_UNAVAILABLE Client(s) not found","title":"Errors"},{"location":"api/CompositorAPI/#example_1","text":"","title":"Example"},{"location":"api/CompositorAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putbelow\", \"params\": { \"client\": \"Netflix\", \"relative\": \"WebKitBrowser\" } }","title":"Request"},{"location":"api/CompositorAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/CompositorAPI/#select-method","text":"Directs the input to the given client, disabling all the others.","title":"select method"},{"location":"api/CompositorAPI/#description_3","text":"Use this method to direct all inputs to this client. The client that is receiving the inputs prior to this call will nolonger receive it anymore after this call.","title":"Description"},{"location":"api/CompositorAPI/#parameters_2","text":"Name Type Description params object ... params.client string Client name","title":"Parameters"},{"location":"api/CompositorAPI/#result_2","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/CompositorAPI/#errors_2","text":"Message Description ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"api/CompositorAPI/#example_2","text":"","title":"Example"},{"location":"api/CompositorAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.select\", \"params\": { \"client\": \"Netflix\" } }","title":"Request"},{"location":"api/CompositorAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/CompositorAPI/#properties","text":"The following properties are provided by the Compositor interface: Compositor interface properties: Property Description resolution Screen resolution zorder (read-only) List of compositor clients sorted by z-order brightness Brightness of SDR graphics in HDR display geometry Client surface geometry visiblity (write-only) Client surface visibility opacity (write-only) Client surface opacity","title":"Properties"},{"location":"api/CompositorAPI/#resolution-property","text":"Provides access to the screen resolution.","title":"resolution property"},{"location":"api/CompositorAPI/#description_4","text":"Use this property to set or retrieve the current resolution of the screen.","title":"Description"},{"location":"api/CompositorAPI/#value","text":"Name Type Description (property) string Screen resolution","title":"Value"},{"location":"api/CompositorAPI/#result_3","text":"Name Type Description result string Screen resolution","title":"Result"},{"location":"api/CompositorAPI/#errors_3","text":"Message Description ERROR_UNKNOWN_KEY Unknown resolution ERROR_UNAVAILABLE Set resolution is not supported or failed ERROR_GENERAL Failed to set resolution","title":"Errors"},{"location":"api/CompositorAPI/#example_3","text":"","title":"Example"},{"location":"api/CompositorAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\" }","title":"Get Request"},{"location":"api/CompositorAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1080p24\" }","title":"Get Response"},{"location":"api/CompositorAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\", \"params\": \"1080p24\" }","title":"Set Request"},{"location":"api/CompositorAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/CompositorAPI/#zorder-property","text":"Provides access to the list of compositor clients sorted by z-order. This property is read-only .","title":"zorder property"},{"location":"api/CompositorAPI/#description_5","text":"Use this property to retrieve the list of all clients in z-order. Each client has an z-order-value that determines its position with respect to the screen. The ordering is that the top position is closest to the screen, the next z-order-value first behind the top, and so on.","title":"Description"},{"location":"api/CompositorAPI/#value_1","text":"","title":"Value"},{"location":"api/CompositorAPI/#result_4","text":"Name Type Description result array List of compositor clients sorted by z-order result[#] string Client name","title":"Result"},{"location":"api/CompositorAPI/#errors_4","text":"Message Description ERROR_GENERAL Failed to get z-order","title":"Errors"},{"location":"api/CompositorAPI/#example_4","text":"","title":"Example"},{"location":"api/CompositorAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.zorder\" }","title":"Get Request"},{"location":"api/CompositorAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Netflix\" ] }","title":"Get Response"},{"location":"api/CompositorAPI/#brightness-property","text":"Provides access to the brightness of SDR graphics in HDR display.","title":"brightness property"},{"location":"api/CompositorAPI/#description_6","text":"Use this property to set or retrieve the brightness of the SDR graphics.","title":"Description"},{"location":"api/CompositorAPI/#value_2","text":"Name Type Description (property) string Brightness of SDR graphics in HDR display","title":"Value"},{"location":"api/CompositorAPI/#result_5","text":"Name Type Description result string Brightness of SDR graphics in HDR display","title":"Result"},{"location":"api/CompositorAPI/#errors_5","text":"Message Description ERROR_UNKNOWN_KEY Unknown brightness ERROR_UNAVAILABLE Set brightness is not supported or failed ERROR_GENERAL Failed to set brightness","title":"Errors"},{"location":"api/CompositorAPI/#example_5","text":"","title":"Example"},{"location":"api/CompositorAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\" }","title":"Get Request"},{"location":"api/CompositorAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"match_video\" }","title":"Get Response"},{"location":"api/CompositorAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\", \"params\": \"match_video\" }","title":"Set Request"},{"location":"api/CompositorAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/CompositorAPI/#geometry-property","text":"Provides access to the client surface geometry.","title":"geometry property"},{"location":"api/CompositorAPI/#description_7","text":"Use this property to update or retrieve the geometry of a client's surface.","title":"Description"},{"location":"api/CompositorAPI/#value_3","text":"Name Type Description (property) object Client surface geometry (property).x integer Horizontal coordinate of the surface (property).y integer Vertical coordinate of the surface (property).width integer Surface width (property).height integer Surface height The client argument shall be passed as the index to the property, e.g. Compositor.1.geometry@<client> .","title":"Value"},{"location":"api/CompositorAPI/#result_6","text":"Name Type Description result object Client surface geometry result.x integer Horizontal coordinate of the surface result.y integer Vertical coordinate of the surface result.width integer Surface width result.height integer Surface height","title":"Result"},{"location":"api/CompositorAPI/#errors_6","text":"Message Description ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"api/CompositorAPI/#example_6","text":"","title":"Example"},{"location":"api/CompositorAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\" }","title":"Get Request"},{"location":"api/CompositorAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } }","title":"Get Response"},{"location":"api/CompositorAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } }","title":"Set Request"},{"location":"api/CompositorAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/CompositorAPI/#visiblity-property","text":"Provides access to the client surface visibility. This property is write-only .","title":"visiblity property"},{"location":"api/CompositorAPI/#description_8","text":"Use this property to set the client's surface visibility.","title":"Description"},{"location":"api/CompositorAPI/#value_4","text":"Name Type Description (property) string Client surface visibility The client argument shall be passed as the index to the property, e.g. Compositor.1.visiblity@<client> .","title":"Value"},{"location":"api/CompositorAPI/#errors_7","text":"Message Description ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"api/CompositorAPI/#example_7","text":"","title":"Example"},{"location":"api/CompositorAPI/#set-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.visiblity@Netflix\", \"params\": \"visible\" }","title":"Set Request"},{"location":"api/CompositorAPI/#set-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/CompositorAPI/#opacity-property","text":"Provides access to the client surface opacity. This property is write-only .","title":"opacity property"},{"location":"api/CompositorAPI/#description_9","text":"Use this property to set the client's surface opacity level.","title":"Description"},{"location":"api/CompositorAPI/#value_5","text":"Name Type Description (property) integer Opacity level (0 to 255; 0: fully transparent, 255: fully opaque) The client argument shall be passed as the index to the property, e.g. Compositor.1.opacity@<client> .","title":"Value"},{"location":"api/CompositorAPI/#errors_8","text":"Message Description ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"api/CompositorAPI/#example_8","text":"","title":"Example"},{"location":"api/CompositorAPI/#set-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.opacity@Netflix\", \"params\": 127 }","title":"Set Request"},{"location":"api/CompositorAPI/#set-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ConnectionPropertiesAPI/","text":"ConnectionProperties API Version: 1.0.0 Status: ConnectionProperties interface for Thunder framework. (Defined with IConnectionProperties in IDisplayInfo.h ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the ConnectionProperties interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description ConnectionProperties JSON-RPC interface. Methods The following methods are provided by the ConnectionProperties interface: ConnectionProperties interface methods: Method Description edid TV's Extended Display Identification Data widthincentimeters Horizontal size in centimeters heightincentimeters Vertical size in centimeters edid method TV's Extended Display Identification Data. Parameters Name Type Description params object ... params.length integer Length of EDID byte string Result Name Type Description result object ... result.length integer Length of EDID byte string result.data string (base64) EDID byte string Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.edid\", \"params\": { \"length\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"length\": 0, \"data\": \"...\" } } widthincentimeters method Horizontal size in centimeters. Parameters This method takes no parameters. Result Name Type Description result integer Width in cm Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.widthincentimeters\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } heightincentimeters method Vertical size in centimeters. Parameters This method takes no parameters. Result Name Type Description result integer ... Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.heightincentimeters\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } Properties The following properties are provided by the ConnectionProperties interface: ConnectionProperties interface properties: Property Description isaudiopassthrough (read-only) Current audio passthrough status on HDMI connected (read-only) Current HDMI connection status width (read-only) Horizontal resolution of TV height (read-only) Vertical resolution of TV verticalfreq (read-only) Vertical Frequency hdcpprotection HDCP protocol used for transmission portname (read-only) Video output port on the STB used for connection to TV isaudiopassthrough property Provides access to the current audio passthrough status on HDMI. This property is read-only . Value Result Name Type Description result boolean Enabled/Disabled Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.isaudiopassthrough\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } connected property Provides access to the current HDMI connection status. This property is read-only . Value Result Name Type Description result boolean Connected/Disconnected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.connected\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } width property Provides access to the horizontal resolution of TV. This property is read-only . Value Result Name Type Description result integer Width of TV in pixels Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.width\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } height property Provides access to the vertical resolution of TV. This property is read-only . Value Result Name Type Description result integer Height of TV in pixels Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.height\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } verticalfreq property Provides access to the vertical Frequency. This property is read-only . Value Result Name Type Description result integer Vertical freq Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.verticalfreq\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } hdcpprotection property Provides access to the HDCP protocol used for transmission. Value Name Type Description (property) string HDCP protocol used for transmission (must be one of the following: Hdcp1X, Hdcp2X, HdcpAuto, HdcpUnencrypted ) Result Name Type Description result string Protocol (must be one of the following: Hdcp1X, Hdcp2X, HdcpAuto, HdcpUnencrypted ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.hdcpprotection\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdcpUnencrypted\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.hdcpprotection\", \"params\": \"HdcpUnencrypted\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } portname property Provides access to the video output port on the STB used for connection to TV. This property is read-only . Value Result Name Type Description result string Video output port name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.portname\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the ConnectionProperties interface: ConnectionProperties interface events: Notification Description updated Signal changes on the display update updated notification Signal changes on the display update.. Parameters Name Type Description params object ... params.event string Source of this event (must be one of the following: HdcpChange, HdmiChange, PostResolutionChange, PreResolutionChange ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.register\", \"params\": { \"event\": \"updated\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.updated\", \"params\": { \"event\": \"PreResolutionChange\" } }","title":"ConnectionProperties API"},{"location":"api/ConnectionPropertiesAPI/#connectionproperties-api","text":"Version: 1.0.0 Status: ConnectionProperties interface for Thunder framework. (Defined with IConnectionProperties in IDisplayInfo.h )","title":"ConnectionProperties API"},{"location":"api/ConnectionPropertiesAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/ConnectionPropertiesAPI/#introduction","text":"","title":"Introduction"},{"location":"api/ConnectionPropertiesAPI/#scope","text":"This document describes purpose and functionality of the ConnectionProperties interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/ConnectionPropertiesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/ConnectionPropertiesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/ConnectionPropertiesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/ConnectionPropertiesAPI/#description","text":"ConnectionProperties JSON-RPC interface.","title":"Description"},{"location":"api/ConnectionPropertiesAPI/#methods","text":"The following methods are provided by the ConnectionProperties interface: ConnectionProperties interface methods: Method Description edid TV's Extended Display Identification Data widthincentimeters Horizontal size in centimeters heightincentimeters Vertical size in centimeters","title":"Methods"},{"location":"api/ConnectionPropertiesAPI/#edid-method","text":"TV's Extended Display Identification Data.","title":"edid method"},{"location":"api/ConnectionPropertiesAPI/#parameters","text":"Name Type Description params object ... params.length integer Length of EDID byte string","title":"Parameters"},{"location":"api/ConnectionPropertiesAPI/#result","text":"Name Type Description result object ... result.length integer Length of EDID byte string result.data string (base64) EDID byte string","title":"Result"},{"location":"api/ConnectionPropertiesAPI/#example","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.edid\", \"params\": { \"length\": 0 } }","title":"Request"},{"location":"api/ConnectionPropertiesAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"length\": 0, \"data\": \"...\" } }","title":"Response"},{"location":"api/ConnectionPropertiesAPI/#widthincentimeters-method","text":"Horizontal size in centimeters.","title":"widthincentimeters method"},{"location":"api/ConnectionPropertiesAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/ConnectionPropertiesAPI/#result_1","text":"Name Type Description result integer Width in cm","title":"Result"},{"location":"api/ConnectionPropertiesAPI/#example_1","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.widthincentimeters\" }","title":"Request"},{"location":"api/ConnectionPropertiesAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/ConnectionPropertiesAPI/#heightincentimeters-method","text":"Vertical size in centimeters.","title":"heightincentimeters method"},{"location":"api/ConnectionPropertiesAPI/#parameters_2","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/ConnectionPropertiesAPI/#result_2","text":"Name Type Description result integer ...","title":"Result"},{"location":"api/ConnectionPropertiesAPI/#example_2","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.heightincentimeters\" }","title":"Request"},{"location":"api/ConnectionPropertiesAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/ConnectionPropertiesAPI/#properties","text":"The following properties are provided by the ConnectionProperties interface: ConnectionProperties interface properties: Property Description isaudiopassthrough (read-only) Current audio passthrough status on HDMI connected (read-only) Current HDMI connection status width (read-only) Horizontal resolution of TV height (read-only) Vertical resolution of TV verticalfreq (read-only) Vertical Frequency hdcpprotection HDCP protocol used for transmission portname (read-only) Video output port on the STB used for connection to TV","title":"Properties"},{"location":"api/ConnectionPropertiesAPI/#isaudiopassthrough-property","text":"Provides access to the current audio passthrough status on HDMI. This property is read-only .","title":"isaudiopassthrough property"},{"location":"api/ConnectionPropertiesAPI/#value","text":"","title":"Value"},{"location":"api/ConnectionPropertiesAPI/#result_3","text":"Name Type Description result boolean Enabled/Disabled","title":"Result"},{"location":"api/ConnectionPropertiesAPI/#example_3","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.isaudiopassthrough\" }","title":"Get Request"},{"location":"api/ConnectionPropertiesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"api/ConnectionPropertiesAPI/#connected-property","text":"Provides access to the current HDMI connection status. This property is read-only .","title":"connected property"},{"location":"api/ConnectionPropertiesAPI/#value_1","text":"","title":"Value"},{"location":"api/ConnectionPropertiesAPI/#result_4","text":"Name Type Description result boolean Connected/Disconnected","title":"Result"},{"location":"api/ConnectionPropertiesAPI/#example_4","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.connected\" }","title":"Get Request"},{"location":"api/ConnectionPropertiesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"api/ConnectionPropertiesAPI/#width-property","text":"Provides access to the horizontal resolution of TV. This property is read-only .","title":"width property"},{"location":"api/ConnectionPropertiesAPI/#value_2","text":"","title":"Value"},{"location":"api/ConnectionPropertiesAPI/#result_5","text":"Name Type Description result integer Width of TV in pixels","title":"Result"},{"location":"api/ConnectionPropertiesAPI/#example_5","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.width\" }","title":"Get Request"},{"location":"api/ConnectionPropertiesAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/ConnectionPropertiesAPI/#height-property","text":"Provides access to the vertical resolution of TV. This property is read-only .","title":"height property"},{"location":"api/ConnectionPropertiesAPI/#value_3","text":"","title":"Value"},{"location":"api/ConnectionPropertiesAPI/#result_6","text":"Name Type Description result integer Height of TV in pixels","title":"Result"},{"location":"api/ConnectionPropertiesAPI/#example_6","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.height\" }","title":"Get Request"},{"location":"api/ConnectionPropertiesAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/ConnectionPropertiesAPI/#verticalfreq-property","text":"Provides access to the vertical Frequency. This property is read-only .","title":"verticalfreq property"},{"location":"api/ConnectionPropertiesAPI/#value_4","text":"","title":"Value"},{"location":"api/ConnectionPropertiesAPI/#result_7","text":"Name Type Description result integer Vertical freq","title":"Result"},{"location":"api/ConnectionPropertiesAPI/#example_7","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.verticalfreq\" }","title":"Get Request"},{"location":"api/ConnectionPropertiesAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/ConnectionPropertiesAPI/#hdcpprotection-property","text":"Provides access to the HDCP protocol used for transmission.","title":"hdcpprotection property"},{"location":"api/ConnectionPropertiesAPI/#value_5","text":"Name Type Description (property) string HDCP protocol used for transmission (must be one of the following: Hdcp1X, Hdcp2X, HdcpAuto, HdcpUnencrypted )","title":"Value"},{"location":"api/ConnectionPropertiesAPI/#result_8","text":"Name Type Description result string Protocol (must be one of the following: Hdcp1X, Hdcp2X, HdcpAuto, HdcpUnencrypted )","title":"Result"},{"location":"api/ConnectionPropertiesAPI/#example_8","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.hdcpprotection\" }","title":"Get Request"},{"location":"api/ConnectionPropertiesAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdcpUnencrypted\" }","title":"Get Response"},{"location":"api/ConnectionPropertiesAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.hdcpprotection\", \"params\": \"HdcpUnencrypted\" }","title":"Set Request"},{"location":"api/ConnectionPropertiesAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ConnectionPropertiesAPI/#portname-property","text":"Provides access to the video output port on the STB used for connection to TV. This property is read-only .","title":"portname property"},{"location":"api/ConnectionPropertiesAPI/#value_6","text":"","title":"Value"},{"location":"api/ConnectionPropertiesAPI/#result_9","text":"Name Type Description result string Video output port name","title":"Result"},{"location":"api/ConnectionPropertiesAPI/#example_9","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.portname\" }","title":"Get Request"},{"location":"api/ConnectionPropertiesAPI/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"api/ConnectionPropertiesAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the ConnectionProperties interface: ConnectionProperties interface events: Notification Description updated Signal changes on the display update","title":"Notifications"},{"location":"api/ConnectionPropertiesAPI/#updated-notification","text":"Signal changes on the display update..","title":"updated notification"},{"location":"api/ConnectionPropertiesAPI/#parameters_3","text":"Name Type Description params object ... params.event string Source of this event (must be one of the following: HdcpChange, HdmiChange, PostResolutionChange, PreResolutionChange )","title":"Parameters"},{"location":"api/ConnectionPropertiesAPI/#example_10","text":"","title":"Example"},{"location":"api/ConnectionPropertiesAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ConnectionProperties.1.register\", \"params\": { \"event\": \"updated\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/ConnectionPropertiesAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.updated\", \"params\": { \"event\": \"PreResolutionChange\" } }","title":"Message"},{"location":"api/CustomerCareOperationsAPI/","text":"CustomerCareOperations API Version: 1.0.0 Status: CustomerCareOperations interface for Thunder framework. (Defined with ICustomerCareOperations in ICustomerCareOperations.h ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the CustomerCareOperations interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description CustomerCareOperations JSON-RPC interface. Methods The following methods are provided by the CustomerCareOperations interface: CustomerCareOperations interface methods: Method Description factoryreset Executes all operations needed for a plugin's factory reset factoryreset method Executes all operations needed for a plugin's factory reset. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"CustomerCareOperations.1.factoryreset\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"CustomerCareOperations API"},{"location":"api/CustomerCareOperationsAPI/#customercareoperations-api","text":"Version: 1.0.0 Status: CustomerCareOperations interface for Thunder framework. (Defined with ICustomerCareOperations in ICustomerCareOperations.h )","title":"CustomerCareOperations API"},{"location":"api/CustomerCareOperationsAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/CustomerCareOperationsAPI/#introduction","text":"","title":"Introduction"},{"location":"api/CustomerCareOperationsAPI/#scope","text":"This document describes purpose and functionality of the CustomerCareOperations interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/CustomerCareOperationsAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/CustomerCareOperationsAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/CustomerCareOperationsAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/CustomerCareOperationsAPI/#description","text":"CustomerCareOperations JSON-RPC interface.","title":"Description"},{"location":"api/CustomerCareOperationsAPI/#methods","text":"The following methods are provided by the CustomerCareOperations interface: CustomerCareOperations interface methods: Method Description factoryreset Executes all operations needed for a plugin's factory reset","title":"Methods"},{"location":"api/CustomerCareOperationsAPI/#factoryreset-method","text":"Executes all operations needed for a plugin's factory reset.","title":"factoryreset method"},{"location":"api/CustomerCareOperationsAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/CustomerCareOperationsAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/CustomerCareOperationsAPI/#example","text":"","title":"Example"},{"location":"api/CustomerCareOperationsAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"CustomerCareOperations.1.factoryreset\" }","title":"Request"},{"location":"api/CustomerCareOperationsAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/DHCPServerAPI/","text":"DHCP Server API Version: 1.0.0 Status: DHCPServer interface for Thunder framework. (Defined by DHCPServer.json ) Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the DHCPServer interface (version 1.0.0). It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DHCP Server JSON-RPC interface. Methods The following methods are provided by the DHCPServer interface: DHCPServer interface methods: Method Description activate Activates a DHCP server deactivate Deactivates a DHCP server activate method Activates a DHCP server. Parameters Name Type Description params object ... params.interface string Network interface name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to activate server ERROR_UNKNOWN_KEY Invalid interface name given ERROR_ILLEGAL_STATE Server is already activated Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.activate\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } deactivate method Deactivates a DHCP server. Parameters Name Type Description params object ... params.interface string Network interface name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to deactivate server ERROR_UNKNOWN_KEY Invalid interface name given ERROR_ILLEGAL_STATE Server is not activated Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.deactivate\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the DHCPServer interface: DHCPServer interface properties: Property Description status (read-only) Server status status property Provides access to the server status. This property is read-only . Value The server argument shall be passed as the index to the property, e.g. DHCPServer.1.status@<server> . If omitted, status of all configured servers is returned. Result Name Type Description result array List of configured servers result[#] object ... result[#].interface string Network interface name result[#].active boolean Denotes if server is currently active result[#]?.begin string (optional) IP address pool start result[#]?.end string (optional) IP address pool end result[#]?.router string (optional) Router IP address result[#]?.leases array (optional) List of IP address leases result[#]?.leases[#] object (optional) Lease description result[#]?.leases[#].name string Client identifier (or client hardware address if identifier is absent) result[#]?.leases[#].ip string Client IP address result[#]?.leases[#]?.expires string (optional) Client IP expiration time (in ISO8601 format, empty: never expires) Errors Message Description ERROR_UNKNOWN_KEY Invalid server name given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.status@eth0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"active\": true, \"begin\": \"192.168.0.10\", \"end\": \"192.168.0.100\", \"router\": \"192.168.0.1\", \"leases\": [ { \"name\": \"00e04c326c56\", \"ip\": \"192.168.0.10\", \"expires\": \"2019-05-07T07:20:26Z\" } ] } ] }","title":"DHCP Server API"},{"location":"api/DHCPServerAPI/#dhcp-server-api","text":"Version: 1.0.0 Status: DHCPServer interface for Thunder framework. (Defined by DHCPServer.json )","title":"DHCP Server API"},{"location":"api/DHCPServerAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"api/DHCPServerAPI/#introduction","text":"","title":"Introduction"},{"location":"api/DHCPServerAPI/#scope","text":"This document describes purpose and functionality of the DHCPServer interface (version 1.0.0). It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"api/DHCPServerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/DHCPServerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/DHCPServerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/DHCPServerAPI/#description","text":"DHCP Server JSON-RPC interface.","title":"Description"},{"location":"api/DHCPServerAPI/#methods","text":"The following methods are provided by the DHCPServer interface: DHCPServer interface methods: Method Description activate Activates a DHCP server deactivate Deactivates a DHCP server","title":"Methods"},{"location":"api/DHCPServerAPI/#activate-method","text":"Activates a DHCP server.","title":"activate method"},{"location":"api/DHCPServerAPI/#parameters","text":"Name Type Description params object ... params.interface string Network interface name","title":"Parameters"},{"location":"api/DHCPServerAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/DHCPServerAPI/#errors","text":"Message Description ERROR_GENERAL Failed to activate server ERROR_UNKNOWN_KEY Invalid interface name given ERROR_ILLEGAL_STATE Server is already activated","title":"Errors"},{"location":"api/DHCPServerAPI/#example","text":"","title":"Example"},{"location":"api/DHCPServerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.activate\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"api/DHCPServerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/DHCPServerAPI/#deactivate-method","text":"Deactivates a DHCP server.","title":"deactivate method"},{"location":"api/DHCPServerAPI/#parameters_1","text":"Name Type Description params object ... params.interface string Network interface name","title":"Parameters"},{"location":"api/DHCPServerAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/DHCPServerAPI/#errors_1","text":"Message Description ERROR_GENERAL Failed to deactivate server ERROR_UNKNOWN_KEY Invalid interface name given ERROR_ILLEGAL_STATE Server is not activated","title":"Errors"},{"location":"api/DHCPServerAPI/#example_1","text":"","title":"Example"},{"location":"api/DHCPServerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.deactivate\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"api/DHCPServerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/DHCPServerAPI/#properties","text":"The following properties are provided by the DHCPServer interface: DHCPServer interface properties: Property Description status (read-only) Server status","title":"Properties"},{"location":"api/DHCPServerAPI/#status-property","text":"Provides access to the server status. This property is read-only .","title":"status property"},{"location":"api/DHCPServerAPI/#value","text":"The server argument shall be passed as the index to the property, e.g. DHCPServer.1.status@<server> . If omitted, status of all configured servers is returned.","title":"Value"},{"location":"api/DHCPServerAPI/#result_2","text":"Name Type Description result array List of configured servers result[#] object ... result[#].interface string Network interface name result[#].active boolean Denotes if server is currently active result[#]?.begin string (optional) IP address pool start result[#]?.end string (optional) IP address pool end result[#]?.router string (optional) Router IP address result[#]?.leases array (optional) List of IP address leases result[#]?.leases[#] object (optional) Lease description result[#]?.leases[#].name string Client identifier (or client hardware address if identifier is absent) result[#]?.leases[#].ip string Client IP address result[#]?.leases[#]?.expires string (optional) Client IP expiration time (in ISO8601 format, empty: never expires)","title":"Result"},{"location":"api/DHCPServerAPI/#errors_2","text":"Message Description ERROR_UNKNOWN_KEY Invalid server name given","title":"Errors"},{"location":"api/DHCPServerAPI/#example_2","text":"","title":"Example"},{"location":"api/DHCPServerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.status@eth0\" }","title":"Get Request"},{"location":"api/DHCPServerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"active\": true, \"begin\": \"192.168.0.10\", \"end\": \"192.168.0.100\", \"router\": \"192.168.0.1\", \"leases\": [ { \"name\": \"00e04c326c56\", \"ip\": \"192.168.0.10\", \"expires\": \"2019-05-07T07:20:26Z\" } ] } ] }","title":"Get Response"},{"location":"api/DIALServerAPI/","text":"DIAL Server API Version: 1.0.0 Status: DIALServer interface for Thunder framework. (Defined by DIALServer.json ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the DIALServer interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DIAL Server JSON-RPC interface. Properties The following properties are provided by the DIALServer interface: DIALServer interface properties: Property Description state Current application running state state property Provides access to the current application running state. Description This property can be used to update the running status of an un-managed application (i.e. running in passive mode ). For DIALServer-managed applications this property shall be considered read-only . Value Name Type Description (property) string Current application running state The application name argument shall be passed as the index to the property, e.g. DIALServer.1.state@<application name> . Result Name Type Description result string Current application running state Errors Message Description ERROR_UNKNOWN_KEY Specified application does not exist ERROR_ILLEGAL_STATE Specified application is running in active mode Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Stopped\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\", \"params\": \"Stopped\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DIALServer interface: DIALServer interface events: Notification Description start Signals that application launch (or show if previously hidden) was requested over DIAL stop Signals that application stop was requested over DIAL hide Signals that application hide was requested over DIAL show deprecated Signals that application show was requested over DIAL change deprecated Signals that application URL change was requested over DIAL start notification Signals that application launch (or show if previously hidden) was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object ... params.application string Application name params?.parameters string (optional) Additional application-specific parameters params?.payload string (optional) Additional application-specific payload Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"start\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.start\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\", \"payload\": \"...\" } } stop notification Signals that application stop was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object ... params.application string Application name params?.parameters string (optional) Additional application-specific parameters Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"stop\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.stop\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\" } } hide notification Signals that application hide was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object ... params.application string Application name Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"hide\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.hide\", \"params\": { \"application\": \"YouTube\" } } show notification Signals that application show was requested over DIAL. show is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object ... params.application string Application name Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"show\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.show\", \"params\": { \"application\": \"YouTube\" } } change notification Signals that application URL change was requested over DIAL. change is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object ... params.application string Application name Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"change\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.change\", \"params\": { \"application\": \"YouTube\" } }","title":"DIAL Server API"},{"location":"api/DIALServerAPI/#dial-server-api","text":"Version: 1.0.0 Status: DIALServer interface for Thunder framework. (Defined by DIALServer.json )","title":"DIAL Server API"},{"location":"api/DIALServerAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/DIALServerAPI/#introduction","text":"","title":"Introduction"},{"location":"api/DIALServerAPI/#scope","text":"This document describes purpose and functionality of the DIALServer interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/DIALServerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/DIALServerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/DIALServerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/DIALServerAPI/#description","text":"DIAL Server JSON-RPC interface.","title":"Description"},{"location":"api/DIALServerAPI/#properties","text":"The following properties are provided by the DIALServer interface: DIALServer interface properties: Property Description state Current application running state","title":"Properties"},{"location":"api/DIALServerAPI/#state-property","text":"Provides access to the current application running state.","title":"state property"},{"location":"api/DIALServerAPI/#description_1","text":"This property can be used to update the running status of an un-managed application (i.e. running in passive mode ). For DIALServer-managed applications this property shall be considered read-only .","title":"Description"},{"location":"api/DIALServerAPI/#value","text":"Name Type Description (property) string Current application running state The application name argument shall be passed as the index to the property, e.g. DIALServer.1.state@<application name> .","title":"Value"},{"location":"api/DIALServerAPI/#result","text":"Name Type Description result string Current application running state","title":"Result"},{"location":"api/DIALServerAPI/#errors","text":"Message Description ERROR_UNKNOWN_KEY Specified application does not exist ERROR_ILLEGAL_STATE Specified application is running in active mode","title":"Errors"},{"location":"api/DIALServerAPI/#example","text":"","title":"Example"},{"location":"api/DIALServerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\" }","title":"Get Request"},{"location":"api/DIALServerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Stopped\" }","title":"Get Response"},{"location":"api/DIALServerAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\", \"params\": \"Stopped\" }","title":"Set Request"},{"location":"api/DIALServerAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/DIALServerAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DIALServer interface: DIALServer interface events: Notification Description start Signals that application launch (or show if previously hidden) was requested over DIAL stop Signals that application stop was requested over DIAL hide Signals that application hide was requested over DIAL show deprecated Signals that application show was requested over DIAL change deprecated Signals that application URL change was requested over DIAL","title":"Notifications"},{"location":"api/DIALServerAPI/#start-notification","text":"Signals that application launch (or show if previously hidden) was requested over DIAL.","title":"start notification"},{"location":"api/DIALServerAPI/#description_2","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"api/DIALServerAPI/#parameters","text":"Name Type Description params object ... params.application string Application name params?.parameters string (optional) Additional application-specific parameters params?.payload string (optional) Additional application-specific payload","title":"Parameters"},{"location":"api/DIALServerAPI/#example_1","text":"","title":"Example"},{"location":"api/DIALServerAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"start\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DIALServerAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.start\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\", \"payload\": \"...\" } }","title":"Message"},{"location":"api/DIALServerAPI/#stop-notification","text":"Signals that application stop was requested over DIAL.","title":"stop notification"},{"location":"api/DIALServerAPI/#description_3","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"api/DIALServerAPI/#parameters_1","text":"Name Type Description params object ... params.application string Application name params?.parameters string (optional) Additional application-specific parameters","title":"Parameters"},{"location":"api/DIALServerAPI/#example_2","text":"","title":"Example"},{"location":"api/DIALServerAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"stop\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DIALServerAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.stop\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\" } }","title":"Message"},{"location":"api/DIALServerAPI/#hide-notification","text":"Signals that application hide was requested over DIAL.","title":"hide notification"},{"location":"api/DIALServerAPI/#description_4","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"api/DIALServerAPI/#parameters_2","text":"Name Type Description params object ... params.application string Application name","title":"Parameters"},{"location":"api/DIALServerAPI/#example_3","text":"","title":"Example"},{"location":"api/DIALServerAPI/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"hide\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DIALServerAPI/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.hide\", \"params\": { \"application\": \"YouTube\" } }","title":"Message"},{"location":"api/DIALServerAPI/#show-notification","text":"Signals that application show was requested over DIAL. show is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"show notification"},{"location":"api/DIALServerAPI/#description_5","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"api/DIALServerAPI/#parameters_3","text":"Name Type Description params object ... params.application string Application name","title":"Parameters"},{"location":"api/DIALServerAPI/#example_4","text":"","title":"Example"},{"location":"api/DIALServerAPI/#registration_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"show\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DIALServerAPI/#message_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.show\", \"params\": { \"application\": \"YouTube\" } }","title":"Message"},{"location":"api/DIALServerAPI/#change-notification","text":"Signals that application URL change was requested over DIAL. change is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"change notification"},{"location":"api/DIALServerAPI/#description_6","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"api/DIALServerAPI/#parameters_4","text":"Name Type Description params object ... params.application string Application name","title":"Parameters"},{"location":"api/DIALServerAPI/#example_5","text":"","title":"Example"},{"location":"api/DIALServerAPI/#registration_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"change\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DIALServerAPI/#message_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.change\", \"params\": { \"application\": \"YouTube\" } }","title":"Message"},{"location":"api/DTVAPI/","text":"DTV API Version: 1.0 Status: DTV plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the DTV plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The DTV plugin provides access to DVB services provided by a DVB stack. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description classname string Class name: DTV startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: DTV.json (version 1.0.0) (uncompliant-collapsed format) Methods The following methods are provided by the DTV plugin: DTV interface methods: Method Description addLnb Add a new LNB to the database addSatellite Add a new satellite to the database startServiceSearch Starts a service search finishServiceSearch Finishes a service search startPlaying Starts playing the specified service stopPlaying Stops playing the specified service addLnb method Add a new LNB to the database. Parameters Name Type Description params object ... params.name string User specified name for the LNB settings params.type string LNB type params.power string LNB power values params.diseqc_tone string Diseqc Tone params.diseqc_cswitch string Diseqc cswitch params.is22k boolean 22kHz tone on/off params.is12v boolean 12 volts on/off params.ispulseposition boolean Pulse position motor used to control dish position params.isdiseqcposition boolean Dish positioning is controlled by DiSEqC params.issmatv boolean SMATV switcher on/off params.diseqcrepeats integer Number of times to send a DiSEqC message to make sure it's been received params.u_switch integer DiSEqC uncommitted switch selector params.unicablechannel integer Unicable channel params?.unicablefreq integer (optional) Unicable frequency Result Name Type Description result boolean Return true if the LNB is added, false otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addLnb\", \"params\": { \"name\": \"Universal\", \"type\": \"universal\", \"power\": \"auto\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicablefreq\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } addSatellite method Add a new satellite to the database. Parameters Name Type Description params object ... params.name string User specified name for the satellite settings params.longitude integer Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 params.lnb string Name of the LNB settings to be used when tuning to this satellite Result Name Type Description result boolean Return true if the satellite is added, false otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addSatellite\", \"params\": { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } startServiceSearch method Starts a service search. Also see: searchstatus , serviceupdated Parameters Name Type Description params object ... params.tunertype string Tuner type params.searchtype string Supported Search Type params.retune boolean Set to true if current services are to be replaced in the database, false if the scan is to update the existing services params.usetuningparams boolean Set to true if the optional tuning parameters are defined params?.dvbstuningparams object (optional) Parameters required to tune to a DVB-S/S2 signal params?.dvbstuningparams.satellite string Name of the satellite settings to be used params?.dvbstuningparams.frequency integer Frequency of the transponder, in kHz params?.dvbstuningparams.polarity string Polarity setting params?.dvbstuningparams.symbolrate integer Symbol rate in Ksymb/sec params?.dvbstuningparams.fec string Forward error correction setting params?.dvbstuningparams.modulation string DVB S Modulation supported by the platform params?.dvbstuningparams.dvbs2 boolean True when tuning to a DVB-S2 signal params?.dvbctuningparams object (optional) Parameters required to tune to a DVB-C signal params?.dvbctuningparams.frequency integer Frequency of the transport, in Hz params?.dvbctuningparams.symbolrate integer Symbol rate in Ksymb/sec params?.dvbctuningparams.modulation string DVB C Modulation supported by the platform params?.dvbttuningparams object (optional) Parameters required to tune to a DVB-T/T2 signal params?.dvbttuningparams.frequency integer Frequency of the transport, in Hz params?.dvbttuningparams.bandwidth string Channel bandwidth params?.dvbttuningparams.mode string OFDM mode params?.dvbttuningparams.dvbt2 boolean True when tuning to a DVB-T2 signal params?.dvbttuningparams?.plpid integer (optional) PLP ID for tuning to a DVB-T2 signal Result Name Type Description result boolean Return true if the search is started, false otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startServiceSearch\", \"params\": { \"tunertype\": \"dvbs\", \"searchtype\": \"network\", \"retune\": false, \"usetuningparams\": true, \"dvbstuningparams\": { \"satellite\": \"Astra 28.2\", \"frequency\": 10714000, \"polarity\": \"horizontal\", \"symbolrate\": 22000, \"fec\": \"fec5_6\", \"modulation\": \"qpsk\", \"dvbs2\": false }, \"dvbctuningparams\": { \"frequency\": 474000000, \"symbolrate\": 6900, \"modulation\": \"128qam\" }, \"dvbttuningparams\": { \"frequency\": 474000000, \"bandwidth\": \"8MHz\", \"mode\": \"ofdm_32K\", \"dvbt2\": false, \"plpid\": 0 } } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } finishServiceSearch method Finishes a service search. Parameters Name Type Description params object ... params.tunertype string Tuner type params.savechanges boolean Set true if the services found during the search should be saved Result Name Type Description result boolean Return false if the tunertype isn't valid, true otherwise Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.finishServiceSearch\", \"params\": { \"tunertype\": \"dvbs\", \"savechanges\": true } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true } startPlaying method Starts playing the specified service. Also see: serviceupdated , eventchanged , videochanged , audiochanged , subtitleschanged Parameters Name Type Description params object ... params?.dvburi string (optional) DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params?.lcn integer (optional) LCN of the service to be tuned to params?.monitoronly boolean (optional) (Version 2) set to 'true' to monitor SI/PSI data only. Will default to 'false' if not defined Result Name Type Description result integer The play handle assigned to play the given service. Will be -1 if the service can't be played Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startPlaying\", \"params\": { \"dvburi\": \"2.2041.9212\", \"lcn\": 0, \"monitoronly\": true } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } stopPlaying method Stops playing the specified service. Parameters Name Type Description params integer The play handle returned by startPlaying Result Name Type Description result null Always null (default: None ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.stopPlaying\", \"params\": 0 } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the DTV plugin: DTV interface properties: Property Description numberOfCountries (read-only) Number of country configurations available countryList (read-only) Array containing the name and 3 character ISO country code for all the available country configurations country Country configuration using the ISO 3-character country code lnbList (read-only) Array of LNBs defined in the database satelliteList (read-only) Array of satellites defined in the database numberOfServices (read-only) Total number of services in the service database serviceList (read-only) List of services for the given type of tuner, transport (version 2), or all services if neither is given serviceInfo (read-only) Information for the given service as defined by its DVB triplet URI serviceComponents (read-only) (Version 2) array of components for the given service defined by its URI transportInfo (read-only) Information for the given transport as defined by its DVB doublet URI nowNextEvents (read-only) Now and next events (EITp/f) for the given service scheduleEvents (read-only) Events which are scheduled (EITsched) for the given service extendedEventInfo (read-only) Extended event info for the given service and event ID (version 2) status (read-only) Information related to the play handle defined by the index signalInfo (read-only) Strength and quality of the currently tuned signal for the given play handle (version 2) numberOfCountries property Provides access to the number of country configurations available. This property is read-only . Value Result Name Type Description result integer Number of country configurations available Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfCountries\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 5 } countryList property Provides access to the array containing the name and 3 character ISO country code for all the available country configurations. This property is read-only . Value Result Name Type Description result array List of available country configurations result[#] object ... result[#].name string Name of the country as a UTF-8 string result[#].code integer 3-character ISO code for the country Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.countryList\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"UK\", \"code\": 6775410 } ] } country property Provides access to the country configuration using the ISO 3-character country code. Value Name Type Description (property) integer 3-character ISO code for the country Result Name Type Description result integer 3-character ISO code for the country Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 6775410 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\", \"params\": 6775410 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } lnbList property Provides access to the array of LNBs defined in the database. This property is read-only . Value Result Name Type Description result array Array of LNBs defined in the database result[#] object ... result[#].name string User specified name for the LNB settings result[#].type string LNB type result[#].power string LNB power values result[#].diseqc_tone string Diseqc Tone result[#].diseqc_cswitch string Diseqc cswitch result[#].is22k boolean 22kHz tone on/off result[#].is12v boolean 12 volts on/off result[#].ispulseposition boolean Pulse position motor used to control dish position result[#].isdiseqcposition boolean Dish positioning is controlled by DiSEqC result[#].issmatv boolean SMATV switcher on/off result[#].diseqcrepeats integer Number of times to send a DiSEqC message to make sure it's been received result[#].u_switch integer DiSEqC uncommitted switch selector result[#].unicablechannel integer Unicable channel result[#]?.unicablefreq integer (optional) Unicable frequency Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.lnbList\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Universal\", \"type\": \"universal\", \"power\": \"auto\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicablefreq\": 0 } ] } satelliteList property Provides access to the array of satellites defined in the database. This property is read-only . Value Result Name Type Description result array Array of satellites defined in the database result[#] object ... result[#].name string User specified name for the satellite settings result[#].longitude integer Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 result[#].lnb string Name of the LNB settings to be used when tuning to this satellite Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.satelliteList\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } ] } numberOfServices property Provides access to the total number of services in the service database. This property is read-only . Value Result Name Type Description result integer Total number of services in the service database Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfServices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 145 } serviceList property Provides access to the list of services for the given type of tuner, transport (version 2), or all services if neither is given. This property is read-only . Value The optional tuner type, or transport dvb doublet argument shall be passed as the index to the property, e.g. DTV.1.serviceList@<optional tuner type, or transport dvb doublet> . Result Name Type Description result array List of services for the given type of tuner, transport (version 2), or all services if neither is given result[#] object Service information result[#].fullname string (Version 2) Full service name as given by the service descriptor in the SDT result[#].shortname string Short service name as given by the service descriptor in the SDT result[#].dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal result[#].servicetype string (Version 2) Service type as given by the service descriptor in the SDT result[#].lcn integer Logical channel number result[#].scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT result[#].hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT result[#].hidden boolean (Version 2) True if the service should be hidden result[#].selectable boolean (Version 2) True if the service should be user selectable result[#].runningstatus string (Version 2) The running status as given by the service descriptor in the SDT Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.serviceList@dvbs or 9018.4161\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } ] } serviceInfo property Provides access to the information for the given service as defined by its DVB triplet URI. This property is read-only . Value The service uri string argument shall be passed as the index to the property, e.g. DTV.1.serviceInfo@<service uri string> . Result Name Type Description result object Service information result.fullname string (Version 2) Full service name as given by the service descriptor in the SDT result.shortname string Short service name as given by the service descriptor in the SDT result.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal result.servicetype string (Version 2) Service type as given by the service descriptor in the SDT result.lcn integer Logical channel number result.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT result.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT result.hidden boolean (Version 2) True if the service should be hidden result.selectable boolean (Version 2) True if the service should be user selectable result.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.serviceInfo@9018.4161.1001\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } serviceComponents property Provides access to the (Version 2) array of components for the given service defined by its URI. This property is read-only . Value The service uri string argument shall be passed as the index to the property, e.g. DTV.1.serviceComponents@<service uri string> . Result Name Type Description result array (Version 2) array of components for the given service defined by its URI result[#] object Video, audio, subtitle, teletext or data component info result[#].type string Type of data contained in this component result[#]?.tags array (optional) Array of component tags result[#]?.tags[#] integer (optional) ... result[#].pid integer PID of the component result[#]?.video object (optional) Video related information for a video component result[#]?.video.codec string Video or audio codec type result[#]?.audio object (optional) Audio related information for an audio component result[#]?.audio?.codec string (optional) Video or audio codec type result[#]?.audio.language string ISO 3-char language code result[#]?.audio.type string Type of the audio contained in the component result[#]?.audio.mode string Audio mode result[#]?.subtitles object (optional) DVB subtitle related information for a subtitle component result[#]?.subtitles.language string ISO 3-char language code result[#]?.subtitles.format string Intended TV format for the subtitles result[#]?.subtitles.compositionpage integer Composition page to be used for subtitles in this component result[#]?.subtitles.ancillarypage integer Ancillary page to be used for subtitles in this component result[#]?.teletext object (optional) Teletext related information for a teletext component result[#]?.teletext.language string ISO 3-char language code result[#]?.teletext.type integer Type of teletext data result[#]?.teletext.magazine integer Magazine number for this type and language result[#]?.teletext.page integer Page number for this type and language Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.serviceComponents@9018.4161.1001\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"video\", \"tags\": [ 0 ], \"pid\": 1100, \"video\": { \"codec\": \"mpeg2\" }, \"audio\": { \"codec\": \"mpeg2\", \"language\": \"eng\", \"type\": \"normal\", \"mode\": \"mono\" }, \"subtitles\": { \"language\": \"eng\", \"format\": \"default\", \"compositionpage\": 0, \"ancillarypage\": 0 }, \"teletext\": { \"language\": \"eng\", \"type\": 0, \"magazine\": 0, \"page\": 0 } } ] } transportInfo property Provides access to the information for the given transport as defined by its DVB doublet URI. This property is read-only . Value The transport uri string argument shall be passed as the index to the property, e.g. DTV.1.transportInfo@<transport uri string> . Result Name Type Description result object (Version 2) Details for a transport result.tunertype string Tuner type result.originalnetworkid integer Original network ID of the transport result.transportid integer Transport ID of the transport result.strength integer Signal strength as a percentage result.quality integer Signal quality as a percentage result?.dvbctuningparams object (optional) Parameters required to tune to a DVB-C signal result?.dvbctuningparams.frequency integer Frequency of the transport, in Hz result?.dvbctuningparams.symbolrate integer Symbol rate in Ksymb/sec result?.dvbctuningparams.modulation string DVB C Modulation supported by the platform result?.dvbstuningparams object (optional) Parameters required to tune to a DVB-S/S2 signal result?.dvbstuningparams.satellite string Name of the satellite settings to be used result?.dvbstuningparams.frequency integer Frequency of the transponder, in kHz result?.dvbstuningparams.polarity string Polarity setting result?.dvbstuningparams.symbolrate integer Symbol rate in Ksymb/sec result?.dvbstuningparams.fec string Forward error correction setting result?.dvbstuningparams.modulation string DVB S Modulation supported by the platform result?.dvbstuningparams.dvbs2 boolean True when tuning to a DVB-S2 signal result?.dvbttuningparams object (optional) Parameters required to tune to a DVB-T/T2 signal result?.dvbttuningparams.frequency integer Frequency of the transport, in Hz result?.dvbttuningparams.bandwidth string Channel bandwidth result?.dvbttuningparams.mode string OFDM mode result?.dvbttuningparams.dvbt2 boolean True when tuning to a DVB-T2 signal result?.dvbttuningparams?.plpid integer (optional) PLP ID for tuning to a DVB-T2 signal Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.transportInfo@9018.4161\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"tunertype\": \"dvbt\", \"originalnetworkid\": 8204, \"transportid\": 8204, \"strength\": 76, \"quality\": 95, \"dvbctuningparams\": { \"frequency\": 474000000, \"symbolrate\": 6900, \"modulation\": \"128qam\" }, \"dvbstuningparams\": { \"satellite\": \"Astra 28.2\", \"frequency\": 10714000, \"polarity\": \"horizontal\", \"symbolrate\": 22000, \"fec\": \"fec5_6\", \"modulation\": \"qpsk\", \"dvbs2\": false }, \"dvbttuningparams\": { \"frequency\": 474000000, \"bandwidth\": \"8MHz\", \"mode\": \"ofdm_32K\", \"dvbt2\": false, \"plpid\": 0 } } } nowNextEvents property Provides access to the now and next events (EITp/f) for the given service. This property is read-only . Value The service uri string argument shall be passed as the index to the property, e.g. DTV.1.nowNextEvents@<service uri string> . Result Name Type Description result object Now and next events (EITp/f) for the given service result?.now object (optional) EIT event information result?.now.name string Name of the DVB event as defined in the short event descriptor result?.now.starttime integer UTC start time of the event in seconds result?.now.duration integer Duration of the event in seconds result?.now.eventid integer ID of the event from the event information table result?.now.shortdescription string Event description from the EIT short event descriptor result?.now.hassubtitles boolean (Version 2) True if subtitles are available result?.now.hasaudiodescription boolean (Version 2) True if audio description is available result?.now.parentalrating integer (Version 2) Parental rating for the event, will be 0 if undefined result?.now.contentdata array (Version 2) The first 2 4-bit values from the content descriptor as separate bytes result?.now.contentdata[#] integer ... result?.now.hasextendedinfo boolean (Version 2) True if there's extended event information available result?.next object (optional) EIT event information result?.next.name string Name of the DVB event as defined in the short event descriptor result?.next.starttime integer UTC start time of the event in seconds result?.next.duration integer Duration of the event in seconds result?.next.eventid integer ID of the event from the event information table result?.next.shortdescription string Event description from the EIT short event descriptor result?.next.hassubtitles boolean (Version 2) True if subtitles are available result?.next.hasaudiodescription boolean (Version 2) True if audio description is available result?.next.parentalrating integer (Version 2) Parental rating for the event, will be 0 if undefined result?.next.contentdata array (Version 2) The first 2 4-bit values from the content descriptor as separate bytes result?.next.contentdata[#] integer ... result?.next.hasextendedinfo boolean (Version 2) True if there's extended event information available Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.nowNextEvents@9018.4161.1001\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"now\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\", \"hassubtitles\": false, \"hasaudiodescription\": false, \"parentalrating\": 12, \"contentdata\": [ 0 ], \"hasextendedinfo\": false }, \"next\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\", \"hassubtitles\": false, \"hasaudiodescription\": false, \"parentalrating\": 12, \"contentdata\": [ 0 ], \"hasextendedinfo\": false } } } scheduleEvents property Provides access to the events which are scheduled (EITsched) for the given service. This property is read-only . Value The service uri string, with optional start and end times as number of seconds utc argument shall be passed as the index to the property, e.g. DTV.1.scheduleEvents@<service uri string, with optional start and end times as number of seconds utc> . Result Name Type Description result array Events which are scheduled (EITsched) for the given service result[#] object EIT event information result[#].name string Name of the DVB event as defined in the short event descriptor result[#].starttime integer UTC start time of the event in seconds result[#].duration integer Duration of the event in seconds result[#].eventid integer ID of the event from the event information table result[#].shortdescription string Event description from the EIT short event descriptor result[#].hassubtitles boolean (Version 2) True if subtitles are available result[#].hasaudiodescription boolean (Version 2) True if audio description is available result[#].parentalrating integer (Version 2) Parental rating for the event, will be 0 if undefined result[#].contentdata array (Version 2) The first 2 4-bit values from the content descriptor as separate bytes result[#].contentdata[#] integer ... result[#].hasextendedinfo boolean (Version 2) True if there's extended event information available Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.scheduleEvents@9018.4161.1001:12345000,12346000\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\", \"hassubtitles\": false, \"hasaudiodescription\": false, \"parentalrating\": 12, \"contentdata\": [ 0 ], \"hasextendedinfo\": false } ] } extendedEventInfo property Provides access to the extended event info for the given service and event ID (version 2). This property is read-only . Value The service uri string and event id argument shall be passed as the index to the property, e.g. DTV.1.extendedEventInfo@<service uri string and event id> . Result Name Type Description result object (Version 2) Event information from the EIT extended event descriptor result?.description string (optional) Extended event description text result?.items array (optional) An array of extended event item result?.items[#] object (optional) ... result?.items[#]?.description string (optional) Description of the item result?.items[#]?.item string (optional) Item text Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.extendedEventInfo@9018.4161.1001:3012\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"description\": \"A long event description\", \"items\": [ { \"description\": \"Actor 1\", \"item\": \"Kermit The Frog\" } ] } } status property Provides access to the information related to the play handle defined by the index. This property is read-only . Value The play handle argument shall be passed as the index to the property, e.g. DTV.1.status@<play handle> . Result Name Type Description result object Information related to the play handle defined by the index result.tuner integer The tuner id used by the play handle result.demux integer The demux id used by the play handle result.pmtpid integer The PMT PID of the service being played result.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal result.lcn integer LCN of the service being played Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.status@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"tuner\": 0, \"demux\": 0, \"pmtpid\": 1100, \"dvburi\": \"2.2041.9212\", \"lcn\": 1001 } } signalInfo property Provides access to the strength and quality of the currently tuned signal for the given play handle (version 2). This property is read-only . Value The play handle argument shall be passed as the index to the property, e.g. DTV.1.signalInfo@<play handle> . Result Name Type Description result object Strength and quality of the currently tuned signal for the given play handle (version 2) result.locked boolean Tuned locked status result.strength integer The signal strength as a percentage result.quality integer The signal quality as a percentage Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.signalInfo@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"locked\": false, \"strength\": 76, \"quality\": 95 } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DTV plugin: DTV interface events: Notification Description searchstatus Triggered during the course of a service search serviceupdated (Version 2) Notification sent when details of a service have changed, such as its name, service type, running or scrambled state serviceadded (Version 2) Notification sent when a new service has been dynamically added to the service list servicedeleted (Version 2) Notification sent when a service has been deleted from the service list videochanged (Version 2) Notification sent when the video PID or codec has changed audiochanged (Version 2) Notification sent when the audio PID or codec has changed subtitleschanged (Version 2) Notification sent when the subtitles have changed eventchanged (Version 2) Notification sent when the EIT 'now' event is received when starting to play a service and when the 'now' event changes searchstatus notification Triggered during the course of a service search. Parameters Name Type Description params object ... params.handle integer The handle assigned for the search and to which this information is relevant params.eventtype string Event type that's sent as an asynchronous notification params.finished boolean Set to true if the service search has finished, false otherwise params.progress integer Progress of the search expressed as a percentage params?.transport object (optional) (Version 2) Details for a transport params?.transport.tunertype string Tuner type params?.transport.originalnetworkid integer Original network ID of the transport params?.transport.transportid integer Transport ID of the transport params?.transport.strength integer Signal strength as a percentage params?.transport.quality integer Signal quality as a percentage params?.transport?.dvbctuningparams object (optional) Parameters required to tune to a DVB-C signal params?.transport?.dvbctuningparams.frequency integer Frequency of the transport, in Hz params?.transport?.dvbctuningparams.symbolrate integer Symbol rate in Ksymb/sec params?.transport?.dvbctuningparams.modulation string DVB C Modulation supported by the platform params?.transport?.dvbstuningparams object (optional) Parameters required to tune to a DVB-S/S2 signal params?.transport?.dvbstuningparams.satellite string Name of the satellite settings to be used params?.transport?.dvbstuningparams.frequency integer Frequency of the transponder, in kHz params?.transport?.dvbstuningparams.polarity string Polarity setting params?.transport?.dvbstuningparams.symbolrate integer Symbol rate in Ksymb/sec params?.transport?.dvbstuningparams.fec string Forward error correction setting params?.transport?.dvbstuningparams.modulation string DVB S Modulation supported by the platform params?.transport?.dvbstuningparams.dvbs2 boolean True when tuning to a DVB-S2 signal params?.transport?.dvbttuningparams object (optional) Parameters required to tune to a DVB-T/T2 signal params?.transport?.dvbttuningparams.frequency integer Frequency of the transport, in Hz params?.transport?.dvbttuningparams.bandwidth string Channel bandwidth params?.transport?.dvbttuningparams.mode string OFDM mode params?.transport?.dvbttuningparams.dvbt2 boolean True when tuning to a DVB-T2 signal params?.transport?.dvbttuningparams?.plpid integer (optional) PLP ID for tuning to a DVB-T2 signal Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"searchstatus\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.searchstatus\", \"params\": { \"handle\": 0, \"eventtype\": \"ServiceSearchStatus\", \"finished\": false, \"progress\": 65, \"transport\": { \"tunertype\": \"dvbt\", \"originalnetworkid\": 8204, \"transportid\": 8204, \"strength\": 76, \"quality\": 95, \"dvbctuningparams\": { \"frequency\": 474000000, \"symbolrate\": 6900, \"modulation\": \"128qam\" }, \"dvbstuningparams\": { \"satellite\": \"Astra 28.2\", \"frequency\": 10714000, \"polarity\": \"horizontal\", \"symbolrate\": 22000, \"fec\": \"fec5_6\", \"modulation\": \"qpsk\", \"dvbs2\": false }, \"dvbttuningparams\": { \"frequency\": 474000000, \"bandwidth\": \"8MHz\", \"mode\": \"ofdm_32K\", \"dvbt2\": false, \"plpid\": 0 } } } } serviceupdated notification (Version 2) Notification sent when details of a service have changed, such as its name, service type, running or scrambled state. Parameters Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"serviceupdated\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.serviceupdated\", \"params\": { \"eventtype\": \"ServiceUpdated\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } } serviceadded notification (Version 2) Notification sent when a new service has been dynamically added to the service list. Parameters Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"serviceadded\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.serviceadded\", \"params\": { \"eventtype\": \"ServiceAdded\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } } servicedeleted notification (Version 2) Notification sent when a service has been deleted from the service list. Parameters Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"servicedeleted\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.servicedeleted\", \"params\": { \"eventtype\": \"ServiceDeleted\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } } videochanged notification (Version 2) Notification sent when the video PID or codec has changed. Parameters Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"videochanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.videochanged\", \"params\": { \"eventtype\": \"VideoChanged\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } } audiochanged notification (Version 2) Notification sent when the audio PID or codec has changed. Parameters Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"audiochanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.audiochanged\", \"params\": { \"eventtype\": \"AudioChanged\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } } subtitleschanged notification (Version 2) Notification sent when the subtitles have changed. Parameters Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"subtitleschanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.subtitleschanged\", \"params\": { \"eventtype\": \"SubtitlesChanged\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } } eventchanged notification (Version 2) Notification sent when the EIT 'now' event is received when starting to play a service and when the 'now' event changes. Parameters Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT params.event object EIT event information params.event.name string Name of the DVB event as defined in the short event descriptor params.event.starttime integer UTC start time of the event in seconds params.event.duration integer Duration of the event in seconds params.event.eventid integer ID of the event from the event information table params.event.shortdescription string Event description from the EIT short event descriptor params.event.hassubtitles boolean (Version 2) True if subtitles are available params.event.hasaudiodescription boolean (Version 2) True if audio description is available params.event.parentalrating integer (Version 2) Parental rating for the event, will be 0 if undefined params.event.contentdata array (Version 2) The first 2 4-bit values from the content descriptor as separate bytes params.event.contentdata[#] integer ... params.event.hasextendedinfo boolean (Version 2) True if there's extended event information available Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"eventchanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.eventchanged\", \"params\": { \"eventtype\": \"EventChanged\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" }, \"event\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\", \"hassubtitles\": false, \"hasaudiodescription\": false, \"parentalrating\": 12, \"contentdata\": [ 0 ], \"hasextendedinfo\": false } } }","title":"DTV API"},{"location":"api/DTVAPI/#dtv-api","text":"Version: 1.0 Status: DTV plugin for Thunder framework.","title":"DTV API"},{"location":"api/DTVAPI/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"api/DTVAPI/#introduction","text":"","title":"Introduction"},{"location":"api/DTVAPI/#scope","text":"This document describes purpose and functionality of the DTV plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/DTVAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/DTVAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/DTVAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/DTVAPI/#description","text":"The DTV plugin provides access to DVB services provided by a DVB stack. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"api/DTVAPI/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description classname string Class name: DTV startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"api/DTVAPI/#interfaces","text":"This plugin implements the following interfaces: DTV.json (version 1.0.0) (uncompliant-collapsed format)","title":"Interfaces"},{"location":"api/DTVAPI/#methods","text":"The following methods are provided by the DTV plugin: DTV interface methods: Method Description addLnb Add a new LNB to the database addSatellite Add a new satellite to the database startServiceSearch Starts a service search finishServiceSearch Finishes a service search startPlaying Starts playing the specified service stopPlaying Stops playing the specified service","title":"Methods"},{"location":"api/DTVAPI/#addlnb-method","text":"Add a new LNB to the database.","title":"addLnb method"},{"location":"api/DTVAPI/#parameters","text":"Name Type Description params object ... params.name string User specified name for the LNB settings params.type string LNB type params.power string LNB power values params.diseqc_tone string Diseqc Tone params.diseqc_cswitch string Diseqc cswitch params.is22k boolean 22kHz tone on/off params.is12v boolean 12 volts on/off params.ispulseposition boolean Pulse position motor used to control dish position params.isdiseqcposition boolean Dish positioning is controlled by DiSEqC params.issmatv boolean SMATV switcher on/off params.diseqcrepeats integer Number of times to send a DiSEqC message to make sure it's been received params.u_switch integer DiSEqC uncommitted switch selector params.unicablechannel integer Unicable channel params?.unicablefreq integer (optional) Unicable frequency","title":"Parameters"},{"location":"api/DTVAPI/#result","text":"Name Type Description result boolean Return true if the LNB is added, false otherwise","title":"Result"},{"location":"api/DTVAPI/#example","text":"","title":"Example"},{"location":"api/DTVAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addLnb\", \"params\": { \"name\": \"Universal\", \"type\": \"universal\", \"power\": \"auto\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicablefreq\": 0 } }","title":"Request"},{"location":"api/DTVAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"api/DTVAPI/#addsatellite-method","text":"Add a new satellite to the database.","title":"addSatellite method"},{"location":"api/DTVAPI/#parameters_1","text":"Name Type Description params object ... params.name string User specified name for the satellite settings params.longitude integer Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 params.lnb string Name of the LNB settings to be used when tuning to this satellite","title":"Parameters"},{"location":"api/DTVAPI/#result_1","text":"Name Type Description result boolean Return true if the satellite is added, false otherwise","title":"Result"},{"location":"api/DTVAPI/#example_1","text":"","title":"Example"},{"location":"api/DTVAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.addSatellite\", \"params\": { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } }","title":"Request"},{"location":"api/DTVAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"api/DTVAPI/#startservicesearch-method","text":"Starts a service search. Also see: searchstatus , serviceupdated","title":"startServiceSearch method"},{"location":"api/DTVAPI/#parameters_2","text":"Name Type Description params object ... params.tunertype string Tuner type params.searchtype string Supported Search Type params.retune boolean Set to true if current services are to be replaced in the database, false if the scan is to update the existing services params.usetuningparams boolean Set to true if the optional tuning parameters are defined params?.dvbstuningparams object (optional) Parameters required to tune to a DVB-S/S2 signal params?.dvbstuningparams.satellite string Name of the satellite settings to be used params?.dvbstuningparams.frequency integer Frequency of the transponder, in kHz params?.dvbstuningparams.polarity string Polarity setting params?.dvbstuningparams.symbolrate integer Symbol rate in Ksymb/sec params?.dvbstuningparams.fec string Forward error correction setting params?.dvbstuningparams.modulation string DVB S Modulation supported by the platform params?.dvbstuningparams.dvbs2 boolean True when tuning to a DVB-S2 signal params?.dvbctuningparams object (optional) Parameters required to tune to a DVB-C signal params?.dvbctuningparams.frequency integer Frequency of the transport, in Hz params?.dvbctuningparams.symbolrate integer Symbol rate in Ksymb/sec params?.dvbctuningparams.modulation string DVB C Modulation supported by the platform params?.dvbttuningparams object (optional) Parameters required to tune to a DVB-T/T2 signal params?.dvbttuningparams.frequency integer Frequency of the transport, in Hz params?.dvbttuningparams.bandwidth string Channel bandwidth params?.dvbttuningparams.mode string OFDM mode params?.dvbttuningparams.dvbt2 boolean True when tuning to a DVB-T2 signal params?.dvbttuningparams?.plpid integer (optional) PLP ID for tuning to a DVB-T2 signal","title":"Parameters"},{"location":"api/DTVAPI/#result_2","text":"Name Type Description result boolean Return true if the search is started, false otherwise","title":"Result"},{"location":"api/DTVAPI/#example_2","text":"","title":"Example"},{"location":"api/DTVAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startServiceSearch\", \"params\": { \"tunertype\": \"dvbs\", \"searchtype\": \"network\", \"retune\": false, \"usetuningparams\": true, \"dvbstuningparams\": { \"satellite\": \"Astra 28.2\", \"frequency\": 10714000, \"polarity\": \"horizontal\", \"symbolrate\": 22000, \"fec\": \"fec5_6\", \"modulation\": \"qpsk\", \"dvbs2\": false }, \"dvbctuningparams\": { \"frequency\": 474000000, \"symbolrate\": 6900, \"modulation\": \"128qam\" }, \"dvbttuningparams\": { \"frequency\": 474000000, \"bandwidth\": \"8MHz\", \"mode\": \"ofdm_32K\", \"dvbt2\": false, \"plpid\": 0 } } }","title":"Request"},{"location":"api/DTVAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"api/DTVAPI/#finishservicesearch-method","text":"Finishes a service search.","title":"finishServiceSearch method"},{"location":"api/DTVAPI/#parameters_3","text":"Name Type Description params object ... params.tunertype string Tuner type params.savechanges boolean Set true if the services found during the search should be saved","title":"Parameters"},{"location":"api/DTVAPI/#result_3","text":"Name Type Description result boolean Return false if the tunertype isn't valid, true otherwise","title":"Result"},{"location":"api/DTVAPI/#example_3","text":"","title":"Example"},{"location":"api/DTVAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.finishServiceSearch\", \"params\": { \"tunertype\": \"dvbs\", \"savechanges\": true } }","title":"Request"},{"location":"api/DTVAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": true }","title":"Response"},{"location":"api/DTVAPI/#startplaying-method","text":"Starts playing the specified service. Also see: serviceupdated , eventchanged , videochanged , audiochanged , subtitleschanged","title":"startPlaying method"},{"location":"api/DTVAPI/#parameters_4","text":"Name Type Description params object ... params?.dvburi string (optional) DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params?.lcn integer (optional) LCN of the service to be tuned to params?.monitoronly boolean (optional) (Version 2) set to 'true' to monitor SI/PSI data only. Will default to 'false' if not defined","title":"Parameters"},{"location":"api/DTVAPI/#result_4","text":"Name Type Description result integer The play handle assigned to play the given service. Will be -1 if the service can't be played","title":"Result"},{"location":"api/DTVAPI/#example_4","text":"","title":"Example"},{"location":"api/DTVAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.startPlaying\", \"params\": { \"dvburi\": \"2.2041.9212\", \"lcn\": 0, \"monitoronly\": true } }","title":"Request"},{"location":"api/DTVAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/DTVAPI/#stopplaying-method","text":"Stops playing the specified service.","title":"stopPlaying method"},{"location":"api/DTVAPI/#parameters_5","text":"Name Type Description params integer The play handle returned by startPlaying","title":"Parameters"},{"location":"api/DTVAPI/#result_5","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/DTVAPI/#example_5","text":"","title":"Example"},{"location":"api/DTVAPI/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.stopPlaying\", \"params\": 0 }","title":"Request"},{"location":"api/DTVAPI/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/DTVAPI/#properties","text":"The following properties are provided by the DTV plugin: DTV interface properties: Property Description numberOfCountries (read-only) Number of country configurations available countryList (read-only) Array containing the name and 3 character ISO country code for all the available country configurations country Country configuration using the ISO 3-character country code lnbList (read-only) Array of LNBs defined in the database satelliteList (read-only) Array of satellites defined in the database numberOfServices (read-only) Total number of services in the service database serviceList (read-only) List of services for the given type of tuner, transport (version 2), or all services if neither is given serviceInfo (read-only) Information for the given service as defined by its DVB triplet URI serviceComponents (read-only) (Version 2) array of components for the given service defined by its URI transportInfo (read-only) Information for the given transport as defined by its DVB doublet URI nowNextEvents (read-only) Now and next events (EITp/f) for the given service scheduleEvents (read-only) Events which are scheduled (EITsched) for the given service extendedEventInfo (read-only) Extended event info for the given service and event ID (version 2) status (read-only) Information related to the play handle defined by the index signalInfo (read-only) Strength and quality of the currently tuned signal for the given play handle (version 2)","title":"Properties"},{"location":"api/DTVAPI/#numberofcountries-property","text":"Provides access to the number of country configurations available. This property is read-only .","title":"numberOfCountries property"},{"location":"api/DTVAPI/#value","text":"","title":"Value"},{"location":"api/DTVAPI/#result_6","text":"Name Type Description result integer Number of country configurations available","title":"Result"},{"location":"api/DTVAPI/#example_6","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfCountries\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 5 }","title":"Get Response"},{"location":"api/DTVAPI/#countrylist-property","text":"Provides access to the array containing the name and 3 character ISO country code for all the available country configurations. This property is read-only .","title":"countryList property"},{"location":"api/DTVAPI/#value_1","text":"","title":"Value"},{"location":"api/DTVAPI/#result_7","text":"Name Type Description result array List of available country configurations result[#] object ... result[#].name string Name of the country as a UTF-8 string result[#].code integer 3-character ISO code for the country","title":"Result"},{"location":"api/DTVAPI/#example_7","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.countryList\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"UK\", \"code\": 6775410 } ] }","title":"Get Response"},{"location":"api/DTVAPI/#country-property","text":"Provides access to the country configuration using the ISO 3-character country code.","title":"country property"},{"location":"api/DTVAPI/#value_2","text":"Name Type Description (property) integer 3-character ISO code for the country","title":"Value"},{"location":"api/DTVAPI/#result_8","text":"Name Type Description result integer 3-character ISO code for the country","title":"Result"},{"location":"api/DTVAPI/#example_8","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 6775410 }","title":"Get Response"},{"location":"api/DTVAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.country\", \"params\": 6775410 }","title":"Set Request"},{"location":"api/DTVAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/DTVAPI/#lnblist-property","text":"Provides access to the array of LNBs defined in the database. This property is read-only .","title":"lnbList property"},{"location":"api/DTVAPI/#value_3","text":"","title":"Value"},{"location":"api/DTVAPI/#result_9","text":"Name Type Description result array Array of LNBs defined in the database result[#] object ... result[#].name string User specified name for the LNB settings result[#].type string LNB type result[#].power string LNB power values result[#].diseqc_tone string Diseqc Tone result[#].diseqc_cswitch string Diseqc cswitch result[#].is22k boolean 22kHz tone on/off result[#].is12v boolean 12 volts on/off result[#].ispulseposition boolean Pulse position motor used to control dish position result[#].isdiseqcposition boolean Dish positioning is controlled by DiSEqC result[#].issmatv boolean SMATV switcher on/off result[#].diseqcrepeats integer Number of times to send a DiSEqC message to make sure it's been received result[#].u_switch integer DiSEqC uncommitted switch selector result[#].unicablechannel integer Unicable channel result[#]?.unicablefreq integer (optional) Unicable frequency","title":"Result"},{"location":"api/DTVAPI/#example_9","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.lnbList\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Universal\", \"type\": \"universal\", \"power\": \"auto\", \"diseqc_tone\": \"off\", \"diseqc_cswitch\": \"off\", \"is22k\": false, \"is12v\": false, \"ispulseposition\": false, \"isdiseqcposition\": false, \"issmatv\": false, \"diseqcrepeats\": 0, \"u_switch\": 0, \"unicablechannel\": 0, \"unicablefreq\": 0 } ] }","title":"Get Response"},{"location":"api/DTVAPI/#satellitelist-property","text":"Provides access to the array of satellites defined in the database. This property is read-only .","title":"satelliteList property"},{"location":"api/DTVAPI/#value_4","text":"","title":"Value"},{"location":"api/DTVAPI/#result_10","text":"Name Type Description result array Array of satellites defined in the database result[#] object ... result[#].name string User specified name for the satellite settings result[#].longitude integer Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50 result[#].lnb string Name of the LNB settings to be used when tuning to this satellite","title":"Result"},{"location":"api/DTVAPI/#example_10","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.satelliteList\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Astra 28.2E\", \"longitude\": 282, \"lnb\": \"Universal\" } ] }","title":"Get Response"},{"location":"api/DTVAPI/#numberofservices-property","text":"Provides access to the total number of services in the service database. This property is read-only .","title":"numberOfServices property"},{"location":"api/DTVAPI/#value_5","text":"","title":"Value"},{"location":"api/DTVAPI/#result_11","text":"Name Type Description result integer Total number of services in the service database","title":"Result"},{"location":"api/DTVAPI/#example_11","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.numberOfServices\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 145 }","title":"Get Response"},{"location":"api/DTVAPI/#servicelist-property","text":"Provides access to the list of services for the given type of tuner, transport (version 2), or all services if neither is given. This property is read-only .","title":"serviceList property"},{"location":"api/DTVAPI/#value_6","text":"The optional tuner type, or transport dvb doublet argument shall be passed as the index to the property, e.g. DTV.1.serviceList@<optional tuner type, or transport dvb doublet> .","title":"Value"},{"location":"api/DTVAPI/#result_12","text":"Name Type Description result array List of services for the given type of tuner, transport (version 2), or all services if neither is given result[#] object Service information result[#].fullname string (Version 2) Full service name as given by the service descriptor in the SDT result[#].shortname string Short service name as given by the service descriptor in the SDT result[#].dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal result[#].servicetype string (Version 2) Service type as given by the service descriptor in the SDT result[#].lcn integer Logical channel number result[#].scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT result[#].hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT result[#].hidden boolean (Version 2) True if the service should be hidden result[#].selectable boolean (Version 2) True if the service should be user selectable result[#].runningstatus string (Version 2) The running status as given by the service descriptor in the SDT","title":"Result"},{"location":"api/DTVAPI/#example_12","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.serviceList@dvbs or 9018.4161\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } ] }","title":"Get Response"},{"location":"api/DTVAPI/#serviceinfo-property","text":"Provides access to the information for the given service as defined by its DVB triplet URI. This property is read-only .","title":"serviceInfo property"},{"location":"api/DTVAPI/#value_7","text":"The service uri string argument shall be passed as the index to the property, e.g. DTV.1.serviceInfo@<service uri string> .","title":"Value"},{"location":"api/DTVAPI/#result_13","text":"Name Type Description result object Service information result.fullname string (Version 2) Full service name as given by the service descriptor in the SDT result.shortname string Short service name as given by the service descriptor in the SDT result.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal result.servicetype string (Version 2) Service type as given by the service descriptor in the SDT result.lcn integer Logical channel number result.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT result.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT result.hidden boolean (Version 2) True if the service should be hidden result.selectable boolean (Version 2) True if the service should be user selectable result.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT","title":"Result"},{"location":"api/DTVAPI/#example_13","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.serviceInfo@9018.4161.1001\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } }","title":"Get Response"},{"location":"api/DTVAPI/#servicecomponents-property","text":"Provides access to the (Version 2) array of components for the given service defined by its URI. This property is read-only .","title":"serviceComponents property"},{"location":"api/DTVAPI/#value_8","text":"The service uri string argument shall be passed as the index to the property, e.g. DTV.1.serviceComponents@<service uri string> .","title":"Value"},{"location":"api/DTVAPI/#result_14","text":"Name Type Description result array (Version 2) array of components for the given service defined by its URI result[#] object Video, audio, subtitle, teletext or data component info result[#].type string Type of data contained in this component result[#]?.tags array (optional) Array of component tags result[#]?.tags[#] integer (optional) ... result[#].pid integer PID of the component result[#]?.video object (optional) Video related information for a video component result[#]?.video.codec string Video or audio codec type result[#]?.audio object (optional) Audio related information for an audio component result[#]?.audio?.codec string (optional) Video or audio codec type result[#]?.audio.language string ISO 3-char language code result[#]?.audio.type string Type of the audio contained in the component result[#]?.audio.mode string Audio mode result[#]?.subtitles object (optional) DVB subtitle related information for a subtitle component result[#]?.subtitles.language string ISO 3-char language code result[#]?.subtitles.format string Intended TV format for the subtitles result[#]?.subtitles.compositionpage integer Composition page to be used for subtitles in this component result[#]?.subtitles.ancillarypage integer Ancillary page to be used for subtitles in this component result[#]?.teletext object (optional) Teletext related information for a teletext component result[#]?.teletext.language string ISO 3-char language code result[#]?.teletext.type integer Type of teletext data result[#]?.teletext.magazine integer Magazine number for this type and language result[#]?.teletext.page integer Page number for this type and language","title":"Result"},{"location":"api/DTVAPI/#example_14","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.serviceComponents@9018.4161.1001\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"video\", \"tags\": [ 0 ], \"pid\": 1100, \"video\": { \"codec\": \"mpeg2\" }, \"audio\": { \"codec\": \"mpeg2\", \"language\": \"eng\", \"type\": \"normal\", \"mode\": \"mono\" }, \"subtitles\": { \"language\": \"eng\", \"format\": \"default\", \"compositionpage\": 0, \"ancillarypage\": 0 }, \"teletext\": { \"language\": \"eng\", \"type\": 0, \"magazine\": 0, \"page\": 0 } } ] }","title":"Get Response"},{"location":"api/DTVAPI/#transportinfo-property","text":"Provides access to the information for the given transport as defined by its DVB doublet URI. This property is read-only .","title":"transportInfo property"},{"location":"api/DTVAPI/#value_9","text":"The transport uri string argument shall be passed as the index to the property, e.g. DTV.1.transportInfo@<transport uri string> .","title":"Value"},{"location":"api/DTVAPI/#result_15","text":"Name Type Description result object (Version 2) Details for a transport result.tunertype string Tuner type result.originalnetworkid integer Original network ID of the transport result.transportid integer Transport ID of the transport result.strength integer Signal strength as a percentage result.quality integer Signal quality as a percentage result?.dvbctuningparams object (optional) Parameters required to tune to a DVB-C signal result?.dvbctuningparams.frequency integer Frequency of the transport, in Hz result?.dvbctuningparams.symbolrate integer Symbol rate in Ksymb/sec result?.dvbctuningparams.modulation string DVB C Modulation supported by the platform result?.dvbstuningparams object (optional) Parameters required to tune to a DVB-S/S2 signal result?.dvbstuningparams.satellite string Name of the satellite settings to be used result?.dvbstuningparams.frequency integer Frequency of the transponder, in kHz result?.dvbstuningparams.polarity string Polarity setting result?.dvbstuningparams.symbolrate integer Symbol rate in Ksymb/sec result?.dvbstuningparams.fec string Forward error correction setting result?.dvbstuningparams.modulation string DVB S Modulation supported by the platform result?.dvbstuningparams.dvbs2 boolean True when tuning to a DVB-S2 signal result?.dvbttuningparams object (optional) Parameters required to tune to a DVB-T/T2 signal result?.dvbttuningparams.frequency integer Frequency of the transport, in Hz result?.dvbttuningparams.bandwidth string Channel bandwidth result?.dvbttuningparams.mode string OFDM mode result?.dvbttuningparams.dvbt2 boolean True when tuning to a DVB-T2 signal result?.dvbttuningparams?.plpid integer (optional) PLP ID for tuning to a DVB-T2 signal","title":"Result"},{"location":"api/DTVAPI/#example_15","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.transportInfo@9018.4161\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"tunertype\": \"dvbt\", \"originalnetworkid\": 8204, \"transportid\": 8204, \"strength\": 76, \"quality\": 95, \"dvbctuningparams\": { \"frequency\": 474000000, \"symbolrate\": 6900, \"modulation\": \"128qam\" }, \"dvbstuningparams\": { \"satellite\": \"Astra 28.2\", \"frequency\": 10714000, \"polarity\": \"horizontal\", \"symbolrate\": 22000, \"fec\": \"fec5_6\", \"modulation\": \"qpsk\", \"dvbs2\": false }, \"dvbttuningparams\": { \"frequency\": 474000000, \"bandwidth\": \"8MHz\", \"mode\": \"ofdm_32K\", \"dvbt2\": false, \"plpid\": 0 } } }","title":"Get Response"},{"location":"api/DTVAPI/#nownextevents-property","text":"Provides access to the now and next events (EITp/f) for the given service. This property is read-only .","title":"nowNextEvents property"},{"location":"api/DTVAPI/#value_10","text":"The service uri string argument shall be passed as the index to the property, e.g. DTV.1.nowNextEvents@<service uri string> .","title":"Value"},{"location":"api/DTVAPI/#result_16","text":"Name Type Description result object Now and next events (EITp/f) for the given service result?.now object (optional) EIT event information result?.now.name string Name of the DVB event as defined in the short event descriptor result?.now.starttime integer UTC start time of the event in seconds result?.now.duration integer Duration of the event in seconds result?.now.eventid integer ID of the event from the event information table result?.now.shortdescription string Event description from the EIT short event descriptor result?.now.hassubtitles boolean (Version 2) True if subtitles are available result?.now.hasaudiodescription boolean (Version 2) True if audio description is available result?.now.parentalrating integer (Version 2) Parental rating for the event, will be 0 if undefined result?.now.contentdata array (Version 2) The first 2 4-bit values from the content descriptor as separate bytes result?.now.contentdata[#] integer ... result?.now.hasextendedinfo boolean (Version 2) True if there's extended event information available result?.next object (optional) EIT event information result?.next.name string Name of the DVB event as defined in the short event descriptor result?.next.starttime integer UTC start time of the event in seconds result?.next.duration integer Duration of the event in seconds result?.next.eventid integer ID of the event from the event information table result?.next.shortdescription string Event description from the EIT short event descriptor result?.next.hassubtitles boolean (Version 2) True if subtitles are available result?.next.hasaudiodescription boolean (Version 2) True if audio description is available result?.next.parentalrating integer (Version 2) Parental rating for the event, will be 0 if undefined result?.next.contentdata array (Version 2) The first 2 4-bit values from the content descriptor as separate bytes result?.next.contentdata[#] integer ... result?.next.hasextendedinfo boolean (Version 2) True if there's extended event information available","title":"Result"},{"location":"api/DTVAPI/#example_16","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.nowNextEvents@9018.4161.1001\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"now\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\", \"hassubtitles\": false, \"hasaudiodescription\": false, \"parentalrating\": 12, \"contentdata\": [ 0 ], \"hasextendedinfo\": false }, \"next\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\", \"hassubtitles\": false, \"hasaudiodescription\": false, \"parentalrating\": 12, \"contentdata\": [ 0 ], \"hasextendedinfo\": false } } }","title":"Get Response"},{"location":"api/DTVAPI/#scheduleevents-property","text":"Provides access to the events which are scheduled (EITsched) for the given service. This property is read-only .","title":"scheduleEvents property"},{"location":"api/DTVAPI/#value_11","text":"The service uri string, with optional start and end times as number of seconds utc argument shall be passed as the index to the property, e.g. DTV.1.scheduleEvents@<service uri string, with optional start and end times as number of seconds utc> .","title":"Value"},{"location":"api/DTVAPI/#result_17","text":"Name Type Description result array Events which are scheduled (EITsched) for the given service result[#] object EIT event information result[#].name string Name of the DVB event as defined in the short event descriptor result[#].starttime integer UTC start time of the event in seconds result[#].duration integer Duration of the event in seconds result[#].eventid integer ID of the event from the event information table result[#].shortdescription string Event description from the EIT short event descriptor result[#].hassubtitles boolean (Version 2) True if subtitles are available result[#].hasaudiodescription boolean (Version 2) True if audio description is available result[#].parentalrating integer (Version 2) Parental rating for the event, will be 0 if undefined result[#].contentdata array (Version 2) The first 2 4-bit values from the content descriptor as separate bytes result[#].contentdata[#] integer ... result[#].hasextendedinfo boolean (Version 2) True if there's extended event information available","title":"Result"},{"location":"api/DTVAPI/#example_17","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.scheduleEvents@9018.4161.1001:12345000,12346000\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\", \"hassubtitles\": false, \"hasaudiodescription\": false, \"parentalrating\": 12, \"contentdata\": [ 0 ], \"hasextendedinfo\": false } ] }","title":"Get Response"},{"location":"api/DTVAPI/#extendedeventinfo-property","text":"Provides access to the extended event info for the given service and event ID (version 2). This property is read-only .","title":"extendedEventInfo property"},{"location":"api/DTVAPI/#value_12","text":"The service uri string and event id argument shall be passed as the index to the property, e.g. DTV.1.extendedEventInfo@<service uri string and event id> .","title":"Value"},{"location":"api/DTVAPI/#result_18","text":"Name Type Description result object (Version 2) Event information from the EIT extended event descriptor result?.description string (optional) Extended event description text result?.items array (optional) An array of extended event item result?.items[#] object (optional) ... result?.items[#]?.description string (optional) Description of the item result?.items[#]?.item string (optional) Item text","title":"Result"},{"location":"api/DTVAPI/#example_18","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.extendedEventInfo@9018.4161.1001:3012\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"description\": \"A long event description\", \"items\": [ { \"description\": \"Actor 1\", \"item\": \"Kermit The Frog\" } ] } }","title":"Get Response"},{"location":"api/DTVAPI/#status-property","text":"Provides access to the information related to the play handle defined by the index. This property is read-only .","title":"status property"},{"location":"api/DTVAPI/#value_13","text":"The play handle argument shall be passed as the index to the property, e.g. DTV.1.status@<play handle> .","title":"Value"},{"location":"api/DTVAPI/#result_19","text":"Name Type Description result object Information related to the play handle defined by the index result.tuner integer The tuner id used by the play handle result.demux integer The demux id used by the play handle result.pmtpid integer The PMT PID of the service being played result.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal result.lcn integer LCN of the service being played","title":"Result"},{"location":"api/DTVAPI/#example_19","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.status@0\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"tuner\": 0, \"demux\": 0, \"pmtpid\": 1100, \"dvburi\": \"2.2041.9212\", \"lcn\": 1001 } }","title":"Get Response"},{"location":"api/DTVAPI/#signalinfo-property","text":"Provides access to the strength and quality of the currently tuned signal for the given play handle (version 2). This property is read-only .","title":"signalInfo property"},{"location":"api/DTVAPI/#value_14","text":"The play handle argument shall be passed as the index to the property, e.g. DTV.1.signalInfo@<play handle> .","title":"Value"},{"location":"api/DTVAPI/#result_20","text":"Name Type Description result object Strength and quality of the currently tuned signal for the given play handle (version 2) result.locked boolean Tuned locked status result.strength integer The signal strength as a percentage result.quality integer The signal quality as a percentage","title":"Result"},{"location":"api/DTVAPI/#example_20","text":"","title":"Example"},{"location":"api/DTVAPI/#get-request_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.signalInfo@0\" }","title":"Get Request"},{"location":"api/DTVAPI/#get-response_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"locked\": false, \"strength\": 76, \"quality\": 95 } }","title":"Get Response"},{"location":"api/DTVAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DTV plugin: DTV interface events: Notification Description searchstatus Triggered during the course of a service search serviceupdated (Version 2) Notification sent when details of a service have changed, such as its name, service type, running or scrambled state serviceadded (Version 2) Notification sent when a new service has been dynamically added to the service list servicedeleted (Version 2) Notification sent when a service has been deleted from the service list videochanged (Version 2) Notification sent when the video PID or codec has changed audiochanged (Version 2) Notification sent when the audio PID or codec has changed subtitleschanged (Version 2) Notification sent when the subtitles have changed eventchanged (Version 2) Notification sent when the EIT 'now' event is received when starting to play a service and when the 'now' event changes","title":"Notifications"},{"location":"api/DTVAPI/#searchstatus-notification","text":"Triggered during the course of a service search.","title":"searchstatus notification"},{"location":"api/DTVAPI/#parameters_6","text":"Name Type Description params object ... params.handle integer The handle assigned for the search and to which this information is relevant params.eventtype string Event type that's sent as an asynchronous notification params.finished boolean Set to true if the service search has finished, false otherwise params.progress integer Progress of the search expressed as a percentage params?.transport object (optional) (Version 2) Details for a transport params?.transport.tunertype string Tuner type params?.transport.originalnetworkid integer Original network ID of the transport params?.transport.transportid integer Transport ID of the transport params?.transport.strength integer Signal strength as a percentage params?.transport.quality integer Signal quality as a percentage params?.transport?.dvbctuningparams object (optional) Parameters required to tune to a DVB-C signal params?.transport?.dvbctuningparams.frequency integer Frequency of the transport, in Hz params?.transport?.dvbctuningparams.symbolrate integer Symbol rate in Ksymb/sec params?.transport?.dvbctuningparams.modulation string DVB C Modulation supported by the platform params?.transport?.dvbstuningparams object (optional) Parameters required to tune to a DVB-S/S2 signal params?.transport?.dvbstuningparams.satellite string Name of the satellite settings to be used params?.transport?.dvbstuningparams.frequency integer Frequency of the transponder, in kHz params?.transport?.dvbstuningparams.polarity string Polarity setting params?.transport?.dvbstuningparams.symbolrate integer Symbol rate in Ksymb/sec params?.transport?.dvbstuningparams.fec string Forward error correction setting params?.transport?.dvbstuningparams.modulation string DVB S Modulation supported by the platform params?.transport?.dvbstuningparams.dvbs2 boolean True when tuning to a DVB-S2 signal params?.transport?.dvbttuningparams object (optional) Parameters required to tune to a DVB-T/T2 signal params?.transport?.dvbttuningparams.frequency integer Frequency of the transport, in Hz params?.transport?.dvbttuningparams.bandwidth string Channel bandwidth params?.transport?.dvbttuningparams.mode string OFDM mode params?.transport?.dvbttuningparams.dvbt2 boolean True when tuning to a DVB-T2 signal params?.transport?.dvbttuningparams?.plpid integer (optional) PLP ID for tuning to a DVB-T2 signal","title":"Parameters"},{"location":"api/DTVAPI/#example_21","text":"","title":"Example"},{"location":"api/DTVAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"searchstatus\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DTVAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.searchstatus\", \"params\": { \"handle\": 0, \"eventtype\": \"ServiceSearchStatus\", \"finished\": false, \"progress\": 65, \"transport\": { \"tunertype\": \"dvbt\", \"originalnetworkid\": 8204, \"transportid\": 8204, \"strength\": 76, \"quality\": 95, \"dvbctuningparams\": { \"frequency\": 474000000, \"symbolrate\": 6900, \"modulation\": \"128qam\" }, \"dvbstuningparams\": { \"satellite\": \"Astra 28.2\", \"frequency\": 10714000, \"polarity\": \"horizontal\", \"symbolrate\": 22000, \"fec\": \"fec5_6\", \"modulation\": \"qpsk\", \"dvbs2\": false }, \"dvbttuningparams\": { \"frequency\": 474000000, \"bandwidth\": \"8MHz\", \"mode\": \"ofdm_32K\", \"dvbt2\": false, \"plpid\": 0 } } } }","title":"Message"},{"location":"api/DTVAPI/#serviceupdated-notification","text":"(Version 2) Notification sent when details of a service have changed, such as its name, service type, running or scrambled state.","title":"serviceupdated notification"},{"location":"api/DTVAPI/#parameters_7","text":"Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT","title":"Parameters"},{"location":"api/DTVAPI/#example_22","text":"","title":"Example"},{"location":"api/DTVAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"serviceupdated\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DTVAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.serviceupdated\", \"params\": { \"eventtype\": \"ServiceUpdated\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } }","title":"Message"},{"location":"api/DTVAPI/#serviceadded-notification","text":"(Version 2) Notification sent when a new service has been dynamically added to the service list.","title":"serviceadded notification"},{"location":"api/DTVAPI/#parameters_8","text":"Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT","title":"Parameters"},{"location":"api/DTVAPI/#example_23","text":"","title":"Example"},{"location":"api/DTVAPI/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"serviceadded\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DTVAPI/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.serviceadded\", \"params\": { \"eventtype\": \"ServiceAdded\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } }","title":"Message"},{"location":"api/DTVAPI/#servicedeleted-notification","text":"(Version 2) Notification sent when a service has been deleted from the service list.","title":"servicedeleted notification"},{"location":"api/DTVAPI/#parameters_9","text":"Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT","title":"Parameters"},{"location":"api/DTVAPI/#example_24","text":"","title":"Example"},{"location":"api/DTVAPI/#registration_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"servicedeleted\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DTVAPI/#message_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.servicedeleted\", \"params\": { \"eventtype\": \"ServiceDeleted\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } }","title":"Message"},{"location":"api/DTVAPI/#videochanged-notification","text":"(Version 2) Notification sent when the video PID or codec has changed.","title":"videochanged notification"},{"location":"api/DTVAPI/#parameters_10","text":"Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT","title":"Parameters"},{"location":"api/DTVAPI/#example_25","text":"","title":"Example"},{"location":"api/DTVAPI/#registration_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"videochanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DTVAPI/#message_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.videochanged\", \"params\": { \"eventtype\": \"VideoChanged\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } }","title":"Message"},{"location":"api/DTVAPI/#audiochanged-notification","text":"(Version 2) Notification sent when the audio PID or codec has changed.","title":"audiochanged notification"},{"location":"api/DTVAPI/#parameters_11","text":"Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT","title":"Parameters"},{"location":"api/DTVAPI/#example_26","text":"","title":"Example"},{"location":"api/DTVAPI/#registration_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"audiochanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DTVAPI/#message_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.audiochanged\", \"params\": { \"eventtype\": \"AudioChanged\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } }","title":"Message"},{"location":"api/DTVAPI/#subtitleschanged-notification","text":"(Version 2) Notification sent when the subtitles have changed.","title":"subtitleschanged notification"},{"location":"api/DTVAPI/#parameters_12","text":"Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT","title":"Parameters"},{"location":"api/DTVAPI/#example_27","text":"","title":"Example"},{"location":"api/DTVAPI/#registration_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"subtitleschanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DTVAPI/#message_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.subtitleschanged\", \"params\": { \"eventtype\": \"SubtitlesChanged\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" } } }","title":"Message"},{"location":"api/DTVAPI/#eventchanged-notification","text":"(Version 2) Notification sent when the EIT 'now' event is received when starting to play a service and when the 'now' event changes.","title":"eventchanged notification"},{"location":"api/DTVAPI/#parameters_13","text":"Name Type Description params object ... params.eventtype string Event type that's sent as an asynchronous notification params.service object Service information params.service.fullname string (Version 2) Full service name as given by the service descriptor in the SDT params.service.shortname string Short service name as given by the service descriptor in the SDT params.service.dvburi string DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal params.service.servicetype string (Version 2) Service type as given by the service descriptor in the SDT params.service.lcn integer Logical channel number params.service.scrambled boolean (Version 2) True if the service is marked as scrambled in the SDT params.service.hascadescriptor boolean (Version 2) True if there is at least one CA descriptor in the service's PMT params.service.hidden boolean (Version 2) True if the service should be hidden params.service.selectable boolean (Version 2) True if the service should be user selectable params.service.runningstatus string (Version 2) The running status as given by the service descriptor in the SDT params.event object EIT event information params.event.name string Name of the DVB event as defined in the short event descriptor params.event.starttime integer UTC start time of the event in seconds params.event.duration integer Duration of the event in seconds params.event.eventid integer ID of the event from the event information table params.event.shortdescription string Event description from the EIT short event descriptor params.event.hassubtitles boolean (Version 2) True if subtitles are available params.event.hasaudiodescription boolean (Version 2) True if audio description is available params.event.parentalrating integer (Version 2) Parental rating for the event, will be 0 if undefined params.event.contentdata array (Version 2) The first 2 4-bit values from the content descriptor as separate bytes params.event.contentdata[#] integer ... params.event.hasextendedinfo boolean (Version 2) True if there's extended event information available","title":"Parameters"},{"location":"api/DTVAPI/#example_28","text":"","title":"Example"},{"location":"api/DTVAPI/#registration_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DTV.1.register\", \"params\": { \"event\": \"eventchanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DTVAPI/#message_7","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.eventchanged\", \"params\": { \"eventtype\": \"EventChanged\", \"service\": { \"fullname\": \"Channel 4\", \"shortname\": \"C4\", \"dvburi\": \"2.2041.9212\", \"servicetype\": \"tv\", \"lcn\": 1001, \"scrambled\": false, \"hascadescriptor\": false, \"hidden\": false, \"selectable\": false, \"runningstatus\": \"running\" }, \"event\": { \"name\": \"Channel 4 News\", \"starttime\": 1587562065, \"duration\": 1800, \"eventid\": 3012, \"shortdescription\": \"The current national and world news\", \"hassubtitles\": false, \"hasaudiodescription\": false, \"parentalrating\": 12, \"contentdata\": [ 0 ], \"hasextendedinfo\": false } } }","title":"Message"},{"location":"api/DeviceIdentificationAPI/","text":"Device Identification API Version: 1.0.0 Status: DeviceIdentification interface for Thunder framework. (Defined by DeviceIdentification.json ) Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the DeviceIdentification interface (version 1.0.0). It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DeviceIdentification JSON-RPC interface. Properties The following properties are provided by the DeviceIdentification interface: DeviceIdentification interface properties: Property Description deviceidentification (read-only) Device paltform specific information deviceidentification property Provides access to the device paltform specific information. This property is read-only . Value Result Name Type Description result object Device paltform specific information result.firmwareversion string Version of the device firmware result.chipset string Chipset used for this device result.deviceid string Device ID Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceIdentification.1.deviceidentification\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"firmwareversion\": \"1.0.0\", \"chipset\": \"BCM2711\", \"deviceid\": \"WPEuCfrLF45\" } }","title":"Device Identification API"},{"location":"api/DeviceIdentificationAPI/#device-identification-api","text":"Version: 1.0.0 Status: DeviceIdentification interface for Thunder framework. (Defined by DeviceIdentification.json )","title":"Device Identification API"},{"location":"api/DeviceIdentificationAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"api/DeviceIdentificationAPI/#introduction","text":"","title":"Introduction"},{"location":"api/DeviceIdentificationAPI/#scope","text":"This document describes purpose and functionality of the DeviceIdentification interface (version 1.0.0). It includes detailed specification about its properties provided.","title":"Scope"},{"location":"api/DeviceIdentificationAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/DeviceIdentificationAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/DeviceIdentificationAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/DeviceIdentificationAPI/#description","text":"DeviceIdentification JSON-RPC interface.","title":"Description"},{"location":"api/DeviceIdentificationAPI/#properties","text":"The following properties are provided by the DeviceIdentification interface: DeviceIdentification interface properties: Property Description deviceidentification (read-only) Device paltform specific information","title":"Properties"},{"location":"api/DeviceIdentificationAPI/#deviceidentification-property","text":"Provides access to the device paltform specific information. This property is read-only .","title":"deviceidentification property"},{"location":"api/DeviceIdentificationAPI/#value","text":"","title":"Value"},{"location":"api/DeviceIdentificationAPI/#result","text":"Name Type Description result object Device paltform specific information result.firmwareversion string Version of the device firmware result.chipset string Chipset used for this device result.deviceid string Device ID","title":"Result"},{"location":"api/DeviceIdentificationAPI/#example","text":"","title":"Example"},{"location":"api/DeviceIdentificationAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceIdentification.1.deviceidentification\" }","title":"Get Request"},{"location":"api/DeviceIdentificationAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"firmwareversion\": \"1.0.0\", \"chipset\": \"BCM2711\", \"deviceid\": \"WPEuCfrLF45\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/","text":"Device Info API Version: 1.0.0 Status: DeviceInfo interface for Thunder framework. (Defined by DeviceInfo.json ) Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the DeviceInfo interface (version 1.0.0). It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DeviceInfo JSON-RPC interface. Methods The following methods are provided by the DeviceInfo interface: DeviceInfo interface methods: Method Description supportedresolutions Supported resolutions on the selected video display port defaultresolution Default resolution on the selected video display port supportedhdcp Supported hdcp version on the selected video display port audiocapabilities Audio capabilities for the specified audio port ms12capabilities Audio ms12 capabilities for the specified audio port supportedms12audioprofiles Supported ms12 audio profiles for the specified audio port supportedresolutions method Supported resolutions on the selected video display port. Parameters Name Type Description params object ... params.videoDisplay string Video output supported by the device Result Name Type Description result object ... result.supportedResolutions array An array of resolution supported by the device result.supportedResolutions[#] string Resolution supported by the device Errors Message Description ERROR_GENERAL general error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedresolutions\", \"params\": { \"videoDisplay\": \"displayport\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedResolutions\": [ \"1080p\" ] } } defaultresolution method Default resolution on the selected video display port. Parameters Name Type Description params object ... params.videoDisplay string Video output supported by the device Result Name Type Description result object ... result.defaultResolution string Resolution supported by the device Errors Message Description ERROR_GENERAL general error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.defaultresolution\", \"params\": { \"videoDisplay\": \"displayport\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"defaultResolution\": \"1080p\" } } supportedhdcp method Supported hdcp version on the selected video display port. Parameters Name Type Description params object ... params.videoDisplay string Video output supported by the device Result Name Type Description result object ... result.supportedHDCPVersion string HDCP support Errors Message Description ERROR_GENERAL general error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedhdcp\", \"params\": { \"videoDisplay\": \"displayport\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedHDCPVersion\": \"hdcp_20\" } } audiocapabilities method Audio capabilities for the specified audio port. Parameters Name Type Description params object ... params.audioPort string Audio output supported by the device Result Name Type Description result object ... result.AudioCapabilities array An array of audio capabilities result.AudioCapabilities[#] string Audio capability Errors Message Description ERROR_GENERAL general error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.audiocapabilities\", \"params\": { \"audioPort\": \"analog\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"AudioCapabilities\": [ \"none\" ] } } ms12capabilities method Audio ms12 capabilities for the specified audio port. Parameters Name Type Description params object ... params.audioPort string Audio output supported by the device Result Name Type Description result object ... result.MS12Capabilities array An array of MS12 audio capabilities result.MS12Capabilities[#] string MS12 audio capability Errors Message Description ERROR_GENERAL general error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.ms12capabilities\", \"params\": { \"audioPort\": \"analog\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"MS12Capabilities\": [ \"dolby_volume\" ] } } supportedms12audioprofiles method Supported ms12 audio profiles for the specified audio port. Parameters Name Type Description params object ... params.audioPort string Audio output supported by the device Result Name Type Description result object ... result.supportedMS12AudioProfiles array An array of ms12 audio profiles result.supportedMS12AudioProfiles[#] string MS12 Profile Errors Message Description ERROR_GENERAL General error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedms12audioprofiles\", \"params\": { \"audioPort\": \"analog\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedMS12AudioProfiles\": [ \"music\" ] } } Properties The following properties are provided by the DeviceInfo interface: DeviceInfo interface properties: Property Description deviceaudiocapabilities (read-only) Audio capabilities of the device devicevideocapabilities (read-only) Video capabilities of the device deviceinfo (read-only) Device meta data systeminfo (read-only) System general information addresses (read-only) Network interface addresses socketinfo (read-only) Socket information supportedaudioports (read-only) Audio ports supported on the device (all ports that are physically present) supportedvideodisplays (read-only) Video ports supported on the device (all ports that are physically present) hostedid (read-only) EDID of the host firmwareversion (read-only) Versions maintained in version serialnumber (read-only) Serial number set by manufacturer make (read-only) Device manufacturer modelid (read-only) Device model number or SKU modelname (read-only) Device model name modelyear (read-only) Device model year friendlyname (read-only) Device friendly name platformname (read-only) Device Platform name devicetype (read-only) Device type distributorid (read-only) Partner ID or distributor ID for device deviceaudiocapabilities property Provides access to the audio capabilities of the device. This property is read-only . Value Result Name Type Description result object Audio capabilities of the device result.audiooutputcapabilities array An array of audiooutputcapabilities result.audiooutputcapabilities[#] object Audio capabilities of the output result.audiooutputcapabilities[#]?.audioPort string (optional) Audio Output support result.audiooutputcapabilities[#].audiocapabilities array Audio capabilities for the specified audio port result.audiooutputcapabilities[#].audiocapabilities[#] string Audio capability result.audiooutputcapabilities[#].ms12capabilities array Audio ms12 capabilities for the specified audio port result.audiooutputcapabilities[#].ms12capabilities[#] string MS12 audio capability result.audiooutputcapabilities[#].ms12profiles array Audio ms12 profiles for the specified audio port result.audiooutputcapabilities[#].ms12profiles[#] string MS12 Profile Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.deviceaudiocapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"audiooutputcapabilities\": [ { \"audioPort\": \"analog\", \"audiocapabilities\": [ \"none\" ], \"ms12capabilities\": [ \"dolby_volume\" ], \"ms12profiles\": [ \"music\" ] } ] } } devicevideocapabilities property Provides access to the video capabilities of the device. This property is read-only . Value Result Name Type Description result object Video capabilities of the device result.hostedid string EDID of the host result.hdr boolean Is HDR supported by this device result.atmos boolean Is Atmos supported by this device result.cec boolean Is CEC supported by this device result.videooutputcapabilities array An array of videooutputcapabilities result.videooutputcapabilities[#] object Video capabilities of the output result.videooutputcapabilities[#].hdcp string HDCP support result.videooutputcapabilities[#]?.videoDisplay string (optional) Video Output support result.videooutputcapabilities[#].output_resolutions array Supported resolutions result.videooutputcapabilities[#].output_resolutions[#] string Resolution supported by the device result.videooutputcapabilities[#].defaultresolution string Default resolution Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.devicevideocapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hostedid\": \"...\", \"hdr\": false, \"atmos\": false, \"cec\": true, \"videooutputcapabilities\": [ { \"hdcp\": \"hdcp_20\", \"videoDisplay\": \"displayport\", \"output_resolutions\": [ \"1080p\" ], \"defaultresolution\": \"1080p\" } ] } } deviceinfo property Provides access to the device meta data. This property is read-only . Value Result Name Type Description result object Device meta data result?.devicetype string (optional) Device type result?.friendlyname string (optional) Friendly name result?.distributorid string (optional) Partner ID or distributor ID for device result?.make string (optional) Device manufacturer result?.modelname string (optional) Model Name result?.modelyear integer (optional) Model Year result?.platformname string (optional) Platform name result?.serialnumber string (optional) Device serial number result?.sku string (optional) Device model number or SKU Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.deviceinfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"devicetype\": \"IpStb\", \"friendlyname\": \"my device\", \"distributorid\": \"Comcast\", \"make\": \"pace\", \"modelname\": \"model A\", \"modelyear\": 2020, \"platformname\": \"linux\", \"serialnumber\": \"WPEuCfrLF45\", \"sku\": \"PX051AEI\" } } systeminfo property Provides access to the system general information. This property is read-only . Value Result Name Type Description result object System general information result.version string Software version (in form version#hashtag ) result.uptime integer System uptime (in seconds) result.totalram integer Total installed system RAM memory (in bytes) result.freeram integer Free system RAM memory (in bytes) result.totalswap integer Total swap space (in bytes) result.freeswap integer Swap space still available (in bytes) result.devicename string Host name result.cpuload string Current CPU load (percentage) result.cpuloadavg object CPU load average result.cpuloadavg.avg1min integer 1min cpuload average result.cpuloadavg.avg5min integer 5min cpuload average result.cpuloadavg.avg15min integer 15min cpuload average result.serialnumber string Device serial number result.time string Current system date and time Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.systeminfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"version\": \"1.0#14452f612c3747645d54974255d11b8f3b4faa54\", \"uptime\": 120, \"totalram\": 655757312, \"freeram\": 563015680, \"totalswap\": 789132680, \"freeswap\": 789132680, \"devicename\": \"buildroot\", \"cpuload\": \"2\", \"cpuloadavg\": { \"avg1min\": 789132680, \"avg5min\": 789132680, \"avg15min\": 789132680 }, \"serialnumber\": \"WPEuCfrLF45\", \"time\": \"Mon, 11 Mar 2019 14:38:18\" } } addresses property Provides access to the network interface addresses. This property is read-only . Value Result Name Type Description result array Network interface addresses result[#] object ... result[#].name string Interface name result[#].mac string Interface MAC address result[#]?.ip array (optional) An array of Interface IP address result[#]?.ip[#] string (optional) Interface IP address Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.addresses\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"lo\", \"mac\": \"00:00:00:00:00\", \"ip\": [ \"127.0.0.1\" ] } ] } socketinfo property Provides access to the socket information. This property is read-only . Value Result Name Type Description result object Socket information result?.total integer (optional) Number of total result?.open integer (optional) Number of open result?.link integer (optional) Number of link result?.exception integer (optional) Number of exception result?.shutdown integer (optional) Number of shutdown result.runs integer Number of runs Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.socketinfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 0, \"open\": 0, \"link\": 0, \"exception\": 0, \"shutdown\": 0, \"runs\": 1 } } supportedaudioports property Provides access to the audio ports supported on the device (all ports that are physically present). This property is read-only . Value Result Name Type Description result object Audio ports supported on the device (all ports that are physically present) result.supportedAudioPorts array Audio Output support result.supportedAudioPorts[#] string Audio output supported by the device Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedaudioports\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedAudioPorts\": [ \"analog\" ] } } supportedvideodisplays property Provides access to the video ports supported on the device (all ports that are physically present). This property is read-only . Value Result Name Type Description result object Video ports supported on the device (all ports that are physically present) result.supportedVideoDisplays array Video Output support result.supportedVideoDisplays[#] string Video output supported by the device Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedvideodisplays\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedVideoDisplays\": [ \"displayport\" ] } } hostedid property Provides access to the EDID of the host. This property is read-only . Value Result Name Type Description result object EDID of the host result.EDID string A base64 encoded byte array string representing the EDID Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.hostedid\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"EDID\": \"AP///////wAQrMLQVEJTMQUdAQOANR546q11qVRNnSYPUFSlSwCBALMA0QBxT6lAgYDRwAEBVl4AoKCgKVAwIDUADighAAAaAAAA/wBNWTNORDkxVjFTQlQKAAAA/ABERUxMIFAyNDE4RAogAAAA/QAxVh1xHAAKICAgICAgARsCAxuxUJAFBAMCBxYBBhESFRMUHyBlAwwAEAACOoAYcTgtQFgsRQAOKCEAAB4BHYAYcRwWIFgsJQAOKCEAAJ6/FgCggDgTQDAgOgAOKCEAABp+OQCggDgfQDAgOgAOKCEAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2A\" } } firmwareversion property Provides access to the versions maintained in version.txt. This property is read-only . Value Result Name Type Description result object Versions maintained in version.txt result.imagename string Name of firmware image result?.sdk string (optional) SDK version string result?.mediarite string (optional) Mediarite value result?.yocto string (optional) Yocto version Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.firmwareversion\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"imagename\": \"PX051AEI_VBN_2203_sprint_20220331225312sdy_NG\", \"sdk\": \"17.3\", \"mediarite\": \"8.3.53\", \"yocto\": \"dunfell\" } } serialnumber property Provides access to the serial number set by manufacturer. This property is read-only . Value Result Name Type Description result object Serial number set by manufacturer result.serialnumber string Device Serial Number Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.serialnumber\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"serialnumber\": \"PAW400003744\" } } make property Provides access to the device manufacturer. This property is read-only . Value Result Name Type Description result object Device manufacturer result.make string Device manufacturer Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.make\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"make\": \"pace\" } } modelid property Provides access to the device model number or SKU. This property is read-only . Value Result Name Type Description result object Device model number or SKU result.sku string Device model number or SKU Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelid\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"sku\": \"PX051AEI\" } } modelname property Provides access to the device model name. This property is read-only . Value Result Name Type Description result object Device model name result.model string Device model name Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelname\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Pace Xi5\" } } modelyear property Provides access to the device model year. This property is read-only . Value Result Name Type Description result object Device model year result.year integer Device model year Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelyear\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"year\": 2020 } } friendlyname property Provides access to the device friendly name. This property is read-only . Value Result Name Type Description result object Device friendly name result.name string Device friendly name Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.friendlyname\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"My device\" } } platformname property Provides access to the device Platform name. This property is read-only . Value Result Name Type Description result object Device Platform name result.name string Device Platform name Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.platformname\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"Linux\" } } devicetype property Provides access to the device type. This property is read-only . Value Result Name Type Description result object Device type result.devicetype string Device type Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.devicetype\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"devicetype\": \"IpStb\" } } distributorid property Provides access to the partner ID or distributor ID for device. This property is read-only . Value Result Name Type Description result object Partner ID or distributor ID for device result.distributorid string Partner ID or distributor ID for device Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.distributorid\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"distributorid\": \"comcast\" } }","title":"Device Info API"},{"location":"api/DeviceInfoAPI/#device-info-api","text":"Version: 1.0.0 Status: DeviceInfo interface for Thunder framework. (Defined by DeviceInfo.json )","title":"Device Info API"},{"location":"api/DeviceInfoAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"api/DeviceInfoAPI/#introduction","text":"","title":"Introduction"},{"location":"api/DeviceInfoAPI/#scope","text":"This document describes purpose and functionality of the DeviceInfo interface (version 1.0.0). It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"api/DeviceInfoAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/DeviceInfoAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/DeviceInfoAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/DeviceInfoAPI/#description","text":"DeviceInfo JSON-RPC interface.","title":"Description"},{"location":"api/DeviceInfoAPI/#methods","text":"The following methods are provided by the DeviceInfo interface: DeviceInfo interface methods: Method Description supportedresolutions Supported resolutions on the selected video display port defaultresolution Default resolution on the selected video display port supportedhdcp Supported hdcp version on the selected video display port audiocapabilities Audio capabilities for the specified audio port ms12capabilities Audio ms12 capabilities for the specified audio port supportedms12audioprofiles Supported ms12 audio profiles for the specified audio port","title":"Methods"},{"location":"api/DeviceInfoAPI/#supportedresolutions-method","text":"Supported resolutions on the selected video display port.","title":"supportedresolutions method"},{"location":"api/DeviceInfoAPI/#parameters","text":"Name Type Description params object ... params.videoDisplay string Video output supported by the device","title":"Parameters"},{"location":"api/DeviceInfoAPI/#result","text":"Name Type Description result object ... result.supportedResolutions array An array of resolution supported by the device result.supportedResolutions[#] string Resolution supported by the device","title":"Result"},{"location":"api/DeviceInfoAPI/#errors","text":"Message Description ERROR_GENERAL general error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedresolutions\", \"params\": { \"videoDisplay\": \"displayport\" } }","title":"Request"},{"location":"api/DeviceInfoAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedResolutions\": [ \"1080p\" ] } }","title":"Response"},{"location":"api/DeviceInfoAPI/#defaultresolution-method","text":"Default resolution on the selected video display port.","title":"defaultresolution method"},{"location":"api/DeviceInfoAPI/#parameters_1","text":"Name Type Description params object ... params.videoDisplay string Video output supported by the device","title":"Parameters"},{"location":"api/DeviceInfoAPI/#result_1","text":"Name Type Description result object ... result.defaultResolution string Resolution supported by the device","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_1","text":"Message Description ERROR_GENERAL general error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_1","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.defaultresolution\", \"params\": { \"videoDisplay\": \"displayport\" } }","title":"Request"},{"location":"api/DeviceInfoAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"defaultResolution\": \"1080p\" } }","title":"Response"},{"location":"api/DeviceInfoAPI/#supportedhdcp-method","text":"Supported hdcp version on the selected video display port.","title":"supportedhdcp method"},{"location":"api/DeviceInfoAPI/#parameters_2","text":"Name Type Description params object ... params.videoDisplay string Video output supported by the device","title":"Parameters"},{"location":"api/DeviceInfoAPI/#result_2","text":"Name Type Description result object ... result.supportedHDCPVersion string HDCP support","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_2","text":"Message Description ERROR_GENERAL general error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_2","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedhdcp\", \"params\": { \"videoDisplay\": \"displayport\" } }","title":"Request"},{"location":"api/DeviceInfoAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedHDCPVersion\": \"hdcp_20\" } }","title":"Response"},{"location":"api/DeviceInfoAPI/#audiocapabilities-method","text":"Audio capabilities for the specified audio port.","title":"audiocapabilities method"},{"location":"api/DeviceInfoAPI/#parameters_3","text":"Name Type Description params object ... params.audioPort string Audio output supported by the device","title":"Parameters"},{"location":"api/DeviceInfoAPI/#result_3","text":"Name Type Description result object ... result.AudioCapabilities array An array of audio capabilities result.AudioCapabilities[#] string Audio capability","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_3","text":"Message Description ERROR_GENERAL general error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_3","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.audiocapabilities\", \"params\": { \"audioPort\": \"analog\" } }","title":"Request"},{"location":"api/DeviceInfoAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"AudioCapabilities\": [ \"none\" ] } }","title":"Response"},{"location":"api/DeviceInfoAPI/#ms12capabilities-method","text":"Audio ms12 capabilities for the specified audio port.","title":"ms12capabilities method"},{"location":"api/DeviceInfoAPI/#parameters_4","text":"Name Type Description params object ... params.audioPort string Audio output supported by the device","title":"Parameters"},{"location":"api/DeviceInfoAPI/#result_4","text":"Name Type Description result object ... result.MS12Capabilities array An array of MS12 audio capabilities result.MS12Capabilities[#] string MS12 audio capability","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_4","text":"Message Description ERROR_GENERAL general error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_4","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.ms12capabilities\", \"params\": { \"audioPort\": \"analog\" } }","title":"Request"},{"location":"api/DeviceInfoAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"MS12Capabilities\": [ \"dolby_volume\" ] } }","title":"Response"},{"location":"api/DeviceInfoAPI/#supportedms12audioprofiles-method","text":"Supported ms12 audio profiles for the specified audio port.","title":"supportedms12audioprofiles method"},{"location":"api/DeviceInfoAPI/#parameters_5","text":"Name Type Description params object ... params.audioPort string Audio output supported by the device","title":"Parameters"},{"location":"api/DeviceInfoAPI/#result_5","text":"Name Type Description result object ... result.supportedMS12AudioProfiles array An array of ms12 audio profiles result.supportedMS12AudioProfiles[#] string MS12 Profile","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_5","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_5","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedms12audioprofiles\", \"params\": { \"audioPort\": \"analog\" } }","title":"Request"},{"location":"api/DeviceInfoAPI/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedMS12AudioProfiles\": [ \"music\" ] } }","title":"Response"},{"location":"api/DeviceInfoAPI/#properties","text":"The following properties are provided by the DeviceInfo interface: DeviceInfo interface properties: Property Description deviceaudiocapabilities (read-only) Audio capabilities of the device devicevideocapabilities (read-only) Video capabilities of the device deviceinfo (read-only) Device meta data systeminfo (read-only) System general information addresses (read-only) Network interface addresses socketinfo (read-only) Socket information supportedaudioports (read-only) Audio ports supported on the device (all ports that are physically present) supportedvideodisplays (read-only) Video ports supported on the device (all ports that are physically present) hostedid (read-only) EDID of the host firmwareversion (read-only) Versions maintained in version serialnumber (read-only) Serial number set by manufacturer make (read-only) Device manufacturer modelid (read-only) Device model number or SKU modelname (read-only) Device model name modelyear (read-only) Device model year friendlyname (read-only) Device friendly name platformname (read-only) Device Platform name devicetype (read-only) Device type distributorid (read-only) Partner ID or distributor ID for device","title":"Properties"},{"location":"api/DeviceInfoAPI/#deviceaudiocapabilities-property","text":"Provides access to the audio capabilities of the device. This property is read-only .","title":"deviceaudiocapabilities property"},{"location":"api/DeviceInfoAPI/#value","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_6","text":"Name Type Description result object Audio capabilities of the device result.audiooutputcapabilities array An array of audiooutputcapabilities result.audiooutputcapabilities[#] object Audio capabilities of the output result.audiooutputcapabilities[#]?.audioPort string (optional) Audio Output support result.audiooutputcapabilities[#].audiocapabilities array Audio capabilities for the specified audio port result.audiooutputcapabilities[#].audiocapabilities[#] string Audio capability result.audiooutputcapabilities[#].ms12capabilities array Audio ms12 capabilities for the specified audio port result.audiooutputcapabilities[#].ms12capabilities[#] string MS12 audio capability result.audiooutputcapabilities[#].ms12profiles array Audio ms12 profiles for the specified audio port result.audiooutputcapabilities[#].ms12profiles[#] string MS12 Profile","title":"Result"},{"location":"api/DeviceInfoAPI/#example_6","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.deviceaudiocapabilities\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"audiooutputcapabilities\": [ { \"audioPort\": \"analog\", \"audiocapabilities\": [ \"none\" ], \"ms12capabilities\": [ \"dolby_volume\" ], \"ms12profiles\": [ \"music\" ] } ] } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#devicevideocapabilities-property","text":"Provides access to the video capabilities of the device. This property is read-only .","title":"devicevideocapabilities property"},{"location":"api/DeviceInfoAPI/#value_1","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_7","text":"Name Type Description result object Video capabilities of the device result.hostedid string EDID of the host result.hdr boolean Is HDR supported by this device result.atmos boolean Is Atmos supported by this device result.cec boolean Is CEC supported by this device result.videooutputcapabilities array An array of videooutputcapabilities result.videooutputcapabilities[#] object Video capabilities of the output result.videooutputcapabilities[#].hdcp string HDCP support result.videooutputcapabilities[#]?.videoDisplay string (optional) Video Output support result.videooutputcapabilities[#].output_resolutions array Supported resolutions result.videooutputcapabilities[#].output_resolutions[#] string Resolution supported by the device result.videooutputcapabilities[#].defaultresolution string Default resolution","title":"Result"},{"location":"api/DeviceInfoAPI/#example_7","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.devicevideocapabilities\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hostedid\": \"...\", \"hdr\": false, \"atmos\": false, \"cec\": true, \"videooutputcapabilities\": [ { \"hdcp\": \"hdcp_20\", \"videoDisplay\": \"displayport\", \"output_resolutions\": [ \"1080p\" ], \"defaultresolution\": \"1080p\" } ] } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#deviceinfo-property","text":"Provides access to the device meta data. This property is read-only .","title":"deviceinfo property"},{"location":"api/DeviceInfoAPI/#value_2","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_8","text":"Name Type Description result object Device meta data result?.devicetype string (optional) Device type result?.friendlyname string (optional) Friendly name result?.distributorid string (optional) Partner ID or distributor ID for device result?.make string (optional) Device manufacturer result?.modelname string (optional) Model Name result?.modelyear integer (optional) Model Year result?.platformname string (optional) Platform name result?.serialnumber string (optional) Device serial number result?.sku string (optional) Device model number or SKU","title":"Result"},{"location":"api/DeviceInfoAPI/#example_8","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.deviceinfo\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"devicetype\": \"IpStb\", \"friendlyname\": \"my device\", \"distributorid\": \"Comcast\", \"make\": \"pace\", \"modelname\": \"model A\", \"modelyear\": 2020, \"platformname\": \"linux\", \"serialnumber\": \"WPEuCfrLF45\", \"sku\": \"PX051AEI\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#systeminfo-property","text":"Provides access to the system general information. This property is read-only .","title":"systeminfo property"},{"location":"api/DeviceInfoAPI/#value_3","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_9","text":"Name Type Description result object System general information result.version string Software version (in form version#hashtag ) result.uptime integer System uptime (in seconds) result.totalram integer Total installed system RAM memory (in bytes) result.freeram integer Free system RAM memory (in bytes) result.totalswap integer Total swap space (in bytes) result.freeswap integer Swap space still available (in bytes) result.devicename string Host name result.cpuload string Current CPU load (percentage) result.cpuloadavg object CPU load average result.cpuloadavg.avg1min integer 1min cpuload average result.cpuloadavg.avg5min integer 5min cpuload average result.cpuloadavg.avg15min integer 15min cpuload average result.serialnumber string Device serial number result.time string Current system date and time","title":"Result"},{"location":"api/DeviceInfoAPI/#example_9","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.systeminfo\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"version\": \"1.0#14452f612c3747645d54974255d11b8f3b4faa54\", \"uptime\": 120, \"totalram\": 655757312, \"freeram\": 563015680, \"totalswap\": 789132680, \"freeswap\": 789132680, \"devicename\": \"buildroot\", \"cpuload\": \"2\", \"cpuloadavg\": { \"avg1min\": 789132680, \"avg5min\": 789132680, \"avg15min\": 789132680 }, \"serialnumber\": \"WPEuCfrLF45\", \"time\": \"Mon, 11 Mar 2019 14:38:18\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#addresses-property","text":"Provides access to the network interface addresses. This property is read-only .","title":"addresses property"},{"location":"api/DeviceInfoAPI/#value_4","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_10","text":"Name Type Description result array Network interface addresses result[#] object ... result[#].name string Interface name result[#].mac string Interface MAC address result[#]?.ip array (optional) An array of Interface IP address result[#]?.ip[#] string (optional) Interface IP address","title":"Result"},{"location":"api/DeviceInfoAPI/#example_10","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.addresses\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"lo\", \"mac\": \"00:00:00:00:00\", \"ip\": [ \"127.0.0.1\" ] } ] }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#socketinfo-property","text":"Provides access to the socket information. This property is read-only .","title":"socketinfo property"},{"location":"api/DeviceInfoAPI/#value_5","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_11","text":"Name Type Description result object Socket information result?.total integer (optional) Number of total result?.open integer (optional) Number of open result?.link integer (optional) Number of link result?.exception integer (optional) Number of exception result?.shutdown integer (optional) Number of shutdown result.runs integer Number of runs","title":"Result"},{"location":"api/DeviceInfoAPI/#example_11","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.socketinfo\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 0, \"open\": 0, \"link\": 0, \"exception\": 0, \"shutdown\": 0, \"runs\": 1 } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#supportedaudioports-property","text":"Provides access to the audio ports supported on the device (all ports that are physically present). This property is read-only .","title":"supportedaudioports property"},{"location":"api/DeviceInfoAPI/#value_6","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_12","text":"Name Type Description result object Audio ports supported on the device (all ports that are physically present) result.supportedAudioPorts array Audio Output support result.supportedAudioPorts[#] string Audio output supported by the device","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_6","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_12","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedaudioports\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedAudioPorts\": [ \"analog\" ] } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#supportedvideodisplays-property","text":"Provides access to the video ports supported on the device (all ports that are physically present). This property is read-only .","title":"supportedvideodisplays property"},{"location":"api/DeviceInfoAPI/#value_7","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_13","text":"Name Type Description result object Video ports supported on the device (all ports that are physically present) result.supportedVideoDisplays array Video Output support result.supportedVideoDisplays[#] string Video output supported by the device","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_7","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_13","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedvideodisplays\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedVideoDisplays\": [ \"displayport\" ] } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#hostedid-property","text":"Provides access to the EDID of the host. This property is read-only .","title":"hostedid property"},{"location":"api/DeviceInfoAPI/#value_8","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_14","text":"Name Type Description result object EDID of the host result.EDID string A base64 encoded byte array string representing the EDID","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_8","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_14","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.hostedid\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"EDID\": \"AP///////wAQrMLQVEJTMQUdAQOANR546q11qVRNnSYPUFSlSwCBALMA0QBxT6lAgYDRwAEBVl4AoKCgKVAwIDUADighAAAaAAAA/wBNWTNORDkxVjFTQlQKAAAA/ABERUxMIFAyNDE4RAogAAAA/QAxVh1xHAAKICAgICAgARsCAxuxUJAFBAMCBxYBBhESFRMUHyBlAwwAEAACOoAYcTgtQFgsRQAOKCEAAB4BHYAYcRwWIFgsJQAOKCEAAJ6/FgCggDgTQDAgOgAOKCEAABp+OQCggDgfQDAgOgAOKCEAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2A\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#firmwareversion-property","text":"Provides access to the versions maintained in version.txt. This property is read-only .","title":"firmwareversion property"},{"location":"api/DeviceInfoAPI/#value_9","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_15","text":"Name Type Description result object Versions maintained in version.txt result.imagename string Name of firmware image result?.sdk string (optional) SDK version string result?.mediarite string (optional) Mediarite value result?.yocto string (optional) Yocto version","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_9","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_15","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.firmwareversion\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"imagename\": \"PX051AEI_VBN_2203_sprint_20220331225312sdy_NG\", \"sdk\": \"17.3\", \"mediarite\": \"8.3.53\", \"yocto\": \"dunfell\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#serialnumber-property","text":"Provides access to the serial number set by manufacturer. This property is read-only .","title":"serialnumber property"},{"location":"api/DeviceInfoAPI/#value_10","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_16","text":"Name Type Description result object Serial number set by manufacturer result.serialnumber string Device Serial Number","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_10","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_16","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.serialnumber\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"serialnumber\": \"PAW400003744\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#make-property","text":"Provides access to the device manufacturer. This property is read-only .","title":"make property"},{"location":"api/DeviceInfoAPI/#value_11","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_17","text":"Name Type Description result object Device manufacturer result.make string Device manufacturer","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_11","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_17","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.make\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"make\": \"pace\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#modelid-property","text":"Provides access to the device model number or SKU. This property is read-only .","title":"modelid property"},{"location":"api/DeviceInfoAPI/#value_12","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_18","text":"Name Type Description result object Device model number or SKU result.sku string Device model number or SKU","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_12","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_18","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelid\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"sku\": \"PX051AEI\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#modelname-property","text":"Provides access to the device model name. This property is read-only .","title":"modelname property"},{"location":"api/DeviceInfoAPI/#value_13","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_19","text":"Name Type Description result object Device model name result.model string Device model name","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_13","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_19","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelname\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Pace Xi5\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#modelyear-property","text":"Provides access to the device model year. This property is read-only .","title":"modelyear property"},{"location":"api/DeviceInfoAPI/#value_14","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_20","text":"Name Type Description result object Device model year result.year integer Device model year","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_14","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_20","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelyear\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"year\": 2020 } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#friendlyname-property","text":"Provides access to the device friendly name. This property is read-only .","title":"friendlyname property"},{"location":"api/DeviceInfoAPI/#value_15","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_21","text":"Name Type Description result object Device friendly name result.name string Device friendly name","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_15","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_21","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_15","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.friendlyname\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_15","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"My device\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#platformname-property","text":"Provides access to the device Platform name. This property is read-only .","title":"platformname property"},{"location":"api/DeviceInfoAPI/#value_16","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_22","text":"Name Type Description result object Device Platform name result.name string Device Platform name","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_16","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_22","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_16","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.platformname\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_16","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"Linux\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#devicetype-property","text":"Provides access to the device type. This property is read-only .","title":"devicetype property"},{"location":"api/DeviceInfoAPI/#value_17","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_23","text":"Name Type Description result object Device type result.devicetype string Device type","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_17","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_23","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_17","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.devicetype\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_17","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"devicetype\": \"IpStb\" } }","title":"Get Response"},{"location":"api/DeviceInfoAPI/#distributorid-property","text":"Provides access to the partner ID or distributor ID for device. This property is read-only .","title":"distributorid property"},{"location":"api/DeviceInfoAPI/#value_18","text":"","title":"Value"},{"location":"api/DeviceInfoAPI/#result_24","text":"Name Type Description result object Partner ID or distributor ID for device result.distributorid string Partner ID or distributor ID for device","title":"Result"},{"location":"api/DeviceInfoAPI/#errors_18","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"api/DeviceInfoAPI/#example_24","text":"","title":"Example"},{"location":"api/DeviceInfoAPI/#get-request_18","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.distributorid\" }","title":"Get Request"},{"location":"api/DeviceInfoAPI/#get-response_18","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"distributorid\": \"comcast\" } }","title":"Get Response"},{"location":"api/DictionaryAPI/","text":"Dictionary API Version: 1.0.0 Status: Dictionary interface for Thunder framework. (Defined with IDictionary in IDictionary.h ) Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the Dictionary interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Dictionary JSON-RPC interface. Methods The following methods are provided by the Dictionary interface: Dictionary interface methods: Method Description get Getters for the dictionary set Setters for the dictionary get method Getters for the dictionary. Parameters Name Type Description params object ... params.namespace string NameSpace to be used params.key string Key to be used Result Name Type Description result string ... Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Dictionary.1.get\", \"params\": { \"namespace\": \"...\", \"key\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } set method Setters for the dictionary. Parameters Name Type Description params object ... params.namespace string NameSpace to be used params.key string Key to be used params.value string Value to be set Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Dictionary.1.set\", \"params\": { \"namespace\": \"...\", \"key\": \"...\", \"value\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Dictionary interface: Dictionary interface events: Notification Description modified Changes on the subscribed namespace modified notification Changes on the subscribed namespace.. Parameters Name Type Description params object ... params.namespace string NameSpace to be used params.key string Key to be used params.value string Value of the key Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Dictionary.1.register\", \"params\": { \"event\": \"modified\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.modified\", \"params\": { \"namespace\": \"...\", \"key\": \"...\", \"value\": \"...\" } }","title":"Dictionary API"},{"location":"api/DictionaryAPI/#dictionary-api","text":"Version: 1.0.0 Status: Dictionary interface for Thunder framework. (Defined with IDictionary in IDictionary.h )","title":"Dictionary API"},{"location":"api/DictionaryAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"api/DictionaryAPI/#introduction","text":"","title":"Introduction"},{"location":"api/DictionaryAPI/#scope","text":"This document describes purpose and functionality of the Dictionary interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"api/DictionaryAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/DictionaryAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/DictionaryAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/DictionaryAPI/#description","text":"Dictionary JSON-RPC interface.","title":"Description"},{"location":"api/DictionaryAPI/#methods","text":"The following methods are provided by the Dictionary interface: Dictionary interface methods: Method Description get Getters for the dictionary set Setters for the dictionary","title":"Methods"},{"location":"api/DictionaryAPI/#get-method","text":"Getters for the dictionary.","title":"get method"},{"location":"api/DictionaryAPI/#parameters","text":"Name Type Description params object ... params.namespace string NameSpace to be used params.key string Key to be used","title":"Parameters"},{"location":"api/DictionaryAPI/#result","text":"Name Type Description result string ...","title":"Result"},{"location":"api/DictionaryAPI/#example","text":"","title":"Example"},{"location":"api/DictionaryAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Dictionary.1.get\", \"params\": { \"namespace\": \"...\", \"key\": \"...\" } }","title":"Request"},{"location":"api/DictionaryAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Response"},{"location":"api/DictionaryAPI/#set-method","text":"Setters for the dictionary.","title":"set method"},{"location":"api/DictionaryAPI/#parameters_1","text":"Name Type Description params object ... params.namespace string NameSpace to be used params.key string Key to be used params.value string Value to be set","title":"Parameters"},{"location":"api/DictionaryAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/DictionaryAPI/#example_1","text":"","title":"Example"},{"location":"api/DictionaryAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Dictionary.1.set\", \"params\": { \"namespace\": \"...\", \"key\": \"...\", \"value\": \"...\" } }","title":"Request"},{"location":"api/DictionaryAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/DictionaryAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Dictionary interface: Dictionary interface events: Notification Description modified Changes on the subscribed namespace","title":"Notifications"},{"location":"api/DictionaryAPI/#modified-notification","text":"Changes on the subscribed namespace..","title":"modified notification"},{"location":"api/DictionaryAPI/#parameters_2","text":"Name Type Description params object ... params.namespace string NameSpace to be used params.key string Key to be used params.value string Value of the key","title":"Parameters"},{"location":"api/DictionaryAPI/#example_2","text":"","title":"Example"},{"location":"api/DictionaryAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Dictionary.1.register\", \"params\": { \"event\": \"modified\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DictionaryAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.modified\", \"params\": { \"namespace\": \"...\", \"key\": \"...\", \"value\": \"...\" } }","title":"Message"},{"location":"api/DisplayInfoAPI/","text":"Display Info API Version: 1.0.0 Status: DisplayInfo interface for Thunder framework. (Defined by DisplayInfo.json ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the DisplayInfo interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DisplayInfo JSON-RPC interface. Properties The following properties are provided by the DisplayInfo interface: DisplayInfo interface properties: Property Description displayinfo (read-only) Display general information displayinfo property Provides access to the display general information. This property is read-only . Value Result Name Type Description result object Display general information result.totalgpuram integer Total GPU DRAM memory (in bytes) result.freegpuram integer Free GPU DRAM memory (in bytes) result.audiopassthrough boolean Audio Pass through is support for this device result.connected boolean HDMI display connection status result.width integer Width of the connected HDMI display result.height integer Height of the connected HDMI display result.hdcpprotection string HDCP Protection result.hdrtype string HDR Type used Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.displayinfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"totalgpuram\": 381681664, \"freegpuram\": 358612992, \"audiopassthrough\": false, \"connected\": true, \"width\": 1280, \"height\": 720, \"hdcpprotection\": \"HDCP1x\", \"hdrtype\": \"HDROff\" } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DisplayInfo interface: DisplayInfo interface events: Notification Description updated Notifies about a change/update in the connection updated notification Notifies about a change/update in the connection. Description Register to this event to be notified about any change in the connection Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.register\", \"params\": { \"event\": \"updated\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.updated\" }","title":"Display Info API"},{"location":"api/DisplayInfoAPI/#display-info-api","text":"Version: 1.0.0 Status: DisplayInfo interface for Thunder framework. (Defined by DisplayInfo.json )","title":"Display Info API"},{"location":"api/DisplayInfoAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/DisplayInfoAPI/#introduction","text":"","title":"Introduction"},{"location":"api/DisplayInfoAPI/#scope","text":"This document describes purpose and functionality of the DisplayInfo interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/DisplayInfoAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/DisplayInfoAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/DisplayInfoAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/DisplayInfoAPI/#description","text":"DisplayInfo JSON-RPC interface.","title":"Description"},{"location":"api/DisplayInfoAPI/#properties","text":"The following properties are provided by the DisplayInfo interface: DisplayInfo interface properties: Property Description displayinfo (read-only) Display general information","title":"Properties"},{"location":"api/DisplayInfoAPI/#displayinfo-property","text":"Provides access to the display general information. This property is read-only .","title":"displayinfo property"},{"location":"api/DisplayInfoAPI/#value","text":"","title":"Value"},{"location":"api/DisplayInfoAPI/#result","text":"Name Type Description result object Display general information result.totalgpuram integer Total GPU DRAM memory (in bytes) result.freegpuram integer Free GPU DRAM memory (in bytes) result.audiopassthrough boolean Audio Pass through is support for this device result.connected boolean HDMI display connection status result.width integer Width of the connected HDMI display result.height integer Height of the connected HDMI display result.hdcpprotection string HDCP Protection result.hdrtype string HDR Type used","title":"Result"},{"location":"api/DisplayInfoAPI/#example","text":"","title":"Example"},{"location":"api/DisplayInfoAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.displayinfo\" }","title":"Get Request"},{"location":"api/DisplayInfoAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"totalgpuram\": 381681664, \"freegpuram\": 358612992, \"audiopassthrough\": false, \"connected\": true, \"width\": 1280, \"height\": 720, \"hdcpprotection\": \"HDCP1x\", \"hdrtype\": \"HDROff\" } }","title":"Get Response"},{"location":"api/DisplayInfoAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DisplayInfo interface: DisplayInfo interface events: Notification Description updated Notifies about a change/update in the connection","title":"Notifications"},{"location":"api/DisplayInfoAPI/#updated-notification","text":"Notifies about a change/update in the connection.","title":"updated notification"},{"location":"api/DisplayInfoAPI/#description_1","text":"Register to this event to be notified about any change in the connection","title":"Description"},{"location":"api/DisplayInfoAPI/#parameters","text":"This notification carries no parameters.","title":"Parameters"},{"location":"api/DisplayInfoAPI/#example_1","text":"","title":"Example"},{"location":"api/DisplayInfoAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.register\", \"params\": { \"event\": \"updated\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/DisplayInfoAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.updated\" }","title":"Message"},{"location":"api/DisplayPropertiesAPI/","text":"DisplayProperties API Version: 1.0.0 Status: DisplayProperties interface for Thunder framework. (Defined with IDisplayProperties in IDisplayInfo.h ) Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the DisplayProperties interface (version 1.0.0). It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DisplayProperties JSON-RPC interface. Properties The following properties are provided by the DisplayProperties interface: DisplayProperties interface properties: Property Description colorspace (read-only) Provides access to the display's Colour space (chroma subsampling format) framerate (read-only) Provides access to Frame Rate colourdepth (read-only) Provides access to display's colour Depth colorimetry (read-only) Provides access to display's colorimetry quantizationrange (read-only) Provides access to display's Qauntization Range eotf (read-only) Provides access to display's Electro optical transfer function colorspace property Provides access to the provides access to the display's Colour space (chroma subsampling format). This property is read-only . Value Result Name Type Description result string Colour space (must be one of the following: FormatOther, FormatRgb444, FormatUnknown, FormatYcbcr420, FormatYcbcr422, FormatYcbcr444 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colorspace\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FormatUnknown\" } framerate property Provides access to the provides access to Frame Rate. This property is read-only . Value Result Name Type Description result string Frame rate (must be one of the following: Framerate11988, Framerate120, Framerate144, Framerate23976, Framerate24, Framerate25, Framerate2997, Framerate30, Framerate47952, Framerate48, Framerate50, Framerate5994, Framerate60, FramerateUnknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.framerate\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FramerateUnknown\" } colourdepth property Provides access to the provides access to display's colour Depth. This property is read-only . Value Result Name Type Description result string Colour depth (must be one of the following: Colordepth10Bit, Colordepth12Bit, Colordepth8Bit, ColordepthUnknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colourdepth\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ColordepthUnknown\" } colorimetry property Provides access to the provides access to display's colorimetry. This property is read-only . Value Result Name Type Description result array Display colorimetry result[#] string ... (must be one of the following: ColorimetryBt2020RgbYcbcr, ColorimetryBt2020Yccbcbrc, ColorimetryBt709, ColorimetryOprgb, ColorimetryOpycc601, ColorimetryOther, ColorimetrySmpte170M, ColorimetrySycc601, ColorimetryUnknown, ColorimetryXvycc601, ColorimetryXvycc709 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colorimetry\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ColorimetryUnknown\" ] } quantizationrange property Provides access to the provides access to display's Qauntization Range. This property is read-only . Value Result Name Type Description result string Quantization range (must be one of the following: QuantizationrangeFull, QuantizationrangeLimited, QuantizationrangeUnknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.quantizationrange\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"QuantizationrangeUnknown\" } eotf property Provides access to the provides access to display's Electro optical transfer function. This property is read-only . Value Result Name Type Description result string Display's EOTF (must be one of the following: EotfBt1886, EotfBt2100, EotfOther, EotfSmpteSt2084, EotfUnknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.eotf\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"EotfUnknown\" }","title":"DisplayProperties API"},{"location":"api/DisplayPropertiesAPI/#displayproperties-api","text":"Version: 1.0.0 Status: DisplayProperties interface for Thunder framework. (Defined with IDisplayProperties in IDisplayInfo.h )","title":"DisplayProperties API"},{"location":"api/DisplayPropertiesAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"api/DisplayPropertiesAPI/#introduction","text":"","title":"Introduction"},{"location":"api/DisplayPropertiesAPI/#scope","text":"This document describes purpose and functionality of the DisplayProperties interface (version 1.0.0). It includes detailed specification about its properties provided.","title":"Scope"},{"location":"api/DisplayPropertiesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/DisplayPropertiesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/DisplayPropertiesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/DisplayPropertiesAPI/#description","text":"DisplayProperties JSON-RPC interface.","title":"Description"},{"location":"api/DisplayPropertiesAPI/#properties","text":"The following properties are provided by the DisplayProperties interface: DisplayProperties interface properties: Property Description colorspace (read-only) Provides access to the display's Colour space (chroma subsampling format) framerate (read-only) Provides access to Frame Rate colourdepth (read-only) Provides access to display's colour Depth colorimetry (read-only) Provides access to display's colorimetry quantizationrange (read-only) Provides access to display's Qauntization Range eotf (read-only) Provides access to display's Electro optical transfer function","title":"Properties"},{"location":"api/DisplayPropertiesAPI/#colorspace-property","text":"Provides access to the provides access to the display's Colour space (chroma subsampling format). This property is read-only .","title":"colorspace property"},{"location":"api/DisplayPropertiesAPI/#value","text":"","title":"Value"},{"location":"api/DisplayPropertiesAPI/#result","text":"Name Type Description result string Colour space (must be one of the following: FormatOther, FormatRgb444, FormatUnknown, FormatYcbcr420, FormatYcbcr422, FormatYcbcr444 )","title":"Result"},{"location":"api/DisplayPropertiesAPI/#example","text":"","title":"Example"},{"location":"api/DisplayPropertiesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colorspace\" }","title":"Get Request"},{"location":"api/DisplayPropertiesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FormatUnknown\" }","title":"Get Response"},{"location":"api/DisplayPropertiesAPI/#framerate-property","text":"Provides access to the provides access to Frame Rate. This property is read-only .","title":"framerate property"},{"location":"api/DisplayPropertiesAPI/#value_1","text":"","title":"Value"},{"location":"api/DisplayPropertiesAPI/#result_1","text":"Name Type Description result string Frame rate (must be one of the following: Framerate11988, Framerate120, Framerate144, Framerate23976, Framerate24, Framerate25, Framerate2997, Framerate30, Framerate47952, Framerate48, Framerate50, Framerate5994, Framerate60, FramerateUnknown )","title":"Result"},{"location":"api/DisplayPropertiesAPI/#example_1","text":"","title":"Example"},{"location":"api/DisplayPropertiesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.framerate\" }","title":"Get Request"},{"location":"api/DisplayPropertiesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FramerateUnknown\" }","title":"Get Response"},{"location":"api/DisplayPropertiesAPI/#colourdepth-property","text":"Provides access to the provides access to display's colour Depth. This property is read-only .","title":"colourdepth property"},{"location":"api/DisplayPropertiesAPI/#value_2","text":"","title":"Value"},{"location":"api/DisplayPropertiesAPI/#result_2","text":"Name Type Description result string Colour depth (must be one of the following: Colordepth10Bit, Colordepth12Bit, Colordepth8Bit, ColordepthUnknown )","title":"Result"},{"location":"api/DisplayPropertiesAPI/#example_2","text":"","title":"Example"},{"location":"api/DisplayPropertiesAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colourdepth\" }","title":"Get Request"},{"location":"api/DisplayPropertiesAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ColordepthUnknown\" }","title":"Get Response"},{"location":"api/DisplayPropertiesAPI/#colorimetry-property","text":"Provides access to the provides access to display's colorimetry. This property is read-only .","title":"colorimetry property"},{"location":"api/DisplayPropertiesAPI/#value_3","text":"","title":"Value"},{"location":"api/DisplayPropertiesAPI/#result_3","text":"Name Type Description result array Display colorimetry result[#] string ... (must be one of the following: ColorimetryBt2020RgbYcbcr, ColorimetryBt2020Yccbcbrc, ColorimetryBt709, ColorimetryOprgb, ColorimetryOpycc601, ColorimetryOther, ColorimetrySmpte170M, ColorimetrySycc601, ColorimetryUnknown, ColorimetryXvycc601, ColorimetryXvycc709 )","title":"Result"},{"location":"api/DisplayPropertiesAPI/#example_3","text":"","title":"Example"},{"location":"api/DisplayPropertiesAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.colorimetry\" }","title":"Get Request"},{"location":"api/DisplayPropertiesAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ColorimetryUnknown\" ] }","title":"Get Response"},{"location":"api/DisplayPropertiesAPI/#quantizationrange-property","text":"Provides access to the provides access to display's Qauntization Range. This property is read-only .","title":"quantizationrange property"},{"location":"api/DisplayPropertiesAPI/#value_4","text":"","title":"Value"},{"location":"api/DisplayPropertiesAPI/#result_4","text":"Name Type Description result string Quantization range (must be one of the following: QuantizationrangeFull, QuantizationrangeLimited, QuantizationrangeUnknown )","title":"Result"},{"location":"api/DisplayPropertiesAPI/#example_4","text":"","title":"Example"},{"location":"api/DisplayPropertiesAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.quantizationrange\" }","title":"Get Request"},{"location":"api/DisplayPropertiesAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"QuantizationrangeUnknown\" }","title":"Get Response"},{"location":"api/DisplayPropertiesAPI/#eotf-property","text":"Provides access to the provides access to display's Electro optical transfer function. This property is read-only .","title":"eotf property"},{"location":"api/DisplayPropertiesAPI/#value_5","text":"","title":"Value"},{"location":"api/DisplayPropertiesAPI/#result_5","text":"Name Type Description result string Display's EOTF (must be one of the following: EotfBt1886, EotfBt2100, EotfOther, EotfSmpteSt2084, EotfUnknown )","title":"Result"},{"location":"api/DisplayPropertiesAPI/#example_5","text":"","title":"Example"},{"location":"api/DisplayPropertiesAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayProperties.1.eotf\" }","title":"Get Request"},{"location":"api/DisplayPropertiesAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"EotfUnknown\" }","title":"Get Response"},{"location":"api/FirmwareControlAPI/","text":"Firmware Control API Version: 1.0.0 Status: FirmwareControl interface for Thunder framework. (Defined by FirmwareControl.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the FirmwareControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Firmware Control JSON-RPC interface. Methods The following methods are provided by the FirmwareControl interface: FirmwareControl interface methods: Method Description upgrade Upgrade the device to the given firmware resume Resume download from the last paused position upgrade method Upgrade the device to the given firmware. (Note: Ensure size of firmware image should be < 500MB). Also see: upgradeprogress Parameters Name Type Description params object ... params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded params?.type string (optional) Type of the firmware params?.progressinterval integer (optional) Number of seconds between progress update events (5 seconds, 10 seconds etc). 0 means invoking callback only once to report final upgrade result params?.hmac string (optional) HMAC value of firmare Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Operation in progress ERROR_INCORRECT_URL Invalid location given ERROR_UNAVAILABLE Error in download ERROR_BAD_REQUEST Bad file name given ERROR_ILLEGAL_STATE Invalid state of device ERROR_INCORRECT_HASH Incorrect hash given Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.upgrade\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\", \"type\": \"RCDL\", \"progressinterval\": 10, \"hmac\": \"2834e6d07fa4c7778ef7a4e394f38a5c321afbed51d54ad512bd3fffbc7aa5debc\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } resume method Resume download from the last paused position. Also see: upgradeprogress Parameters Name Type Description params object ... params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Operation in progress ERROR_INCORRECT_URL Invalid location given ERROR_UNAVAILABLE Error in download ERROR_BAD_REQUEST Bad file name given ERROR_ILLEGAL_STATE Invalid state of device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.resume\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the FirmwareControl interface: FirmwareControl interface properties: Property Description status (read-only) Current status of a upgrade downloadsize (read-only) Max free space available to download image status property Provides access to the current status of a upgrade. This property is read-only . Also see: upgradeprogress Value Result Name Type Description result string Upgrade status Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.status\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"completed\" } downloadsize property Provides access to the max free space available to download image. This property is read-only . Value Result Name Type Description result integer Available free space in bytes Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.downloadsize\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 315576 } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the FirmwareControl interface: FirmwareControl interface events: Notification Description upgradeprogress Notifies progress of upgrade upgradeprogress notification Notifies progress of upgrade. Parameters Name Type Description params object ... params.status string Upgrade status params.error string Reason of error params.progress integer Progress of upgrade (number of bytes transferred during download or percentage of completion during install Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.register\", \"params\": { \"event\": \"upgradeprogress\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.upgradeprogress\", \"params\": { \"status\": \"completed\", \"error\": \"operationotsupported\", \"progress\": 89 } }","title":"Firmware Control API"},{"location":"api/FirmwareControlAPI/#firmware-control-api","text":"Version: 1.0.0 Status: FirmwareControl interface for Thunder framework. (Defined by FirmwareControl.json )","title":"Firmware Control API"},{"location":"api/FirmwareControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/FirmwareControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/FirmwareControlAPI/#scope","text":"This document describes purpose and functionality of the FirmwareControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/FirmwareControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/FirmwareControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/FirmwareControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/FirmwareControlAPI/#description","text":"Firmware Control JSON-RPC interface.","title":"Description"},{"location":"api/FirmwareControlAPI/#methods","text":"The following methods are provided by the FirmwareControl interface: FirmwareControl interface methods: Method Description upgrade Upgrade the device to the given firmware resume Resume download from the last paused position","title":"Methods"},{"location":"api/FirmwareControlAPI/#upgrade-method","text":"Upgrade the device to the given firmware. (Note: Ensure size of firmware image should be < 500MB). Also see: upgradeprogress","title":"upgrade method"},{"location":"api/FirmwareControlAPI/#parameters","text":"Name Type Description params object ... params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded params?.type string (optional) Type of the firmware params?.progressinterval integer (optional) Number of seconds between progress update events (5 seconds, 10 seconds etc). 0 means invoking callback only once to report final upgrade result params?.hmac string (optional) HMAC value of firmare","title":"Parameters"},{"location":"api/FirmwareControlAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/FirmwareControlAPI/#errors","text":"Message Description ERROR_INPROGRESS Operation in progress ERROR_INCORRECT_URL Invalid location given ERROR_UNAVAILABLE Error in download ERROR_BAD_REQUEST Bad file name given ERROR_ILLEGAL_STATE Invalid state of device ERROR_INCORRECT_HASH Incorrect hash given","title":"Errors"},{"location":"api/FirmwareControlAPI/#example","text":"","title":"Example"},{"location":"api/FirmwareControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.upgrade\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\", \"type\": \"RCDL\", \"progressinterval\": 10, \"hmac\": \"2834e6d07fa4c7778ef7a4e394f38a5c321afbed51d54ad512bd3fffbc7aa5debc\" } }","title":"Request"},{"location":"api/FirmwareControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/FirmwareControlAPI/#resume-method","text":"Resume download from the last paused position. Also see: upgradeprogress","title":"resume method"},{"location":"api/FirmwareControlAPI/#parameters_1","text":"Name Type Description params object ... params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded","title":"Parameters"},{"location":"api/FirmwareControlAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/FirmwareControlAPI/#errors_1","text":"Message Description ERROR_INPROGRESS Operation in progress ERROR_INCORRECT_URL Invalid location given ERROR_UNAVAILABLE Error in download ERROR_BAD_REQUEST Bad file name given ERROR_ILLEGAL_STATE Invalid state of device","title":"Errors"},{"location":"api/FirmwareControlAPI/#example_1","text":"","title":"Example"},{"location":"api/FirmwareControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.resume\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\" } }","title":"Request"},{"location":"api/FirmwareControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/FirmwareControlAPI/#properties","text":"The following properties are provided by the FirmwareControl interface: FirmwareControl interface properties: Property Description status (read-only) Current status of a upgrade downloadsize (read-only) Max free space available to download image","title":"Properties"},{"location":"api/FirmwareControlAPI/#status-property","text":"Provides access to the current status of a upgrade. This property is read-only . Also see: upgradeprogress","title":"status property"},{"location":"api/FirmwareControlAPI/#value","text":"","title":"Value"},{"location":"api/FirmwareControlAPI/#result_2","text":"Name Type Description result string Upgrade status","title":"Result"},{"location":"api/FirmwareControlAPI/#example_2","text":"","title":"Example"},{"location":"api/FirmwareControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.status\" }","title":"Get Request"},{"location":"api/FirmwareControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"completed\" }","title":"Get Response"},{"location":"api/FirmwareControlAPI/#downloadsize-property","text":"Provides access to the max free space available to download image. This property is read-only .","title":"downloadsize property"},{"location":"api/FirmwareControlAPI/#value_1","text":"","title":"Value"},{"location":"api/FirmwareControlAPI/#result_3","text":"Name Type Description result integer Available free space in bytes","title":"Result"},{"location":"api/FirmwareControlAPI/#example_3","text":"","title":"Example"},{"location":"api/FirmwareControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.downloadsize\" }","title":"Get Request"},{"location":"api/FirmwareControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 315576 }","title":"Get Response"},{"location":"api/FirmwareControlAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the FirmwareControl interface: FirmwareControl interface events: Notification Description upgradeprogress Notifies progress of upgrade","title":"Notifications"},{"location":"api/FirmwareControlAPI/#upgradeprogress-notification","text":"Notifies progress of upgrade.","title":"upgradeprogress notification"},{"location":"api/FirmwareControlAPI/#parameters_2","text":"Name Type Description params object ... params.status string Upgrade status params.error string Reason of error params.progress integer Progress of upgrade (number of bytes transferred during download or percentage of completion during install","title":"Parameters"},{"location":"api/FirmwareControlAPI/#example_4","text":"","title":"Example"},{"location":"api/FirmwareControlAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.register\", \"params\": { \"event\": \"upgradeprogress\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/FirmwareControlAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.upgradeprogress\", \"params\": { \"status\": \"completed\", \"error\": \"operationotsupported\", \"progress\": 89 } }","title":"Message"},{"location":"api/GraphicsPropertiesAPI/","text":"GraphicsProperties API Version: 1.0.0 Status: GraphicsProperties interface for Thunder framework. (Defined with IGraphicsProperties in IDisplayInfo.h ) Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the GraphicsProperties interface (version 1.0.0). It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description GraphicsProperties JSON-RPC interface. Properties The following properties are provided by the GraphicsProperties interface: GraphicsProperties interface properties: Property Description totalgpuram (read-only) Total GPU DRAM memory (in bytes) freegpuram (read-only) Free GPU DRAM memory (in bytes) totalgpuram property Provides access to the total GPU DRAM memory (in bytes). This property is read-only . Value Result Name Type Description result integer Total GPU DRAM memory (in bytes) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"GraphicsProperties.1.totalgpuram\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } freegpuram property Provides access to the free GPU DRAM memory (in bytes). This property is read-only . Value Result Name Type Description result integer Free GPU DRAM memory (in bytes) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"GraphicsProperties.1.freegpuram\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"GraphicsProperties API"},{"location":"api/GraphicsPropertiesAPI/#graphicsproperties-api","text":"Version: 1.0.0 Status: GraphicsProperties interface for Thunder framework. (Defined with IGraphicsProperties in IDisplayInfo.h )","title":"GraphicsProperties API"},{"location":"api/GraphicsPropertiesAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"api/GraphicsPropertiesAPI/#introduction","text":"","title":"Introduction"},{"location":"api/GraphicsPropertiesAPI/#scope","text":"This document describes purpose and functionality of the GraphicsProperties interface (version 1.0.0). It includes detailed specification about its properties provided.","title":"Scope"},{"location":"api/GraphicsPropertiesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/GraphicsPropertiesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/GraphicsPropertiesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/GraphicsPropertiesAPI/#description","text":"GraphicsProperties JSON-RPC interface.","title":"Description"},{"location":"api/GraphicsPropertiesAPI/#properties","text":"The following properties are provided by the GraphicsProperties interface: GraphicsProperties interface properties: Property Description totalgpuram (read-only) Total GPU DRAM memory (in bytes) freegpuram (read-only) Free GPU DRAM memory (in bytes)","title":"Properties"},{"location":"api/GraphicsPropertiesAPI/#totalgpuram-property","text":"Provides access to the total GPU DRAM memory (in bytes). This property is read-only .","title":"totalgpuram property"},{"location":"api/GraphicsPropertiesAPI/#value","text":"","title":"Value"},{"location":"api/GraphicsPropertiesAPI/#result","text":"Name Type Description result integer Total GPU DRAM memory (in bytes)","title":"Result"},{"location":"api/GraphicsPropertiesAPI/#example","text":"","title":"Example"},{"location":"api/GraphicsPropertiesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"GraphicsProperties.1.totalgpuram\" }","title":"Get Request"},{"location":"api/GraphicsPropertiesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/GraphicsPropertiesAPI/#freegpuram-property","text":"Provides access to the free GPU DRAM memory (in bytes). This property is read-only .","title":"freegpuram property"},{"location":"api/GraphicsPropertiesAPI/#value_1","text":"","title":"Value"},{"location":"api/GraphicsPropertiesAPI/#result_1","text":"Name Type Description result integer Free GPU DRAM memory (in bytes)","title":"Result"},{"location":"api/GraphicsPropertiesAPI/#example_1","text":"","title":"Example"},{"location":"api/GraphicsPropertiesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"GraphicsProperties.1.freegpuram\" }","title":"Get Request"},{"location":"api/GraphicsPropertiesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/HDRPropertiesAPI/","text":"HDRProperties API Version: 1.0.0 Status: HDRProperties interface for Thunder framework. (Defined with IHDRProperties in IDisplayInfo.h ) Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the HDRProperties interface (version 1.0.0). It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description HDRProperties JSON-RPC interface. Properties The following properties are provided by the HDRProperties interface: HDRProperties interface properties: Property Description tvcapabilities (read-only) HDR formats supported by TV stbcapabilities (read-only) HDR formats supported by STB hdrsetting (read-only) HDR format in use tvcapabilities property Provides access to the HDR formats supported by TV. This property is read-only . Value Result Name Type Description result array HDR formats supported by TV result[#] string ... (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.tvcapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] } stbcapabilities property Provides access to the HDR formats supported by STB. This property is read-only . Value Result Name Type Description result array HDR formats supported by STB result[#] string ... (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.stbcapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] } hdrsetting property Provides access to the HDR format in use. This property is read-only . Value Result Name Type Description result string HDR format (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.hdrsetting\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdrOff\" }","title":"HDRProperties API"},{"location":"api/HDRPropertiesAPI/#hdrproperties-api","text":"Version: 1.0.0 Status: HDRProperties interface for Thunder framework. (Defined with IHDRProperties in IDisplayInfo.h )","title":"HDRProperties API"},{"location":"api/HDRPropertiesAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"api/HDRPropertiesAPI/#introduction","text":"","title":"Introduction"},{"location":"api/HDRPropertiesAPI/#scope","text":"This document describes purpose and functionality of the HDRProperties interface (version 1.0.0). It includes detailed specification about its properties provided.","title":"Scope"},{"location":"api/HDRPropertiesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/HDRPropertiesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/HDRPropertiesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/HDRPropertiesAPI/#description","text":"HDRProperties JSON-RPC interface.","title":"Description"},{"location":"api/HDRPropertiesAPI/#properties","text":"The following properties are provided by the HDRProperties interface: HDRProperties interface properties: Property Description tvcapabilities (read-only) HDR formats supported by TV stbcapabilities (read-only) HDR formats supported by STB hdrsetting (read-only) HDR format in use","title":"Properties"},{"location":"api/HDRPropertiesAPI/#tvcapabilities-property","text":"Provides access to the HDR formats supported by TV. This property is read-only .","title":"tvcapabilities property"},{"location":"api/HDRPropertiesAPI/#value","text":"","title":"Value"},{"location":"api/HDRPropertiesAPI/#result","text":"Name Type Description result array HDR formats supported by TV result[#] string ... (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor )","title":"Result"},{"location":"api/HDRPropertiesAPI/#example","text":"","title":"Example"},{"location":"api/HDRPropertiesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.tvcapabilities\" }","title":"Get Request"},{"location":"api/HDRPropertiesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] }","title":"Get Response"},{"location":"api/HDRPropertiesAPI/#stbcapabilities-property","text":"Provides access to the HDR formats supported by STB. This property is read-only .","title":"stbcapabilities property"},{"location":"api/HDRPropertiesAPI/#value_1","text":"","title":"Value"},{"location":"api/HDRPropertiesAPI/#result_1","text":"Name Type Description result array HDR formats supported by STB result[#] string ... (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor )","title":"Result"},{"location":"api/HDRPropertiesAPI/#example_1","text":"","title":"Example"},{"location":"api/HDRPropertiesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.stbcapabilities\" }","title":"Get Request"},{"location":"api/HDRPropertiesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] }","title":"Get Response"},{"location":"api/HDRPropertiesAPI/#hdrsetting-property","text":"Provides access to the HDR format in use. This property is read-only .","title":"hdrsetting property"},{"location":"api/HDRPropertiesAPI/#value_2","text":"","title":"Value"},{"location":"api/HDRPropertiesAPI/#result_2","text":"Name Type Description result string HDR format (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor )","title":"Result"},{"location":"api/HDRPropertiesAPI/#example_2","text":"","title":"Example"},{"location":"api/HDRPropertiesAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"HDRProperties.1.hdrsetting\" }","title":"Get Request"},{"location":"api/HDRPropertiesAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdrOff\" }","title":"Get Response"},{"location":"api/IOConnectorAPI/","text":"IO Connector API Version: 1.0.0 Status: IOConnector interface for Thunder framework. (Defined by IOConnector.json ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the IOConnector interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description IO Connector JSON-RPC interface. Properties The following properties are provided by the IOConnector interface: IOConnector interface properties: Property Description pin GPIO pin value pin property Provides access to the GPIO pin value. Also see: activity Value Name Type Description (property) integer Value of the pin The pin id argument shall be passed as the index to the property, e.g. IOConnector.1.pin@<pin id> . Result Name Type Description result integer Value of the pin Errors Message Description ERROR_UNKNOWN_KEY Unknown pin ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\", \"params\": 1 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOConnector interface: IOConnector interface events: Notification Description activity Notifies about GPIO pin activity activity notification Notifies about GPIO pin activity. Description Register to this event to be notified about pin value changes Parameters Name Type Description params object ... params.value integer Value of the pin The pin ID argument will be passed within the designator, e.g. 189.client.activity . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.register\", \"params\": { \"event\": \"activity\", \"id\": \"189.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"189.client.activity\", \"params\": { \"value\": 1 } }","title":"IO Connector API"},{"location":"api/IOConnectorAPI/#io-connector-api","text":"Version: 1.0.0 Status: IOConnector interface for Thunder framework. (Defined by IOConnector.json )","title":"IO Connector API"},{"location":"api/IOConnectorAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/IOConnectorAPI/#introduction","text":"","title":"Introduction"},{"location":"api/IOConnectorAPI/#scope","text":"This document describes purpose and functionality of the IOConnector interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/IOConnectorAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/IOConnectorAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/IOConnectorAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/IOConnectorAPI/#description","text":"IO Connector JSON-RPC interface.","title":"Description"},{"location":"api/IOConnectorAPI/#properties","text":"The following properties are provided by the IOConnector interface: IOConnector interface properties: Property Description pin GPIO pin value","title":"Properties"},{"location":"api/IOConnectorAPI/#pin-property","text":"Provides access to the GPIO pin value. Also see: activity","title":"pin property"},{"location":"api/IOConnectorAPI/#value","text":"Name Type Description (property) integer Value of the pin The pin id argument shall be passed as the index to the property, e.g. IOConnector.1.pin@<pin id> .","title":"Value"},{"location":"api/IOConnectorAPI/#result","text":"Name Type Description result integer Value of the pin","title":"Result"},{"location":"api/IOConnectorAPI/#errors","text":"Message Description ERROR_UNKNOWN_KEY Unknown pin ID given","title":"Errors"},{"location":"api/IOConnectorAPI/#example","text":"","title":"Example"},{"location":"api/IOConnectorAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\" }","title":"Get Request"},{"location":"api/IOConnectorAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 }","title":"Get Response"},{"location":"api/IOConnectorAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\", \"params\": 1 }","title":"Set Request"},{"location":"api/IOConnectorAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/IOConnectorAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOConnector interface: IOConnector interface events: Notification Description activity Notifies about GPIO pin activity","title":"Notifications"},{"location":"api/IOConnectorAPI/#activity-notification","text":"Notifies about GPIO pin activity.","title":"activity notification"},{"location":"api/IOConnectorAPI/#description_1","text":"Register to this event to be notified about pin value changes","title":"Description"},{"location":"api/IOConnectorAPI/#parameters","text":"Name Type Description params object ... params.value integer Value of the pin The pin ID argument will be passed within the designator, e.g. 189.client.activity .","title":"Parameters"},{"location":"api/IOConnectorAPI/#example_1","text":"","title":"Example"},{"location":"api/IOConnectorAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.register\", \"params\": { \"event\": \"activity\", \"id\": \"189.client\" } }","title":"Registration"},{"location":"api/IOConnectorAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"189.client.activity\", \"params\": { \"value\": 1 } }","title":"Message"},{"location":"api/IOControlAPI/","text":"IO Control API Version: 1.0.0 Status: IOControl interface for Thunder framework. (Defined by IOControl.json ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the IOControl interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description IO Control JSON-RPC interface. Properties The following properties are provided by the IOControl interface: IOControl interface properties: Property Description pin GPIO pin value pin property Provides access to the GPIO pin value. Also see: activity Value Name Type Description (property) integer Value of the pin The pin id argument shall be passed as the index to the property, e.g. IOControl.1.pin@<pin id> . Result Name Type Description result integer Value of the pin Errors Message Description ERROR_UNKNOWN_KEY Unknown pin ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOControl.1.pin@189\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOControl.1.pin@189\", \"params\": 1 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOControl interface: IOControl interface events: Notification Description activity Notifies about GPIO pin activity activity notification Notifies about GPIO pin activity. Description Register to this event to be notified about pin value changes Parameters Name Type Description params object ... params.value integer Value of the pin The pin ID argument will be passed within the designator, e.g. 189.client.activity . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOControl.1.register\", \"params\": { \"event\": \"activity\", \"id\": \"189.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"189.client.activity\", \"params\": { \"value\": 1 } }","title":"IO Control API"},{"location":"api/IOControlAPI/#io-control-api","text":"Version: 1.0.0 Status: IOControl interface for Thunder framework. (Defined by IOControl.json )","title":"IO Control API"},{"location":"api/IOControlAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/IOControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/IOControlAPI/#scope","text":"This document describes purpose and functionality of the IOControl interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/IOControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/IOControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/IOControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/IOControlAPI/#description","text":"IO Control JSON-RPC interface.","title":"Description"},{"location":"api/IOControlAPI/#properties","text":"The following properties are provided by the IOControl interface: IOControl interface properties: Property Description pin GPIO pin value","title":"Properties"},{"location":"api/IOControlAPI/#pin-property","text":"Provides access to the GPIO pin value. Also see: activity","title":"pin property"},{"location":"api/IOControlAPI/#value","text":"Name Type Description (property) integer Value of the pin The pin id argument shall be passed as the index to the property, e.g. IOControl.1.pin@<pin id> .","title":"Value"},{"location":"api/IOControlAPI/#result","text":"Name Type Description result integer Value of the pin","title":"Result"},{"location":"api/IOControlAPI/#errors","text":"Message Description ERROR_UNKNOWN_KEY Unknown pin ID given","title":"Errors"},{"location":"api/IOControlAPI/#example","text":"","title":"Example"},{"location":"api/IOControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOControl.1.pin@189\" }","title":"Get Request"},{"location":"api/IOControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 }","title":"Get Response"},{"location":"api/IOControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOControl.1.pin@189\", \"params\": 1 }","title":"Set Request"},{"location":"api/IOControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/IOControlAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOControl interface: IOControl interface events: Notification Description activity Notifies about GPIO pin activity","title":"Notifications"},{"location":"api/IOControlAPI/#activity-notification","text":"Notifies about GPIO pin activity.","title":"activity notification"},{"location":"api/IOControlAPI/#description_1","text":"Register to this event to be notified about pin value changes","title":"Description"},{"location":"api/IOControlAPI/#parameters","text":"Name Type Description params object ... params.value integer Value of the pin The pin ID argument will be passed within the designator, e.g. 189.client.activity .","title":"Parameters"},{"location":"api/IOControlAPI/#example_1","text":"","title":"Example"},{"location":"api/IOControlAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOControl.1.register\", \"params\": { \"event\": \"activity\", \"id\": \"189.client\" } }","title":"Registration"},{"location":"api/IOControlAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"189.client.activity\", \"params\": { \"value\": 1 } }","title":"Message"},{"location":"api/InputSwitchAPI/","text":"Input Switch API Version: 1.0.0 Status: InputSwitch interface for Thunder framework. (Defined by InputSwitch.json ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the InputSwitch interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description InputSwitch JSON-RPC interface. Methods The following methods are provided by the InputSwitch interface: InputSwitch interface methods: Method Description channel Enable or Disable the throughput through the given channel select Enable the given channel, disabling all othe channels, whish are not immune status Check the status of the requested channel channel method Enable or Disable the throughput through the given channel. Parameters Name Type Description params object ... params.name string Callsign that is the owner of this channel params.enabled boolean Enable or disable the throughput of data through this channel Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Failed to scan Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.channel\", \"params\": { \"name\": \"WebKitBrowser\", \"enabled\": false } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } select method Enable the given channel, disabling all othe channels, whish are not immune. Parameters Name Type Description params object ... params.name string Callsign that is the owner of this channel Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Failed to scan Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.select\", \"params\": { \"name\": \"WebKitBrowser\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } status method Check the status of the requested channel. Parameters Name Type Description params object ... params.name string Callsign that is the owner of this channel Result Name Type Description result array ... result[#] object ... result[#].name string Callsign associated with this channel result[#].enabled boolean Is the channel enabled to receive info Errors Message Description ERROR_UNKNOWN_KEY Could not find the designated channel Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.status\", \"params\": { \"name\": \"WebKitBrowser\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"WebKitBrowser\", \"enabled\": false } ] }","title":"Input Switch API"},{"location":"api/InputSwitchAPI/#input-switch-api","text":"Version: 1.0.0 Status: InputSwitch interface for Thunder framework. (Defined by InputSwitch.json )","title":"Input Switch API"},{"location":"api/InputSwitchAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/InputSwitchAPI/#introduction","text":"","title":"Introduction"},{"location":"api/InputSwitchAPI/#scope","text":"This document describes purpose and functionality of the InputSwitch interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/InputSwitchAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/InputSwitchAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/InputSwitchAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/InputSwitchAPI/#description","text":"InputSwitch JSON-RPC interface.","title":"Description"},{"location":"api/InputSwitchAPI/#methods","text":"The following methods are provided by the InputSwitch interface: InputSwitch interface methods: Method Description channel Enable or Disable the throughput through the given channel select Enable the given channel, disabling all othe channels, whish are not immune status Check the status of the requested channel","title":"Methods"},{"location":"api/InputSwitchAPI/#channel-method","text":"Enable or Disable the throughput through the given channel.","title":"channel method"},{"location":"api/InputSwitchAPI/#parameters","text":"Name Type Description params object ... params.name string Callsign that is the owner of this channel params.enabled boolean Enable or disable the throughput of data through this channel","title":"Parameters"},{"location":"api/InputSwitchAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/InputSwitchAPI/#errors","text":"Message Description ERROR_UNKNOWN_KEY Failed to scan","title":"Errors"},{"location":"api/InputSwitchAPI/#example","text":"","title":"Example"},{"location":"api/InputSwitchAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.channel\", \"params\": { \"name\": \"WebKitBrowser\", \"enabled\": false } }","title":"Request"},{"location":"api/InputSwitchAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/InputSwitchAPI/#select-method","text":"Enable the given channel, disabling all othe channels, whish are not immune.","title":"select method"},{"location":"api/InputSwitchAPI/#parameters_1","text":"Name Type Description params object ... params.name string Callsign that is the owner of this channel","title":"Parameters"},{"location":"api/InputSwitchAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/InputSwitchAPI/#errors_1","text":"Message Description ERROR_UNKNOWN_KEY Failed to scan","title":"Errors"},{"location":"api/InputSwitchAPI/#example_1","text":"","title":"Example"},{"location":"api/InputSwitchAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.select\", \"params\": { \"name\": \"WebKitBrowser\" } }","title":"Request"},{"location":"api/InputSwitchAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/InputSwitchAPI/#status-method","text":"Check the status of the requested channel.","title":"status method"},{"location":"api/InputSwitchAPI/#parameters_2","text":"Name Type Description params object ... params.name string Callsign that is the owner of this channel","title":"Parameters"},{"location":"api/InputSwitchAPI/#result_2","text":"Name Type Description result array ... result[#] object ... result[#].name string Callsign associated with this channel result[#].enabled boolean Is the channel enabled to receive info","title":"Result"},{"location":"api/InputSwitchAPI/#errors_2","text":"Message Description ERROR_UNKNOWN_KEY Could not find the designated channel","title":"Errors"},{"location":"api/InputSwitchAPI/#example_2","text":"","title":"Example"},{"location":"api/InputSwitchAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"InputSwitch.1.status\", \"params\": { \"name\": \"WebKitBrowser\" } }","title":"Request"},{"location":"api/InputSwitchAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"WebKitBrowser\", \"enabled\": false } ] }","title":"Response"},{"location":"api/LISAAPI/","text":"LISA API Version: 1.0.0 Status: LISA interface for Thunder framework. (Defined by LISA.json ) Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the LISA interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description LISA JSON-RPC interface. Methods The following methods are provided by the LISA interface: LISA interface methods: Method Description install Download the application bundle uninstall Uninstall the application download Download arbitrary application resource file reset Delete persistent data stored locally getStorageDetails (read-only) Information on the storage usage getList Gets the list of installed applications setAuxMetadata Set an arbitrary metadata clearAuxMetadata Clears a single metadata, removing its key getMetadata Get application metadata cancel Cancel asynchronous request getProgress Estimated progress of a request lock Lock an application unlock Unlock an application getLockInfo Get lock info install method Download the application bundle. Also see: operationStatus Parameters Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.url string Application url params.appName string Application name params.category string Application category Result Name Type Description result string Operation handle Errors Message Description ERROR_INPROGRESS LISA initialization in progress or other operation pending ERROR_BAD_REQUEST Invalid params ERROR_ILLEGAL_STATE App already installed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.install\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"url\": \"http://download.com/bundle1.tgz\", \"appName\": \"Player\", \"category\": \"Web browser\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } uninstall method Uninstall the application. Also see: operationStatus Parameters Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.uninstallType string Type of the uninstall to perform Result Name Type Description result string Operation handle Errors Message Description ERROR_INPROGRESS LISA initialization in progress or other operation pending ERROR_BAD_REQUEST Invalid params Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.uninstall\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"uninstallType\": \"full\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } download method Download arbitrary application resource file. Also see: operationStatus Parameters Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.resKey string Key to access given resource file from db entry params.resUrl string Url where to download a resource from Result Name Type Description result string Operation handle Errors Message Description ERROR_INPROGRESS LISA initialization in progress or other operation pending ERROR_BAD_REQUEST Invalid params Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.download\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"resKey\": \"...\", \"resUrl\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } reset method Delete persistent data stored locally. Parameters Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.resetType string Type of the reset to perform Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params ERROR_GENERAL Filesystem Error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.reset\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"resetType\": \"full\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } getStorageDetails method Information on the storage usage. Parameters Name Type Description params object ... params?.type string (optional) Application type (mime-type) params?.id string (optional) Application ID params?.version string (optional) Application version Result Name Type Description result object Storage payload - returned as GetStorageDetails method result result.apps object Storage entry - used in results result.apps.path string Path in local filesystem result.apps?.quotaKB string (optional) Number of used kilobytes of storage result.apps.usedKB string Number of used kilobytes of storage result.persistent object Storage entry - used in results result.persistent.path string Path in local filesystem result.persistent?.quotaKB string (optional) Number of used kilobytes of storage result.persistent.usedKB string Number of used kilobytes of storage Errors Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params ERROR_GENERAL Filesystem Error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.getStorageDetails\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"apps\": { \"path\": \"...\", \"quotaKB\": \"...\", \"usedKB\": \"...\" }, \"persistent\": { \"path\": \"...\", \"quotaKB\": \"...\", \"usedKB\": \"...\" } } } getList method Gets the list of installed applications. Parameters Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params?.appName string (optional) Application name params?.category string (optional) Application category Result Name Type Description result object Applications payload - returned as GetList method result result.apps array List of apps result.apps[#] object Application entry - used in results result.apps[#].id string Application ID result.apps[#].type string Application type (mime-type) result.apps[#].installed array List of installedApp result.apps[#].installed[#] object Installed application variant result.apps[#].installed[#].version string Application version result.apps[#].installed[#].appName string Application name result.apps[#].installed[#]?.category string (optional) Application category result.apps[#].installed[#].url string Application url Errors Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.getList\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"appName\": \"Player\", \"category\": \"Web browser\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"apps\": [ { \"id\": \"com.lgi.app\", \"type\": \"application/vnd.rdk-app.dac.native\", \"installed\": [ { \"version\": \"1.0\", \"appName\": \"Player\", \"category\": \"Web browser\", \"url\": \"http://download.com/bundle1.tgz\" } ] } ] } } setAuxMetadata method Set an arbitrary metadata. Parameters Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.key string Metadata key params.value string Metadata value Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params ERROR_GENERAL Metadata Error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.setAuxMetadata\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"key\": \"...\", \"value\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } clearAuxMetadata method Clears a single metadata, removing its key. Parameters Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.key string Metadata key Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params ERROR_GENERAL Metadata Error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.clearAuxMetadata\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"key\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } getMetadata method Get application metadata. Parameters Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version Result Name Type Description result object Metadata payload - returned as GetMetadata method result result?.appName string (optional) Application name result?.category string (optional) Application category result?.url string (optional) Application url result.resources array List of key-value entries result.resources[#] object Struct holding key and value result.resources[#].key string Key property result.resources[#].value string Value property result.auxMetadata array List of key-value entries result.auxMetadata[#] object Struct holding key and value result.auxMetadata[#].key string Key property result.auxMetadata[#].value string Value property Errors Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.getMetadata\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"appName\": \"Player\", \"category\": \"Web browser\", \"url\": \"http://download.com/bundle1.tgz\", \"resources\": [ { \"key\": \"...\", \"value\": \"...\" } ], \"auxMetadata\": [ { \"key\": \"...\", \"value\": \"...\" } ] } } cancel method Cancel asynchronous request. Parameters Name Type Description params object ... params.handle string Operation handle Result Name Type Description result string Operation status Errors Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid handle ERROR_GENERAL Error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.cancel\", \"params\": { \"handle\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Success\" } getProgress method Estimated progress of a request. Parameters Name Type Description params object ... params.handle string Operation handle Result Name Type Description result integer Operation progress Errors Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid handle ERROR_GENERAL Error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.getProgress\", \"params\": { \"handle\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } lock method Lock an application. Parameters Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params?.reason string (optional) Reason for lock params?.owner string (optional) Owner of lock Result Name Type Description result object Struct holding handle result.handle string Operation handle Errors Message Description ERROR_TOO_MANY_REQUESTS LISA initialization in progress or other operation pending ERROR_WRONG_PARAMS Invalid params or app not unstalled ERROR_APP_UNINSTALLING App is currently being uninstalled ERROR_APP_LOCKED App is already locked Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.lock\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"reason\": \"active\", \"owner\": \"awc\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"handle\": \"...\" } } unlock method Unlock an application. Parameters Name Type Description params object ... params.handle string Operation handle Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_WRONG_HANDLE Wrong handle or app not locked anymore Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.unlock\", \"params\": { \"handle\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } getLockInfo method Get lock info. Parameters Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version Result Name Type Description result object Struct holding lock info result?.reason string (optional) Reason for lock result?.owner string (optional) Owner of lock Errors Message Description ERROR_WRONG_PARAMS Invalid params or app not unstalled ERROR_WRONG_HANDLE Wrong handle or app not locked anymore Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.getLockInfo\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"reason\": \"active\", \"owner\": \"awc\" } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LISA interface: LISA interface events: Notification Description operationStatus Notifies about currently pending operation status operationStatus notification Notifies about currently pending operation status. Description Register to this event to be notified about current state of the pending operation Parameters Name Type Description params object ... params.handle string Operation handle params.operation string Operation params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.status string Operation status params?.details string (optional) If error occurred this property contains details on what happened Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.register\", \"params\": { \"event\": \"operationStatus\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.operationStatus\", \"params\": { \"handle\": \"...\", \"operation\": \"Installing\", \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"status\": \"Success\", \"details\": \"...\" } }","title":"LISA API"},{"location":"api/LISAAPI/#lisa-api","text":"Version: 1.0.0 Status: LISA interface for Thunder framework. (Defined by LISA.json )","title":"LISA API"},{"location":"api/LISAAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"api/LISAAPI/#introduction","text":"","title":"Introduction"},{"location":"api/LISAAPI/#scope","text":"This document describes purpose and functionality of the LISA interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"api/LISAAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/LISAAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/LISAAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/LISAAPI/#description","text":"LISA JSON-RPC interface.","title":"Description"},{"location":"api/LISAAPI/#methods","text":"The following methods are provided by the LISA interface: LISA interface methods: Method Description install Download the application bundle uninstall Uninstall the application download Download arbitrary application resource file reset Delete persistent data stored locally getStorageDetails (read-only) Information on the storage usage getList Gets the list of installed applications setAuxMetadata Set an arbitrary metadata clearAuxMetadata Clears a single metadata, removing its key getMetadata Get application metadata cancel Cancel asynchronous request getProgress Estimated progress of a request lock Lock an application unlock Unlock an application getLockInfo Get lock info","title":"Methods"},{"location":"api/LISAAPI/#install-method","text":"Download the application bundle. Also see: operationStatus","title":"install method"},{"location":"api/LISAAPI/#parameters","text":"Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.url string Application url params.appName string Application name params.category string Application category","title":"Parameters"},{"location":"api/LISAAPI/#result","text":"Name Type Description result string Operation handle","title":"Result"},{"location":"api/LISAAPI/#errors","text":"Message Description ERROR_INPROGRESS LISA initialization in progress or other operation pending ERROR_BAD_REQUEST Invalid params ERROR_ILLEGAL_STATE App already installed","title":"Errors"},{"location":"api/LISAAPI/#example","text":"","title":"Example"},{"location":"api/LISAAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.install\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"url\": \"http://download.com/bundle1.tgz\", \"appName\": \"Player\", \"category\": \"Web browser\" } }","title":"Request"},{"location":"api/LISAAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Response"},{"location":"api/LISAAPI/#uninstall-method","text":"Uninstall the application. Also see: operationStatus","title":"uninstall method"},{"location":"api/LISAAPI/#parameters_1","text":"Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.uninstallType string Type of the uninstall to perform","title":"Parameters"},{"location":"api/LISAAPI/#result_1","text":"Name Type Description result string Operation handle","title":"Result"},{"location":"api/LISAAPI/#errors_1","text":"Message Description ERROR_INPROGRESS LISA initialization in progress or other operation pending ERROR_BAD_REQUEST Invalid params","title":"Errors"},{"location":"api/LISAAPI/#example_1","text":"","title":"Example"},{"location":"api/LISAAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.uninstall\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"uninstallType\": \"full\" } }","title":"Request"},{"location":"api/LISAAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Response"},{"location":"api/LISAAPI/#download-method","text":"Download arbitrary application resource file. Also see: operationStatus","title":"download method"},{"location":"api/LISAAPI/#parameters_2","text":"Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.resKey string Key to access given resource file from db entry params.resUrl string Url where to download a resource from","title":"Parameters"},{"location":"api/LISAAPI/#result_2","text":"Name Type Description result string Operation handle","title":"Result"},{"location":"api/LISAAPI/#errors_2","text":"Message Description ERROR_INPROGRESS LISA initialization in progress or other operation pending ERROR_BAD_REQUEST Invalid params","title":"Errors"},{"location":"api/LISAAPI/#example_2","text":"","title":"Example"},{"location":"api/LISAAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.download\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"resKey\": \"...\", \"resUrl\": \"...\" } }","title":"Request"},{"location":"api/LISAAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Response"},{"location":"api/LISAAPI/#reset-method","text":"Delete persistent data stored locally.","title":"reset method"},{"location":"api/LISAAPI/#parameters_3","text":"Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.resetType string Type of the reset to perform","title":"Parameters"},{"location":"api/LISAAPI/#result_3","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/LISAAPI/#errors_3","text":"Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params ERROR_GENERAL Filesystem Error","title":"Errors"},{"location":"api/LISAAPI/#example_3","text":"","title":"Example"},{"location":"api/LISAAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.reset\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"resetType\": \"full\" } }","title":"Request"},{"location":"api/LISAAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/LISAAPI/#getstoragedetails-method","text":"Information on the storage usage.","title":"getStorageDetails method"},{"location":"api/LISAAPI/#parameters_4","text":"Name Type Description params object ... params?.type string (optional) Application type (mime-type) params?.id string (optional) Application ID params?.version string (optional) Application version","title":"Parameters"},{"location":"api/LISAAPI/#result_4","text":"Name Type Description result object Storage payload - returned as GetStorageDetails method result result.apps object Storage entry - used in results result.apps.path string Path in local filesystem result.apps?.quotaKB string (optional) Number of used kilobytes of storage result.apps.usedKB string Number of used kilobytes of storage result.persistent object Storage entry - used in results result.persistent.path string Path in local filesystem result.persistent?.quotaKB string (optional) Number of used kilobytes of storage result.persistent.usedKB string Number of used kilobytes of storage","title":"Result"},{"location":"api/LISAAPI/#errors_4","text":"Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params ERROR_GENERAL Filesystem Error","title":"Errors"},{"location":"api/LISAAPI/#example_4","text":"","title":"Example"},{"location":"api/LISAAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.getStorageDetails\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\" } }","title":"Request"},{"location":"api/LISAAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"apps\": { \"path\": \"...\", \"quotaKB\": \"...\", \"usedKB\": \"...\" }, \"persistent\": { \"path\": \"...\", \"quotaKB\": \"...\", \"usedKB\": \"...\" } } }","title":"Response"},{"location":"api/LISAAPI/#getlist-method","text":"Gets the list of installed applications.","title":"getList method"},{"location":"api/LISAAPI/#parameters_5","text":"Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params?.appName string (optional) Application name params?.category string (optional) Application category","title":"Parameters"},{"location":"api/LISAAPI/#result_5","text":"Name Type Description result object Applications payload - returned as GetList method result result.apps array List of apps result.apps[#] object Application entry - used in results result.apps[#].id string Application ID result.apps[#].type string Application type (mime-type) result.apps[#].installed array List of installedApp result.apps[#].installed[#] object Installed application variant result.apps[#].installed[#].version string Application version result.apps[#].installed[#].appName string Application name result.apps[#].installed[#]?.category string (optional) Application category result.apps[#].installed[#].url string Application url","title":"Result"},{"location":"api/LISAAPI/#errors_5","text":"Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params","title":"Errors"},{"location":"api/LISAAPI/#example_5","text":"","title":"Example"},{"location":"api/LISAAPI/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.getList\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"appName\": \"Player\", \"category\": \"Web browser\" } }","title":"Request"},{"location":"api/LISAAPI/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"apps\": [ { \"id\": \"com.lgi.app\", \"type\": \"application/vnd.rdk-app.dac.native\", \"installed\": [ { \"version\": \"1.0\", \"appName\": \"Player\", \"category\": \"Web browser\", \"url\": \"http://download.com/bundle1.tgz\" } ] } ] } }","title":"Response"},{"location":"api/LISAAPI/#setauxmetadata-method","text":"Set an arbitrary metadata.","title":"setAuxMetadata method"},{"location":"api/LISAAPI/#parameters_6","text":"Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.key string Metadata key params.value string Metadata value","title":"Parameters"},{"location":"api/LISAAPI/#result_6","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/LISAAPI/#errors_6","text":"Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params ERROR_GENERAL Metadata Error","title":"Errors"},{"location":"api/LISAAPI/#example_6","text":"","title":"Example"},{"location":"api/LISAAPI/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.setAuxMetadata\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"key\": \"...\", \"value\": \"...\" } }","title":"Request"},{"location":"api/LISAAPI/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/LISAAPI/#clearauxmetadata-method","text":"Clears a single metadata, removing its key.","title":"clearAuxMetadata method"},{"location":"api/LISAAPI/#parameters_7","text":"Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.key string Metadata key","title":"Parameters"},{"location":"api/LISAAPI/#result_7","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/LISAAPI/#errors_7","text":"Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params ERROR_GENERAL Metadata Error","title":"Errors"},{"location":"api/LISAAPI/#example_7","text":"","title":"Example"},{"location":"api/LISAAPI/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.clearAuxMetadata\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"key\": \"...\" } }","title":"Request"},{"location":"api/LISAAPI/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/LISAAPI/#getmetadata-method","text":"Get application metadata.","title":"getMetadata method"},{"location":"api/LISAAPI/#parameters_8","text":"Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version","title":"Parameters"},{"location":"api/LISAAPI/#result_8","text":"Name Type Description result object Metadata payload - returned as GetMetadata method result result?.appName string (optional) Application name result?.category string (optional) Application category result?.url string (optional) Application url result.resources array List of key-value entries result.resources[#] object Struct holding key and value result.resources[#].key string Key property result.resources[#].value string Value property result.auxMetadata array List of key-value entries result.auxMetadata[#] object Struct holding key and value result.auxMetadata[#].key string Key property result.auxMetadata[#].value string Value property","title":"Result"},{"location":"api/LISAAPI/#errors_8","text":"Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid params","title":"Errors"},{"location":"api/LISAAPI/#example_8","text":"","title":"Example"},{"location":"api/LISAAPI/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.getMetadata\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\" } }","title":"Request"},{"location":"api/LISAAPI/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"appName\": \"Player\", \"category\": \"Web browser\", \"url\": \"http://download.com/bundle1.tgz\", \"resources\": [ { \"key\": \"...\", \"value\": \"...\" } ], \"auxMetadata\": [ { \"key\": \"...\", \"value\": \"...\" } ] } }","title":"Response"},{"location":"api/LISAAPI/#cancel-method","text":"Cancel asynchronous request.","title":"cancel method"},{"location":"api/LISAAPI/#parameters_9","text":"Name Type Description params object ... params.handle string Operation handle","title":"Parameters"},{"location":"api/LISAAPI/#result_9","text":"Name Type Description result string Operation status","title":"Result"},{"location":"api/LISAAPI/#errors_9","text":"Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid handle ERROR_GENERAL Error","title":"Errors"},{"location":"api/LISAAPI/#example_9","text":"","title":"Example"},{"location":"api/LISAAPI/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.cancel\", \"params\": { \"handle\": \"...\" } }","title":"Request"},{"location":"api/LISAAPI/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Success\" }","title":"Response"},{"location":"api/LISAAPI/#getprogress-method","text":"Estimated progress of a request.","title":"getProgress method"},{"location":"api/LISAAPI/#parameters_10","text":"Name Type Description params object ... params.handle string Operation handle","title":"Parameters"},{"location":"api/LISAAPI/#result_10","text":"Name Type Description result integer Operation progress","title":"Result"},{"location":"api/LISAAPI/#errors_10","text":"Message Description ERROR_INPROGRESS LISA initialization in progress ERROR_BAD_REQUEST Invalid handle ERROR_GENERAL Error","title":"Errors"},{"location":"api/LISAAPI/#example_10","text":"","title":"Example"},{"location":"api/LISAAPI/#request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.getProgress\", \"params\": { \"handle\": \"...\" } }","title":"Request"},{"location":"api/LISAAPI/#response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/LISAAPI/#lock-method","text":"Lock an application.","title":"lock method"},{"location":"api/LISAAPI/#parameters_11","text":"Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version params?.reason string (optional) Reason for lock params?.owner string (optional) Owner of lock","title":"Parameters"},{"location":"api/LISAAPI/#result_11","text":"Name Type Description result object Struct holding handle result.handle string Operation handle","title":"Result"},{"location":"api/LISAAPI/#errors_11","text":"Message Description ERROR_TOO_MANY_REQUESTS LISA initialization in progress or other operation pending ERROR_WRONG_PARAMS Invalid params or app not unstalled ERROR_APP_UNINSTALLING App is currently being uninstalled ERROR_APP_LOCKED App is already locked","title":"Errors"},{"location":"api/LISAAPI/#example_11","text":"","title":"Example"},{"location":"api/LISAAPI/#request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.lock\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"reason\": \"active\", \"owner\": \"awc\" } }","title":"Request"},{"location":"api/LISAAPI/#response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"handle\": \"...\" } }","title":"Response"},{"location":"api/LISAAPI/#unlock-method","text":"Unlock an application.","title":"unlock method"},{"location":"api/LISAAPI/#parameters_12","text":"Name Type Description params object ... params.handle string Operation handle","title":"Parameters"},{"location":"api/LISAAPI/#result_12","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/LISAAPI/#errors_12","text":"Message Description ERROR_WRONG_HANDLE Wrong handle or app not locked anymore","title":"Errors"},{"location":"api/LISAAPI/#example_12","text":"","title":"Example"},{"location":"api/LISAAPI/#request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.unlock\", \"params\": { \"handle\": \"...\" } }","title":"Request"},{"location":"api/LISAAPI/#response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/LISAAPI/#getlockinfo-method","text":"Get lock info.","title":"getLockInfo method"},{"location":"api/LISAAPI/#parameters_13","text":"Name Type Description params object ... params.type string Application type (mime-type) params.id string Application ID params.version string Application version","title":"Parameters"},{"location":"api/LISAAPI/#result_13","text":"Name Type Description result object Struct holding lock info result?.reason string (optional) Reason for lock result?.owner string (optional) Owner of lock","title":"Result"},{"location":"api/LISAAPI/#errors_13","text":"Message Description ERROR_WRONG_PARAMS Invalid params or app not unstalled ERROR_WRONG_HANDLE Wrong handle or app not locked anymore","title":"Errors"},{"location":"api/LISAAPI/#example_13","text":"","title":"Example"},{"location":"api/LISAAPI/#request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.getLockInfo\", \"params\": { \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\" } }","title":"Request"},{"location":"api/LISAAPI/#response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"reason\": \"active\", \"owner\": \"awc\" } }","title":"Response"},{"location":"api/LISAAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LISA interface: LISA interface events: Notification Description operationStatus Notifies about currently pending operation status","title":"Notifications"},{"location":"api/LISAAPI/#operationstatus-notification","text":"Notifies about currently pending operation status.","title":"operationStatus notification"},{"location":"api/LISAAPI/#description_1","text":"Register to this event to be notified about current state of the pending operation","title":"Description"},{"location":"api/LISAAPI/#parameters_14","text":"Name Type Description params object ... params.handle string Operation handle params.operation string Operation params.type string Application type (mime-type) params.id string Application ID params.version string Application version params.status string Operation status params?.details string (optional) If error occurred this property contains details on what happened","title":"Parameters"},{"location":"api/LISAAPI/#example_14","text":"","title":"Example"},{"location":"api/LISAAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LISA.1.register\", \"params\": { \"event\": \"operationStatus\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/LISAAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.operationStatus\", \"params\": { \"handle\": \"...\", \"operation\": \"Installing\", \"type\": \"application/vnd.rdk-app.dac.native\", \"id\": \"com.lgi.app\", \"version\": \"1.0\", \"status\": \"Success\", \"details\": \"...\" } }","title":"Message"},{"location":"api/LanguageTagAPI/","text":"LanguageTag API Version: 1.0.0 Status: LanguageTag interface for Thunder framework. (Defined with ILanguageTag in ILanguageTag.h ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the LanguageTag interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description LanguageTag JSON-RPC interface. Properties The following properties are provided by the LanguageTag interface: LanguageTag interface properties: Property Description language Current application user interface language tag language property Provides access to the current application user interface language tag. Value Name Type Description (property) string Language string as per RFC5646 Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LanguageTag.1.language\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"en\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LanguageTag.1.language\", \"params\": \"en\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LanguageTag interface: LanguageTag interface events: Notification Description languagechanged Notify that the Language tag has been changed languagechanged notification Notify that the Language tag has been changed. Parameters Name Type Description params string New LangauageTag value Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LanguageTag.1.register\", \"params\": { \"event\": \"languagechanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.languagechanged\", \"params\": \"...\" }","title":"LanguageTag API"},{"location":"api/LanguageTagAPI/#languagetag-api","text":"Version: 1.0.0 Status: LanguageTag interface for Thunder framework. (Defined with ILanguageTag in ILanguageTag.h )","title":"LanguageTag API"},{"location":"api/LanguageTagAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/LanguageTagAPI/#introduction","text":"","title":"Introduction"},{"location":"api/LanguageTagAPI/#scope","text":"This document describes purpose and functionality of the LanguageTag interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/LanguageTagAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/LanguageTagAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/LanguageTagAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/LanguageTagAPI/#description","text":"LanguageTag JSON-RPC interface.","title":"Description"},{"location":"api/LanguageTagAPI/#properties","text":"The following properties are provided by the LanguageTag interface: LanguageTag interface properties: Property Description language Current application user interface language tag","title":"Properties"},{"location":"api/LanguageTagAPI/#language-property","text":"Provides access to the current application user interface language tag.","title":"language property"},{"location":"api/LanguageTagAPI/#value","text":"Name Type Description (property) string Language string as per RFC5646","title":"Value"},{"location":"api/LanguageTagAPI/#example","text":"","title":"Example"},{"location":"api/LanguageTagAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LanguageTag.1.language\" }","title":"Get Request"},{"location":"api/LanguageTagAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"en\" }","title":"Get Response"},{"location":"api/LanguageTagAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LanguageTag.1.language\", \"params\": \"en\" }","title":"Set Request"},{"location":"api/LanguageTagAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/LanguageTagAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LanguageTag interface: LanguageTag interface events: Notification Description languagechanged Notify that the Language tag has been changed","title":"Notifications"},{"location":"api/LanguageTagAPI/#languagechanged-notification","text":"Notify that the Language tag has been changed.","title":"languagechanged notification"},{"location":"api/LanguageTagAPI/#parameters","text":"Name Type Description params string New LangauageTag value","title":"Parameters"},{"location":"api/LanguageTagAPI/#example_1","text":"","title":"Example"},{"location":"api/LanguageTagAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LanguageTag.1.register\", \"params\": { \"event\": \"languagechanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/LanguageTagAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.languagechanged\", \"params\": \"...\" }","title":"Message"},{"location":"api/LocationSyncAPI/","text":"Location Sync API Version: 1.0.0 Status: LocationSync interface for Thunder framework. (Defined by LocationSync.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the LocationSync interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Location Sync JSON-RPC interface. Methods The following methods are provided by the LocationSync interface: LocationSync interface methods: Method Description sync Synchronizes the location sync method Synchronizes the location. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to synchdonize the location ERROR_UNAVAILABLE Unavailable locator ERROR_INCORRECT_URL Incorrect URL ERROR_INPROGRESS Probing in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.sync\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the LocationSync interface: LocationSync interface properties: Property Description location (read-only) Location information location property Provides access to the location information. This property is read-only . Value Result Name Type Description result object Location information result.city string City name result.country string Country name result.region string Region name result.timezone string Time zone information result.publicip string Public IP Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.location\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"city\": \"Wroclaw\", \"country\": \"Poland\", \"region\": \"Wroclaw\", \"timezone\": \"CET-1CEST,M3.5.0,M10.5.0/3\", \"publicip\": \"78.11.117.118\" } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LocationSync interface: LocationSync interface events: Notification Description locationchange Signals a location change locationchange notification Signals a location change. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.register\", \"params\": { \"event\": \"locationchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.locationchange\" }","title":"Location Sync API"},{"location":"api/LocationSyncAPI/#location-sync-api","text":"Version: 1.0.0 Status: LocationSync interface for Thunder framework. (Defined by LocationSync.json )","title":"Location Sync API"},{"location":"api/LocationSyncAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/LocationSyncAPI/#introduction","text":"","title":"Introduction"},{"location":"api/LocationSyncAPI/#scope","text":"This document describes purpose and functionality of the LocationSync interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/LocationSyncAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/LocationSyncAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/LocationSyncAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/LocationSyncAPI/#description","text":"Location Sync JSON-RPC interface.","title":"Description"},{"location":"api/LocationSyncAPI/#methods","text":"The following methods are provided by the LocationSync interface: LocationSync interface methods: Method Description sync Synchronizes the location","title":"Methods"},{"location":"api/LocationSyncAPI/#sync-method","text":"Synchronizes the location.","title":"sync method"},{"location":"api/LocationSyncAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/LocationSyncAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/LocationSyncAPI/#errors","text":"Message Description ERROR_GENERAL Failed to synchdonize the location ERROR_UNAVAILABLE Unavailable locator ERROR_INCORRECT_URL Incorrect URL ERROR_INPROGRESS Probing in progress","title":"Errors"},{"location":"api/LocationSyncAPI/#example","text":"","title":"Example"},{"location":"api/LocationSyncAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.sync\" }","title":"Request"},{"location":"api/LocationSyncAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/LocationSyncAPI/#properties","text":"The following properties are provided by the LocationSync interface: LocationSync interface properties: Property Description location (read-only) Location information","title":"Properties"},{"location":"api/LocationSyncAPI/#location-property","text":"Provides access to the location information. This property is read-only .","title":"location property"},{"location":"api/LocationSyncAPI/#value","text":"","title":"Value"},{"location":"api/LocationSyncAPI/#result_1","text":"Name Type Description result object Location information result.city string City name result.country string Country name result.region string Region name result.timezone string Time zone information result.publicip string Public IP","title":"Result"},{"location":"api/LocationSyncAPI/#example_1","text":"","title":"Example"},{"location":"api/LocationSyncAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.location\" }","title":"Get Request"},{"location":"api/LocationSyncAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"city\": \"Wroclaw\", \"country\": \"Poland\", \"region\": \"Wroclaw\", \"timezone\": \"CET-1CEST,M3.5.0,M10.5.0/3\", \"publicip\": \"78.11.117.118\" } }","title":"Get Response"},{"location":"api/LocationSyncAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LocationSync interface: LocationSync interface events: Notification Description locationchange Signals a location change","title":"Notifications"},{"location":"api/LocationSyncAPI/#locationchange-notification","text":"Signals a location change.","title":"locationchange notification"},{"location":"api/LocationSyncAPI/#parameters_1","text":"This notification carries no parameters.","title":"Parameters"},{"location":"api/LocationSyncAPI/#example_2","text":"","title":"Example"},{"location":"api/LocationSyncAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.register\", \"params\": { \"event\": \"locationchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/LocationSyncAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.locationchange\" }","title":"Message"},{"location":"api/MathAPI/","text":"Math API Version: 1.0.0 Status: Math interface for Thunder framework. (Defined with IMath in IMath.h ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the Math interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Math JSON-RPC interface. Methods The following methods are provided by the Math interface: Math interface methods: Method Description add Perform addition on given inputs sub Perform subtraction on given inputs add method Perform addition on given inputs. Parameters Name Type Description params object ... params.a integer First input params.b integer Second input Result Name Type Description result integer ... Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Math.1.add\", \"params\": { \"a\": 0, \"b\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } sub method Perform subtraction on given inputs. Parameters Name Type Description params object ... params.a integer First input params.b integer Second input Result Name Type Description result integer ... Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Math.1.sub\", \"params\": { \"a\": 0, \"b\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Math API"},{"location":"api/MathAPI/#math-api","text":"Version: 1.0.0 Status: Math interface for Thunder framework. (Defined with IMath in IMath.h )","title":"Math API"},{"location":"api/MathAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/MathAPI/#introduction","text":"","title":"Introduction"},{"location":"api/MathAPI/#scope","text":"This document describes purpose and functionality of the Math interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/MathAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/MathAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/MathAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/MathAPI/#description","text":"Math JSON-RPC interface.","title":"Description"},{"location":"api/MathAPI/#methods","text":"The following methods are provided by the Math interface: Math interface methods: Method Description add Perform addition on given inputs sub Perform subtraction on given inputs","title":"Methods"},{"location":"api/MathAPI/#add-method","text":"Perform addition on given inputs.","title":"add method"},{"location":"api/MathAPI/#parameters","text":"Name Type Description params object ... params.a integer First input params.b integer Second input","title":"Parameters"},{"location":"api/MathAPI/#result","text":"Name Type Description result integer ...","title":"Result"},{"location":"api/MathAPI/#example","text":"","title":"Example"},{"location":"api/MathAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Math.1.add\", \"params\": { \"a\": 0, \"b\": 0 } }","title":"Request"},{"location":"api/MathAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/MathAPI/#sub-method","text":"Perform subtraction on given inputs.","title":"sub method"},{"location":"api/MathAPI/#parameters_1","text":"Name Type Description params object ... params.a integer First input params.b integer Second input","title":"Parameters"},{"location":"api/MathAPI/#result_1","text":"Name Type Description result integer ...","title":"Result"},{"location":"api/MathAPI/#example_1","text":"","title":"Example"},{"location":"api/MathAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Math.1.sub\", \"params\": { \"a\": 0, \"b\": 0 } }","title":"Request"},{"location":"api/MathAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/MessageControlAPI/","text":"MessageControl API Version: 1.0.0 Status: MessageControl interface for Thunder framework. (Defined with IMessageControl in IMessageControl.h ) Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the MessageControl interface (version 1.0.0). It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description MessageControl JSON-RPC interface. Methods The following methods are provided by the MessageControl interface: MessageControl interface methods: Method Description enable Enables/disables a message control enable method Enables/disables a message control. Parameters Name Type Description params object ... params.type string Message type (must be one of the following: Invalid, Logging, OperationalStream, Reporting, Tracing ) params.category string Name of the message category params.module string Name of the module the message is originating from params.enabled boolean Denotes if control should be enabled (true) or disabled (false) Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.enable\", \"params\": { \"type\": \"Invalid\", \"category\": \"Information\", \"module\": \"Plugin_BluetoothControl\", \"enabled\": false } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the MessageControl interface: MessageControl interface properties: Property Description modules (read-only) Retrieves a list of current message modules controls (read-only) Retrieves a list of current message controls for a specific module modules property Provides access to the retrieves a list of current message modules. This property is read-only . Value Result Name Type Description result array Retrieves a list of current message modules result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.modules\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } controls property Provides access to the retrieves a list of current message controls for a specific module. This property is read-only . Value The module argument shall be passed as the index to the property, e.g. MessageControl.1.controls@<module> . Result Name Type Description result array Retrieves a list of current message controls for a specific module result[#] object ... result[#].type string Type of message (must be one of the following: Invalid, Logging, OperationalStream, Reporting, Tracing ) result[#].category string Name of the message category result[#].module string Name of the module the message is originating from result[#].enabled boolean Denotes if the control is enabled (true) or disabled (false) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.controls@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"Invalid\", \"category\": \"Information\", \"module\": \"Plugin_BluetoothControl\", \"enabled\": false } ] }","title":"MessageControl API"},{"location":"api/MessageControlAPI/#messagecontrol-api","text":"Version: 1.0.0 Status: MessageControl interface for Thunder framework. (Defined with IMessageControl in IMessageControl.h )","title":"MessageControl API"},{"location":"api/MessageControlAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"api/MessageControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/MessageControlAPI/#scope","text":"This document describes purpose and functionality of the MessageControl interface (version 1.0.0). It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"api/MessageControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/MessageControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/MessageControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/MessageControlAPI/#description","text":"MessageControl JSON-RPC interface.","title":"Description"},{"location":"api/MessageControlAPI/#methods","text":"The following methods are provided by the MessageControl interface: MessageControl interface methods: Method Description enable Enables/disables a message control","title":"Methods"},{"location":"api/MessageControlAPI/#enable-method","text":"Enables/disables a message control.","title":"enable method"},{"location":"api/MessageControlAPI/#parameters","text":"Name Type Description params object ... params.type string Message type (must be one of the following: Invalid, Logging, OperationalStream, Reporting, Tracing ) params.category string Name of the message category params.module string Name of the module the message is originating from params.enabled boolean Denotes if control should be enabled (true) or disabled (false)","title":"Parameters"},{"location":"api/MessageControlAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/MessageControlAPI/#example","text":"","title":"Example"},{"location":"api/MessageControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.enable\", \"params\": { \"type\": \"Invalid\", \"category\": \"Information\", \"module\": \"Plugin_BluetoothControl\", \"enabled\": false } }","title":"Request"},{"location":"api/MessageControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/MessageControlAPI/#properties","text":"The following properties are provided by the MessageControl interface: MessageControl interface properties: Property Description modules (read-only) Retrieves a list of current message modules controls (read-only) Retrieves a list of current message controls for a specific module","title":"Properties"},{"location":"api/MessageControlAPI/#modules-property","text":"Provides access to the retrieves a list of current message modules. This property is read-only .","title":"modules property"},{"location":"api/MessageControlAPI/#value","text":"","title":"Value"},{"location":"api/MessageControlAPI/#result_1","text":"Name Type Description result array Retrieves a list of current message modules result[#] string ...","title":"Result"},{"location":"api/MessageControlAPI/#example_1","text":"","title":"Example"},{"location":"api/MessageControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.modules\" }","title":"Get Request"},{"location":"api/MessageControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"api/MessageControlAPI/#controls-property","text":"Provides access to the retrieves a list of current message controls for a specific module. This property is read-only .","title":"controls property"},{"location":"api/MessageControlAPI/#value_1","text":"The module argument shall be passed as the index to the property, e.g. MessageControl.1.controls@<module> .","title":"Value"},{"location":"api/MessageControlAPI/#result_2","text":"Name Type Description result array Retrieves a list of current message controls for a specific module result[#] object ... result[#].type string Type of message (must be one of the following: Invalid, Logging, OperationalStream, Reporting, Tracing ) result[#].category string Name of the message category result[#].module string Name of the module the message is originating from result[#].enabled boolean Denotes if the control is enabled (true) or disabled (false)","title":"Result"},{"location":"api/MessageControlAPI/#example_2","text":"","title":"Example"},{"location":"api/MessageControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.controls@xyz\" }","title":"Get Request"},{"location":"api/MessageControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"Invalid\", \"category\": \"Information\", \"module\": \"Plugin_BluetoothControl\", \"enabled\": false } ] }","title":"Get Response"},{"location":"api/MessengerAPI/","text":"Messenger API Version: 1.0.0 Status: Messenger interface for Thunder framework. (Defined with IMessenger in IMessenger.h ) Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the Messenger interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Messenger JSON-RPC interface. Methods The following methods are provided by the Messenger interface: Messenger interface methods: Method Description join Joins a messaging room leave Leaves a messaging room send Sends a message to a messaging room join method Joins a messaging room. Description If the specified room does not exist, then it will be created. Parameters Name Type Description params object ... params.room string Name of the room to join params.user string Name of ther user to join as params?.secure string (optional) Denotes if the room is secure (by default not secure) (must be one of the following: insecure, secure ) params?.acl array (optional) List of URL origins with possible wildcards params?.acl[#] string (optional) ... Result Name Type Description result string Token for accessing the room (unique for a user) Errors Message Description ERROR_ILLEGAL_STATE User name is already taken (i.e. the user has already joined the room) ERROR_BAD_REQUEST User name or room name is invalid ERROR_PRIVILEGED_REQUEST Room security errors Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.join\", \"params\": { \"room\": \"Lounge\", \"user\": \"Bob\", \"secure\": \"insecure\", \"acl\": [ \"...\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1e217990dd1cd4f66124\" } leave method Leaves a messaging room. Description The room ID becomes invalid after this call. If there are no more users, the room will be destroyed and related resources freed. Parameters Name Type Description params object ... params.roomid string Token of the room to leave Result Name Type Description result null Always null Errors Message Description ERROR_UNKNOWN_KEY The room token is invalid Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.leave\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } send method Sends a message to a messaging room. Parameters Name Type Description params object ... params.roomid string Token of the room to send the message to params.message string Contents of the message to send Result Name Type Description result null Always null Errors Message Description ERROR_UNKNOWN_KEY The room token is invalid Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.send\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\", \"message\": \"Hello!\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Messenger interface: Messenger interface events: Notification Description roomupdate Notifies of room status changes userupdate Notifies of user status changes message Notifies of messages sent the the room roomupdate notification Notifies of room status changes. Description Immediately after registering to this notification the listener will sequentially receive updates of all rooms that have been created so far. If applicable, this notification may be sent out during registration, reflecting the current status. Parameters Name Type Description params object ... params.room string Name of the room that has changed its status params.action string New room status (must be one of the following: created, destroyed ) params.secure string Denotes if the room is secure (must be one of the following: insecure, secure ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"roomupdate\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.roomupdate\", \"params\": { \"room\": \"Lounge\", \"action\": \"created\", \"secure\": \"insecure\" } } userupdate notification Notifies of user status changes. Description Immediately after registering to this notification the listener will sequentially receive updates of all users that have joined the room so far. If applicable, this notification may be sent out during registration, reflecting the current status. Parameters Name Type Description params object ... params.user string Name of the user that has changed its status params.action string New user status (must be one of the following: joined, left ) The roomId argument will be passed within the designator, e.g. 1e217990dd1cd4f66124.client.userupdate . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"userupdate\", \"id\": \"1e217990dd1cd4f66124.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.userupdate\", \"params\": { \"user\": \"Bob\", \"action\": \"joined\" } } message notification Notifies of messages sent the the room. Parameters Name Type Description params object ... params.user string Name of the user that has sent the message params.message string Contents of the sent message The roomId argument will be passed within the designator, e.g. 1e217990dd1cd4f66124.client.message . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"message\", \"id\": \"1e217990dd1cd4f66124.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.message\", \"params\": { \"user\": \"Bob\", \"message\": \"Hello!\" } }","title":"Messenger API"},{"location":"api/MessengerAPI/#messenger-api","text":"Version: 1.0.0 Status: Messenger interface for Thunder framework. (Defined with IMessenger in IMessenger.h )","title":"Messenger API"},{"location":"api/MessengerAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"api/MessengerAPI/#introduction","text":"","title":"Introduction"},{"location":"api/MessengerAPI/#scope","text":"This document describes purpose and functionality of the Messenger interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"api/MessengerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/MessengerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/MessengerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/MessengerAPI/#description","text":"Messenger JSON-RPC interface.","title":"Description"},{"location":"api/MessengerAPI/#methods","text":"The following methods are provided by the Messenger interface: Messenger interface methods: Method Description join Joins a messaging room leave Leaves a messaging room send Sends a message to a messaging room","title":"Methods"},{"location":"api/MessengerAPI/#join-method","text":"Joins a messaging room.","title":"join method"},{"location":"api/MessengerAPI/#description_1","text":"If the specified room does not exist, then it will be created.","title":"Description"},{"location":"api/MessengerAPI/#parameters","text":"Name Type Description params object ... params.room string Name of the room to join params.user string Name of ther user to join as params?.secure string (optional) Denotes if the room is secure (by default not secure) (must be one of the following: insecure, secure ) params?.acl array (optional) List of URL origins with possible wildcards params?.acl[#] string (optional) ...","title":"Parameters"},{"location":"api/MessengerAPI/#result","text":"Name Type Description result string Token for accessing the room (unique for a user)","title":"Result"},{"location":"api/MessengerAPI/#errors","text":"Message Description ERROR_ILLEGAL_STATE User name is already taken (i.e. the user has already joined the room) ERROR_BAD_REQUEST User name or room name is invalid ERROR_PRIVILEGED_REQUEST Room security errors","title":"Errors"},{"location":"api/MessengerAPI/#example","text":"","title":"Example"},{"location":"api/MessengerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.join\", \"params\": { \"room\": \"Lounge\", \"user\": \"Bob\", \"secure\": \"insecure\", \"acl\": [ \"...\" ] } }","title":"Request"},{"location":"api/MessengerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1e217990dd1cd4f66124\" }","title":"Response"},{"location":"api/MessengerAPI/#leave-method","text":"Leaves a messaging room.","title":"leave method"},{"location":"api/MessengerAPI/#description_2","text":"The room ID becomes invalid after this call. If there are no more users, the room will be destroyed and related resources freed.","title":"Description"},{"location":"api/MessengerAPI/#parameters_1","text":"Name Type Description params object ... params.roomid string Token of the room to leave","title":"Parameters"},{"location":"api/MessengerAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/MessengerAPI/#errors_1","text":"Message Description ERROR_UNKNOWN_KEY The room token is invalid","title":"Errors"},{"location":"api/MessengerAPI/#example_1","text":"","title":"Example"},{"location":"api/MessengerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.leave\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\" } }","title":"Request"},{"location":"api/MessengerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/MessengerAPI/#send-method","text":"Sends a message to a messaging room.","title":"send method"},{"location":"api/MessengerAPI/#parameters_2","text":"Name Type Description params object ... params.roomid string Token of the room to send the message to params.message string Contents of the message to send","title":"Parameters"},{"location":"api/MessengerAPI/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/MessengerAPI/#errors_2","text":"Message Description ERROR_UNKNOWN_KEY The room token is invalid","title":"Errors"},{"location":"api/MessengerAPI/#example_2","text":"","title":"Example"},{"location":"api/MessengerAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.send\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\", \"message\": \"Hello!\" } }","title":"Request"},{"location":"api/MessengerAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/MessengerAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Messenger interface: Messenger interface events: Notification Description roomupdate Notifies of room status changes userupdate Notifies of user status changes message Notifies of messages sent the the room","title":"Notifications"},{"location":"api/MessengerAPI/#roomupdate-notification","text":"Notifies of room status changes.","title":"roomupdate notification"},{"location":"api/MessengerAPI/#description_3","text":"Immediately after registering to this notification the listener will sequentially receive updates of all rooms that have been created so far. If applicable, this notification may be sent out during registration, reflecting the current status.","title":"Description"},{"location":"api/MessengerAPI/#parameters_3","text":"Name Type Description params object ... params.room string Name of the room that has changed its status params.action string New room status (must be one of the following: created, destroyed ) params.secure string Denotes if the room is secure (must be one of the following: insecure, secure )","title":"Parameters"},{"location":"api/MessengerAPI/#example_3","text":"","title":"Example"},{"location":"api/MessengerAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"roomupdate\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/MessengerAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.roomupdate\", \"params\": { \"room\": \"Lounge\", \"action\": \"created\", \"secure\": \"insecure\" } }","title":"Message"},{"location":"api/MessengerAPI/#userupdate-notification","text":"Notifies of user status changes.","title":"userupdate notification"},{"location":"api/MessengerAPI/#description_4","text":"Immediately after registering to this notification the listener will sequentially receive updates of all users that have joined the room so far. If applicable, this notification may be sent out during registration, reflecting the current status.","title":"Description"},{"location":"api/MessengerAPI/#parameters_4","text":"Name Type Description params object ... params.user string Name of the user that has changed its status params.action string New user status (must be one of the following: joined, left ) The roomId argument will be passed within the designator, e.g. 1e217990dd1cd4f66124.client.userupdate .","title":"Parameters"},{"location":"api/MessengerAPI/#example_4","text":"","title":"Example"},{"location":"api/MessengerAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"userupdate\", \"id\": \"1e217990dd1cd4f66124.client\" } }","title":"Registration"},{"location":"api/MessengerAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.userupdate\", \"params\": { \"user\": \"Bob\", \"action\": \"joined\" } }","title":"Message"},{"location":"api/MessengerAPI/#message-notification","text":"Notifies of messages sent the the room.","title":"message notification"},{"location":"api/MessengerAPI/#parameters_5","text":"Name Type Description params object ... params.user string Name of the user that has sent the message params.message string Contents of the sent message The roomId argument will be passed within the designator, e.g. 1e217990dd1cd4f66124.client.message .","title":"Parameters"},{"location":"api/MessengerAPI/#example_5","text":"","title":"Example"},{"location":"api/MessengerAPI/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"message\", \"id\": \"1e217990dd1cd4f66124.client\" } }","title":"Registration"},{"location":"api/MessengerAPI/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.message\", \"params\": { \"user\": \"Bob\", \"message\": \"Hello!\" } }","title":"Message"},{"location":"api/MonitorAPI/","text":"Monitor API Version: 1.0.0 Status: Monitor interface for Thunder framework. (Defined by Monitor.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Monitor interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Monitor JSON-RPC interface. Methods The following methods are provided by the Monitor interface: Monitor interface methods: Method Description restartlimits Sets new restart limits for a service resetstats Resets memory and process statistics for a single service watched by the Monitor restartlimits method Sets new restart limits for a service. Parameters Name Type Description params object ... params.callsign string The callsign of a service to reset measurements snapshot of params.restart object Restart limits for failures applying to the service params.restart.limit integer Maximum number or restarts to be attempted params.restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed Result Name Type Description result null Always null (default: None ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.restartlimits\", \"params\": { \"callsign\": \"WebServer\", \"restart\": { \"limit\": 3, \"window\": 60 } } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } resetstats method Resets memory and process statistics for a single service watched by the Monitor. Parameters Name Type Description params object ... params.callsign string The callsign of a service to reset statistics of Result Name Type Description result object Measurements for the service before reset result.measurements object Measurements for the service result.measurements.resident object Resident memory measurement result.measurements.resident.min integer Minimal value measured result.measurements.resident.max integer Maximal value measured result.measurements.resident.average integer Average of all measurements result.measurements.resident.last integer Last measured value result.measurements.allocated object Allocated memory measurement result.measurements.allocated.min integer Minimal value measured result.measurements.allocated.max integer Maximal value measured result.measurements.allocated.average integer Average of all measurements result.measurements.allocated.last integer Last measured value result.measurements.shared object Shared memory measurement result.measurements.shared.min integer Minimal value measured result.measurements.shared.max integer Maximal value measured result.measurements.shared.average integer Average of all measurements result.measurements.shared.last integer Last measured value result.measurements.process object Processes measurement result.measurements.process.min integer Minimal value measured result.measurements.process.max integer Maximal value measured result.measurements.process.average integer Average of all measurements result.measurements.process.last integer Last measured value result.measurements.operational boolean Whether the service is up and running result.measurements.count integer Number of measurements result.observable string A callsign of the watched service result.restart object Restart limits for failures applying to the service result.restart.limit integer Maximum number or restarts to be attempted result.restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.resetstats\", \"params\": { \"callsign\": \"WebServer\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } } Properties The following properties are provided by the Monitor interface: Monitor interface properties: Property Description status (read-only) Service statistics status property Provides access to the service statistics. This property is read-only . Value The callsign argument shall be passed as the index to the property, e.g. Monitor.1.status@<callsign> . If omitted then all observed objects will be returned on read. Result Name Type Description result array Service statistics result[#] object ... result[#].measurements object Measurements for the service result[#].measurements.resident object Resident memory measurement result[#].measurements.resident.min integer Minimal value measured result[#].measurements.resident.max integer Maximal value measured result[#].measurements.resident.average integer Average of all measurements result[#].measurements.resident.last integer Last measured value result[#].measurements.allocated object Allocated memory measurement result[#].measurements.allocated.min integer Minimal value measured result[#].measurements.allocated.max integer Maximal value measured result[#].measurements.allocated.average integer Average of all measurements result[#].measurements.allocated.last integer Last measured value result[#].measurements.shared object Shared memory measurement result[#].measurements.shared.min integer Minimal value measured result[#].measurements.shared.max integer Maximal value measured result[#].measurements.shared.average integer Average of all measurements result[#].measurements.shared.last integer Last measured value result[#].measurements.process object Processes measurement result[#].measurements.process.min integer Minimal value measured result[#].measurements.process.max integer Maximal value measured result[#].measurements.process.average integer Average of all measurements result[#].measurements.process.last integer Last measured value result[#].measurements.operational boolean Whether the service is up and running result[#].measurements.count integer Number of measurements result[#].observable string A callsign of the watched service result[#].restart object Restart limits for failures applying to the service result[#].restart.limit integer Maximum number or restarts to be attempted result[#].restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.status@WebServer\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } ] } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Monitor interface: Monitor interface events: Notification Description action Signals an action taken by the Monitor action notification Signals an action taken by the Monitor. Parameters Name Type Description params object ... params.callsign string Callsign of the service the Monitor acted upon params.action string The action executed by the Monitor on a service. One of: \"Activate\", \"Deactivate\", \"StoppedRestarting\" params.reason string A message describing the reason the action was taken Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.register\", \"params\": { \"event\": \"action\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.action\", \"params\": { \"callsign\": \"WebServer\", \"action\": \"Deactivate\", \"reason\": \"EXCEEDED_MEMORY\" } }","title":"Monitor API"},{"location":"api/MonitorAPI/#monitor-api","text":"Version: 1.0.0 Status: Monitor interface for Thunder framework. (Defined by Monitor.json )","title":"Monitor API"},{"location":"api/MonitorAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/MonitorAPI/#introduction","text":"","title":"Introduction"},{"location":"api/MonitorAPI/#scope","text":"This document describes purpose and functionality of the Monitor interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/MonitorAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/MonitorAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/MonitorAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/MonitorAPI/#description","text":"Monitor JSON-RPC interface.","title":"Description"},{"location":"api/MonitorAPI/#methods","text":"The following methods are provided by the Monitor interface: Monitor interface methods: Method Description restartlimits Sets new restart limits for a service resetstats Resets memory and process statistics for a single service watched by the Monitor","title":"Methods"},{"location":"api/MonitorAPI/#restartlimits-method","text":"Sets new restart limits for a service.","title":"restartlimits method"},{"location":"api/MonitorAPI/#parameters","text":"Name Type Description params object ... params.callsign string The callsign of a service to reset measurements snapshot of params.restart object Restart limits for failures applying to the service params.restart.limit integer Maximum number or restarts to be attempted params.restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed","title":"Parameters"},{"location":"api/MonitorAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/MonitorAPI/#example","text":"","title":"Example"},{"location":"api/MonitorAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.restartlimits\", \"params\": { \"callsign\": \"WebServer\", \"restart\": { \"limit\": 3, \"window\": 60 } } }","title":"Request"},{"location":"api/MonitorAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/MonitorAPI/#resetstats-method","text":"Resets memory and process statistics for a single service watched by the Monitor.","title":"resetstats method"},{"location":"api/MonitorAPI/#parameters_1","text":"Name Type Description params object ... params.callsign string The callsign of a service to reset statistics of","title":"Parameters"},{"location":"api/MonitorAPI/#result_1","text":"Name Type Description result object Measurements for the service before reset result.measurements object Measurements for the service result.measurements.resident object Resident memory measurement result.measurements.resident.min integer Minimal value measured result.measurements.resident.max integer Maximal value measured result.measurements.resident.average integer Average of all measurements result.measurements.resident.last integer Last measured value result.measurements.allocated object Allocated memory measurement result.measurements.allocated.min integer Minimal value measured result.measurements.allocated.max integer Maximal value measured result.measurements.allocated.average integer Average of all measurements result.measurements.allocated.last integer Last measured value result.measurements.shared object Shared memory measurement result.measurements.shared.min integer Minimal value measured result.measurements.shared.max integer Maximal value measured result.measurements.shared.average integer Average of all measurements result.measurements.shared.last integer Last measured value result.measurements.process object Processes measurement result.measurements.process.min integer Minimal value measured result.measurements.process.max integer Maximal value measured result.measurements.process.average integer Average of all measurements result.measurements.process.last integer Last measured value result.measurements.operational boolean Whether the service is up and running result.measurements.count integer Number of measurements result.observable string A callsign of the watched service result.restart object Restart limits for failures applying to the service result.restart.limit integer Maximum number or restarts to be attempted result.restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed","title":"Result"},{"location":"api/MonitorAPI/#example_1","text":"","title":"Example"},{"location":"api/MonitorAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.resetstats\", \"params\": { \"callsign\": \"WebServer\" } }","title":"Request"},{"location":"api/MonitorAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } }","title":"Response"},{"location":"api/MonitorAPI/#properties","text":"The following properties are provided by the Monitor interface: Monitor interface properties: Property Description status (read-only) Service statistics","title":"Properties"},{"location":"api/MonitorAPI/#status-property","text":"Provides access to the service statistics. This property is read-only .","title":"status property"},{"location":"api/MonitorAPI/#value","text":"The callsign argument shall be passed as the index to the property, e.g. Monitor.1.status@<callsign> . If omitted then all observed objects will be returned on read.","title":"Value"},{"location":"api/MonitorAPI/#result_2","text":"Name Type Description result array Service statistics result[#] object ... result[#].measurements object Measurements for the service result[#].measurements.resident object Resident memory measurement result[#].measurements.resident.min integer Minimal value measured result[#].measurements.resident.max integer Maximal value measured result[#].measurements.resident.average integer Average of all measurements result[#].measurements.resident.last integer Last measured value result[#].measurements.allocated object Allocated memory measurement result[#].measurements.allocated.min integer Minimal value measured result[#].measurements.allocated.max integer Maximal value measured result[#].measurements.allocated.average integer Average of all measurements result[#].measurements.allocated.last integer Last measured value result[#].measurements.shared object Shared memory measurement result[#].measurements.shared.min integer Minimal value measured result[#].measurements.shared.max integer Maximal value measured result[#].measurements.shared.average integer Average of all measurements result[#].measurements.shared.last integer Last measured value result[#].measurements.process object Processes measurement result[#].measurements.process.min integer Minimal value measured result[#].measurements.process.max integer Maximal value measured result[#].measurements.process.average integer Average of all measurements result[#].measurements.process.last integer Last measured value result[#].measurements.operational boolean Whether the service is up and running result[#].measurements.count integer Number of measurements result[#].observable string A callsign of the watched service result[#].restart object Restart limits for failures applying to the service result[#].restart.limit integer Maximum number or restarts to be attempted result[#].restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed","title":"Result"},{"location":"api/MonitorAPI/#example_2","text":"","title":"Example"},{"location":"api/MonitorAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.status@WebServer\" }","title":"Get Request"},{"location":"api/MonitorAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } ] }","title":"Get Response"},{"location":"api/MonitorAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Monitor interface: Monitor interface events: Notification Description action Signals an action taken by the Monitor","title":"Notifications"},{"location":"api/MonitorAPI/#action-notification","text":"Signals an action taken by the Monitor.","title":"action notification"},{"location":"api/MonitorAPI/#parameters_2","text":"Name Type Description params object ... params.callsign string Callsign of the service the Monitor acted upon params.action string The action executed by the Monitor on a service. One of: \"Activate\", \"Deactivate\", \"StoppedRestarting\" params.reason string A message describing the reason the action was taken","title":"Parameters"},{"location":"api/MonitorAPI/#example_3","text":"","title":"Example"},{"location":"api/MonitorAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.register\", \"params\": { \"event\": \"action\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/MonitorAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.action\", \"params\": { \"callsign\": \"WebServer\", \"action\": \"Deactivate\", \"reason\": \"EXCEEDED_MEMORY\" } }","title":"Message"},{"location":"api/NetflixAPI/","text":"Netflix API Version: 1.0.0 Status: Netflix interface for Thunder framework. (Defined by Netflix.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Netflix interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Netflix JSON-RPC interface. Methods The following methods are provided by the Netflix interface: Netflix interface methods: Method Description factoryreset deprecated Performs a reset to factory defaults systemcommand Sends a system command to Netflix factoryreset method Performs a reset to factory defaults. factoryreset is an alternative name for this method. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Netflix is unavailable Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.factoryreset\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } systemcommand method Sends a system command to Netflix. Parameters Name Type Description params object ... params.command string Command to send to Netflix Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Netflix is unavailable ERROR_UNKNOWN_KEY Unknown command Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.systemcommand\", \"params\": { \"command\": \"exit\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Netflix interface: Netflix interface properties: Property Description esn deprecated (read-only) ESN value visibility deprecated (write-only) Current Netflix visibility StateControl interface properties: Property Description state Running state of the service esn property Provides access to the ESN value. This property is read-only . esn is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Result Name Type Description result string ESN value Errors Message Description ERROR_UNAVAILABLE Netflix is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.esn\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DADDAUFV2=00000000000000000000000000000001\" } visibility property Provides access to the current Netflix visibility. This property is write-only . visibility is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Also see: visibilitychange Value Name Type Description (property) string Current Netflix visibility Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service Result Name Type Description result string Running state of the service Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Netflix interface: Netflix interface events: Notification Description playbackchange Signals playback status change StateControl interface events: Notification Description statechange Signals a state change of the service playbackchange notification Signals playback status change. Parameters Name Type Description params object ... params.playing boolean Determines if the Netflix is in playing mode (true) or not playing (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.register\", \"params\": { \"event\": \"playbackchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.playbackchange\", \"params\": { \"playing\": true } } statechange notification Signals a state change of the service. Parameters Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Netflix API"},{"location":"api/NetflixAPI/#netflix-api","text":"Version: 1.0.0 Status: Netflix interface for Thunder framework. (Defined by Netflix.json )","title":"Netflix API"},{"location":"api/NetflixAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/NetflixAPI/#introduction","text":"","title":"Introduction"},{"location":"api/NetflixAPI/#scope","text":"This document describes purpose and functionality of the Netflix interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/NetflixAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/NetflixAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/NetflixAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/NetflixAPI/#description","text":"Netflix JSON-RPC interface.","title":"Description"},{"location":"api/NetflixAPI/#methods","text":"The following methods are provided by the Netflix interface: Netflix interface methods: Method Description factoryreset deprecated Performs a reset to factory defaults systemcommand Sends a system command to Netflix","title":"Methods"},{"location":"api/NetflixAPI/#factoryreset-method","text":"Performs a reset to factory defaults. factoryreset is an alternative name for this method. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"factoryreset method"},{"location":"api/NetflixAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/NetflixAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/NetflixAPI/#errors","text":"Message Description ERROR_UNAVAILABLE Netflix is unavailable","title":"Errors"},{"location":"api/NetflixAPI/#example","text":"","title":"Example"},{"location":"api/NetflixAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.factoryreset\" }","title":"Request"},{"location":"api/NetflixAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/NetflixAPI/#systemcommand-method","text":"Sends a system command to Netflix.","title":"systemcommand method"},{"location":"api/NetflixAPI/#parameters_1","text":"Name Type Description params object ... params.command string Command to send to Netflix","title":"Parameters"},{"location":"api/NetflixAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/NetflixAPI/#errors_1","text":"Message Description ERROR_UNAVAILABLE Netflix is unavailable ERROR_UNKNOWN_KEY Unknown command","title":"Errors"},{"location":"api/NetflixAPI/#example_1","text":"","title":"Example"},{"location":"api/NetflixAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.systemcommand\", \"params\": { \"command\": \"exit\" } }","title":"Request"},{"location":"api/NetflixAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/NetflixAPI/#properties","text":"The following properties are provided by the Netflix interface: Netflix interface properties: Property Description esn deprecated (read-only) ESN value visibility deprecated (write-only) Current Netflix visibility StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"api/NetflixAPI/#esn-property","text":"Provides access to the ESN value. This property is read-only . esn is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"esn property"},{"location":"api/NetflixAPI/#value","text":"","title":"Value"},{"location":"api/NetflixAPI/#result_2","text":"Name Type Description result string ESN value","title":"Result"},{"location":"api/NetflixAPI/#errors_2","text":"Message Description ERROR_UNAVAILABLE Netflix is unavailable","title":"Errors"},{"location":"api/NetflixAPI/#example_2","text":"","title":"Example"},{"location":"api/NetflixAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.esn\" }","title":"Get Request"},{"location":"api/NetflixAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DADDAUFV2=00000000000000000000000000000001\" }","title":"Get Response"},{"location":"api/NetflixAPI/#visibility-property","text":"Provides access to the current Netflix visibility. This property is write-only . visibility is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Also see: visibilitychange","title":"visibility property"},{"location":"api/NetflixAPI/#value_1","text":"Name Type Description (property) string Current Netflix visibility","title":"Value"},{"location":"api/NetflixAPI/#example_3","text":"","title":"Example"},{"location":"api/NetflixAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"api/NetflixAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/NetflixAPI/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"api/NetflixAPI/#value_2","text":"Name Type Description (property) string Running state of the service","title":"Value"},{"location":"api/NetflixAPI/#result_3","text":"Name Type Description result string Running state of the service","title":"Result"},{"location":"api/NetflixAPI/#example_4","text":"","title":"Example"},{"location":"api/NetflixAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.state\" }","title":"Get Request"},{"location":"api/NetflixAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"api/NetflixAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"api/NetflixAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/NetflixAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Netflix interface: Netflix interface events: Notification Description playbackchange Signals playback status change StateControl interface events: Notification Description statechange Signals a state change of the service","title":"Notifications"},{"location":"api/NetflixAPI/#playbackchange-notification","text":"Signals playback status change.","title":"playbackchange notification"},{"location":"api/NetflixAPI/#parameters_2","text":"Name Type Description params object ... params.playing boolean Determines if the Netflix is in playing mode (true) or not playing (false)","title":"Parameters"},{"location":"api/NetflixAPI/#example_5","text":"","title":"Example"},{"location":"api/NetflixAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.register\", \"params\": { \"event\": \"playbackchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/NetflixAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.playbackchange\", \"params\": { \"playing\": true } }","title":"Message"},{"location":"api/NetflixAPI/#statechange-notification","text":"Signals a state change of the service.","title":"statechange notification"},{"location":"api/NetflixAPI/#parameters_3","text":"Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"api/NetflixAPI/#example_6","text":"","title":"Example"},{"location":"api/NetflixAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Netflix.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/NetflixAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Message"},{"location":"api/NetworkControlAPI/","text":"NetworkControl API Version: 1.0.0 Status: NetworkControl interface for Thunder framework. (Defined with INetworkControl in INetworkControl.h ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the NetworkControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description NetworkControl JSON-RPC interface. Methods The following methods are provided by the NetworkControl interface: NetworkControl interface methods: Method Description flush Flush and reload requested interface flush method Flush and reload requested interface. Parameters Name Type Description params object ... params.interface string Name of the interface to be flushed Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.flush\", \"params\": { \"interface\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the NetworkControl interface: NetworkControl interface properties: Property Description interfaces (read-only) Currently available interfaces status (read-only) Status of requested interface network Network info of requested interface dns DNS list up Provides given requested interface is up or not interfaces property Provides access to the currently available interfaces. This property is read-only . Value Result Name Type Description result array Currently available interfaces result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.interfaces\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } status property Provides access to the status of requested interface. This property is read-only . Value The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.status@<interface> . Result Name Type Description result string Status of requested interface (must be one of the following: Available, Unavailable ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.status@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unavailable\" } network property Provides access to the network info of requested interface. Value Name Type Description (property) object Network info of requested interface (property).value array ... (property).value[#] object ... (property).value[#].address string IP Address (property).value[#].defaultgateway string Default Gateway (property).value[#].mask integer Network mask (property).value[#].mode string Mode of interface activation Dynamic or Static (must be one of the following: Dynamic, Static ) The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.network@<interface> . Result Name Type Description result array Info about requested interface result[#] object ... result[#].address string IP Address result[#].defaultgateway string Default Gateway result[#].mask integer Network mask result[#].mode string Mode of interface activation Dynamic or Static (must be one of the following: Dynamic, Static ) Errors Message Description ERROR_UNAVAILABLE Failed to set/retrieve network Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"address\": \"...\", \"defaultgateway\": \"...\", \"mask\": 0, \"mode\": \"Static\" } ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@xyz\", \"params\": { \"value\": [ { \"address\": \"...\", \"defaultgateway\": \"...\", \"mask\": 0, \"mode\": \"Static\" } ] } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } dns property Provides access to the DNS list. Value Name Type Description (property) object DNS list (property).value array ... (property).value[#] string ... Result Name Type Description result array List of DNS result[#] string ... Errors Message Description ERROR_UNAVAILABLE Failed to set/retrieve DNS Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\", \"params\": { \"value\": [ \"...\" ] } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } up property Provides access to the provides given requested interface is up or not. Value Name Type Description (property) object Provides given requested interface is up or not (property).value boolean ... The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.up@<interface> . Result Name Type Description result boolean Up/Down requested interface Errors Message Description ERROR_UNAVAILABLE Failed to set/retrieve UP Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@xyz\", \"params\": { \"value\": false } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkControl interface: NetworkControl interface events: Notification Description update Signal interface update update notification Signal interface update. Parameters Name Type Description params object ... params.interfacename string Name of the interface where an update occured Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.register\", \"params\": { \"event\": \"update\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.update\", \"params\": { \"interfacename\": \"...\" } }","title":"NetworkControl API"},{"location":"api/NetworkControlAPI/#networkcontrol-api","text":"Version: 1.0.0 Status: NetworkControl interface for Thunder framework. (Defined with INetworkControl in INetworkControl.h )","title":"NetworkControl API"},{"location":"api/NetworkControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/NetworkControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/NetworkControlAPI/#scope","text":"This document describes purpose and functionality of the NetworkControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/NetworkControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/NetworkControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/NetworkControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/NetworkControlAPI/#description","text":"NetworkControl JSON-RPC interface.","title":"Description"},{"location":"api/NetworkControlAPI/#methods","text":"The following methods are provided by the NetworkControl interface: NetworkControl interface methods: Method Description flush Flush and reload requested interface","title":"Methods"},{"location":"api/NetworkControlAPI/#flush-method","text":"Flush and reload requested interface.","title":"flush method"},{"location":"api/NetworkControlAPI/#parameters","text":"Name Type Description params object ... params.interface string Name of the interface to be flushed","title":"Parameters"},{"location":"api/NetworkControlAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/NetworkControlAPI/#example","text":"","title":"Example"},{"location":"api/NetworkControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.flush\", \"params\": { \"interface\": \"...\" } }","title":"Request"},{"location":"api/NetworkControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/NetworkControlAPI/#properties","text":"The following properties are provided by the NetworkControl interface: NetworkControl interface properties: Property Description interfaces (read-only) Currently available interfaces status (read-only) Status of requested interface network Network info of requested interface dns DNS list up Provides given requested interface is up or not","title":"Properties"},{"location":"api/NetworkControlAPI/#interfaces-property","text":"Provides access to the currently available interfaces. This property is read-only .","title":"interfaces property"},{"location":"api/NetworkControlAPI/#value","text":"","title":"Value"},{"location":"api/NetworkControlAPI/#result_1","text":"Name Type Description result array Currently available interfaces result[#] string ...","title":"Result"},{"location":"api/NetworkControlAPI/#example_1","text":"","title":"Example"},{"location":"api/NetworkControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.interfaces\" }","title":"Get Request"},{"location":"api/NetworkControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"api/NetworkControlAPI/#status-property","text":"Provides access to the status of requested interface. This property is read-only .","title":"status property"},{"location":"api/NetworkControlAPI/#value_1","text":"The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.status@<interface> .","title":"Value"},{"location":"api/NetworkControlAPI/#result_2","text":"Name Type Description result string Status of requested interface (must be one of the following: Available, Unavailable )","title":"Result"},{"location":"api/NetworkControlAPI/#example_2","text":"","title":"Example"},{"location":"api/NetworkControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.status@xyz\" }","title":"Get Request"},{"location":"api/NetworkControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unavailable\" }","title":"Get Response"},{"location":"api/NetworkControlAPI/#network-property","text":"Provides access to the network info of requested interface.","title":"network property"},{"location":"api/NetworkControlAPI/#value_2","text":"Name Type Description (property) object Network info of requested interface (property).value array ... (property).value[#] object ... (property).value[#].address string IP Address (property).value[#].defaultgateway string Default Gateway (property).value[#].mask integer Network mask (property).value[#].mode string Mode of interface activation Dynamic or Static (must be one of the following: Dynamic, Static ) The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.network@<interface> .","title":"Value"},{"location":"api/NetworkControlAPI/#result_3","text":"Name Type Description result array Info about requested interface result[#] object ... result[#].address string IP Address result[#].defaultgateway string Default Gateway result[#].mask integer Network mask result[#].mode string Mode of interface activation Dynamic or Static (must be one of the following: Dynamic, Static )","title":"Result"},{"location":"api/NetworkControlAPI/#errors","text":"Message Description ERROR_UNAVAILABLE Failed to set/retrieve network","title":"Errors"},{"location":"api/NetworkControlAPI/#example_3","text":"","title":"Example"},{"location":"api/NetworkControlAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@xyz\" }","title":"Get Request"},{"location":"api/NetworkControlAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"address\": \"...\", \"defaultgateway\": \"...\", \"mask\": 0, \"mode\": \"Static\" } ] }","title":"Get Response"},{"location":"api/NetworkControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@xyz\", \"params\": { \"value\": [ { \"address\": \"...\", \"defaultgateway\": \"...\", \"mask\": 0, \"mode\": \"Static\" } ] } }","title":"Set Request"},{"location":"api/NetworkControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/NetworkControlAPI/#dns-property","text":"Provides access to the DNS list.","title":"dns property"},{"location":"api/NetworkControlAPI/#value_3","text":"Name Type Description (property) object DNS list (property).value array ... (property).value[#] string ...","title":"Value"},{"location":"api/NetworkControlAPI/#result_4","text":"Name Type Description result array List of DNS result[#] string ...","title":"Result"},{"location":"api/NetworkControlAPI/#errors_1","text":"Message Description ERROR_UNAVAILABLE Failed to set/retrieve DNS","title":"Errors"},{"location":"api/NetworkControlAPI/#example_4","text":"","title":"Example"},{"location":"api/NetworkControlAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\" }","title":"Get Request"},{"location":"api/NetworkControlAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"api/NetworkControlAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\", \"params\": { \"value\": [ \"...\" ] } }","title":"Set Request"},{"location":"api/NetworkControlAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/NetworkControlAPI/#up-property","text":"Provides access to the provides given requested interface is up or not.","title":"up property"},{"location":"api/NetworkControlAPI/#value_4","text":"Name Type Description (property) object Provides given requested interface is up or not (property).value boolean ... The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.up@<interface> .","title":"Value"},{"location":"api/NetworkControlAPI/#result_5","text":"Name Type Description result boolean Up/Down requested interface","title":"Result"},{"location":"api/NetworkControlAPI/#errors_2","text":"Message Description ERROR_UNAVAILABLE Failed to set/retrieve UP","title":"Errors"},{"location":"api/NetworkControlAPI/#example_5","text":"","title":"Example"},{"location":"api/NetworkControlAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@xyz\" }","title":"Get Request"},{"location":"api/NetworkControlAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"api/NetworkControlAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@xyz\", \"params\": { \"value\": false } }","title":"Set Request"},{"location":"api/NetworkControlAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/NetworkControlAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkControl interface: NetworkControl interface events: Notification Description update Signal interface update","title":"Notifications"},{"location":"api/NetworkControlAPI/#update-notification","text":"Signal interface update.","title":"update notification"},{"location":"api/NetworkControlAPI/#parameters_1","text":"Name Type Description params object ... params.interfacename string Name of the interface where an update occured","title":"Parameters"},{"location":"api/NetworkControlAPI/#example_6","text":"","title":"Example"},{"location":"api/NetworkControlAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.register\", \"params\": { \"event\": \"update\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/NetworkControlAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.update\", \"params\": { \"interfacename\": \"...\" } }","title":"Message"},{"location":"api/NetworkToolsAPI/","text":"NetworkTools API Version: 1.0.0 Status: NetworkTools interface for Thunder framework. (Defined with INetworkTools in INetworkTools.h ) Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the NetworkTools interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description NetworkTools JSON-RPC interface. Methods The following methods are provided by the NetworkTools interface: NetworkTools interface methods: Method Description ping Ping the given destination with ICMP packages traceroute TraceRoute to the given destination with ICMP packages ping method Ping the given destination with ICMP packages. Parameters Name Type Description params object ... params.destination string The node id of the host we would like to ping (ipv4/ipv6) params.timeoutinseconds integer Time out, continue to ping for the given duration params.count integer Maximum number of pings to send Result Name Type Description result null Always null Errors Message Description ERROR_NONE, ERROR_INPROGRES means an icmp check is already in progress . Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkTools.1.ping\", \"params\": { \"destination\": \"...\", \"timeoutinseconds\": 0, \"count\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } traceroute method TraceRoute to the given destination with ICMP packages. Parameters Name Type Description params object ... params.destination string The node id of the host we would like to ping (ipv4/ipv6) params.timeoutinseconds integer Time out, continue to ping for the given duration Result Name Type Description result null Always null Errors Message Description ERROR_NONE, ERROR_INPROGRES means an icmp check is already in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkTools.1.traceroute\", \"params\": { \"destination\": \"...\", \"timeoutinseconds\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkTools interface: NetworkTools interface events: Notification Description report Signals an message from a given host report notification Signals an message from a given host. Parameters Name Type Description params object ... params.source string The NodeId of the system that send the metadta presented in the next field params.metadata string Depending on the tool started, this JSON string will contain additional information on this notification Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkTools.1.register\", \"params\": { \"event\": \"report\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.report\", \"params\": { \"source\": \"...\", \"metadata\": \"...\" } }","title":"NetworkTools API"},{"location":"api/NetworkToolsAPI/#networktools-api","text":"Version: 1.0.0 Status: NetworkTools interface for Thunder framework. (Defined with INetworkTools in INetworkTools.h )","title":"NetworkTools API"},{"location":"api/NetworkToolsAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"api/NetworkToolsAPI/#introduction","text":"","title":"Introduction"},{"location":"api/NetworkToolsAPI/#scope","text":"This document describes purpose and functionality of the NetworkTools interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"api/NetworkToolsAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/NetworkToolsAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/NetworkToolsAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/NetworkToolsAPI/#description","text":"NetworkTools JSON-RPC interface.","title":"Description"},{"location":"api/NetworkToolsAPI/#methods","text":"The following methods are provided by the NetworkTools interface: NetworkTools interface methods: Method Description ping Ping the given destination with ICMP packages traceroute TraceRoute to the given destination with ICMP packages","title":"Methods"},{"location":"api/NetworkToolsAPI/#ping-method","text":"Ping the given destination with ICMP packages.","title":"ping method"},{"location":"api/NetworkToolsAPI/#parameters","text":"Name Type Description params object ... params.destination string The node id of the host we would like to ping (ipv4/ipv6) params.timeoutinseconds integer Time out, continue to ping for the given duration params.count integer Maximum number of pings to send","title":"Parameters"},{"location":"api/NetworkToolsAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/NetworkToolsAPI/#errors","text":"Message Description ERROR_NONE, ERROR_INPROGRES means an icmp check is already in progress .","title":"Errors"},{"location":"api/NetworkToolsAPI/#example","text":"","title":"Example"},{"location":"api/NetworkToolsAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkTools.1.ping\", \"params\": { \"destination\": \"...\", \"timeoutinseconds\": 0, \"count\": 0 } }","title":"Request"},{"location":"api/NetworkToolsAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/NetworkToolsAPI/#traceroute-method","text":"TraceRoute to the given destination with ICMP packages.","title":"traceroute method"},{"location":"api/NetworkToolsAPI/#parameters_1","text":"Name Type Description params object ... params.destination string The node id of the host we would like to ping (ipv4/ipv6) params.timeoutinseconds integer Time out, continue to ping for the given duration","title":"Parameters"},{"location":"api/NetworkToolsAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/NetworkToolsAPI/#errors_1","text":"Message Description ERROR_NONE, ERROR_INPROGRES means an icmp check is already in progress","title":"Errors"},{"location":"api/NetworkToolsAPI/#example_1","text":"","title":"Example"},{"location":"api/NetworkToolsAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkTools.1.traceroute\", \"params\": { \"destination\": \"...\", \"timeoutinseconds\": 0 } }","title":"Request"},{"location":"api/NetworkToolsAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/NetworkToolsAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkTools interface: NetworkTools interface events: Notification Description report Signals an message from a given host","title":"Notifications"},{"location":"api/NetworkToolsAPI/#report-notification","text":"Signals an message from a given host.","title":"report notification"},{"location":"api/NetworkToolsAPI/#parameters_2","text":"Name Type Description params object ... params.source string The NodeId of the system that send the metadta presented in the next field params.metadata string Depending on the tool started, this JSON string will contain additional information on this notification","title":"Parameters"},{"location":"api/NetworkToolsAPI/#example_2","text":"","title":"Example"},{"location":"api/NetworkToolsAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkTools.1.register\", \"params\": { \"event\": \"report\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/NetworkToolsAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.report\", \"params\": { \"source\": \"...\", \"metadata\": \"...\" } }","title":"Message"},{"location":"api/OpenCDMiAPI/","text":"OpenCDMi API Version: 1.0.0 Status: OCDM interface for Thunder framework. (Defined by OCDM.json ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the OCDM interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description OpenCDMi JSON-RPC interface. Properties The following properties are provided by the OCDM interface: OCDM interface properties: Property Description drms (read-only) Supported DRM systems keysystems (read-only) DRM key systems sessions (read-only) Active sessions enumerator drms property Provides access to the supported DRM systems. This property is read-only . Value Result Name Type Description result array Supported DRM systems result[#] object ... result[#].name string Name of the DRM result[#].keysystems array Key system identifier list result[#].keysystems[#] string Identifier of a key system Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.drms\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"PlayReady\", \"keysystems\": [ \"com.microsoft.playready\" ] } ] } keysystems property Provides access to the DRM key systems. This property is read-only . Value The drm system argument shall be passed as the index to the property, e.g. OCDM.1.keysystems@<drm system> . Result Name Type Description result array DRM key systems result[#] string Identifier of a key system Errors Message Description ERROR_BAD_REQUEST Invalid DRM name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.keysystems@PlayReady\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"com.microsoft.playready\" ] } sessions property Provides access to the active sessions enumerator. This property is read-only . Value Result Name Type Description result array Active sessions enumerator result[#] object ... result[#].drm string Name of the DRM system Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.sessions\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"drm\": \"PlayReady\" } ] } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the OCDM interface: OCDM interface events: Notification Description drmalreadyinitialized Signals that the specified DRM system could not be initialized because it is already initialized by another process drminitializationstatus Notifies about DRM initialization status drmalreadyinitialized notification Signals that the specified DRM system could not be initialized because it is already initialized by another process. Description When this event is received, the application owning given DRM system should release it immediately. Parameters Name Type Description params object ... params.drm string Name of the DRM system Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.register\", \"params\": { \"event\": \"drmalreadyinitialized\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.drmalreadyinitialized\", \"params\": { \"drm\": \"PlayReady\" } } drminitializationstatus notification Notifies about DRM initialization status. Description Register to this event to be notified about DRM retrying status busy/failure/success Parameters Name Type Description params object ... params.status string BUSY - drm is used by another process, SUCCESS - recovered from BUSY state after retry, FAILED - not recovered after re-trying from BUSY params.drm string Name of the DRM system Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.register\", \"params\": { \"event\": \"drminitializationstatus\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.drminitializationstatus\", \"params\": { \"status\": \"SUCCESS\", \"drm\": \"PlayReady\" } }","title":"OpenCDMi API"},{"location":"api/OpenCDMiAPI/#opencdmi-api","text":"Version: 1.0.0 Status: OCDM interface for Thunder framework. (Defined by OCDM.json )","title":"OpenCDMi API"},{"location":"api/OpenCDMiAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/OpenCDMiAPI/#introduction","text":"","title":"Introduction"},{"location":"api/OpenCDMiAPI/#scope","text":"This document describes purpose and functionality of the OCDM interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/OpenCDMiAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/OpenCDMiAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/OpenCDMiAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/OpenCDMiAPI/#description","text":"OpenCDMi JSON-RPC interface.","title":"Description"},{"location":"api/OpenCDMiAPI/#properties","text":"The following properties are provided by the OCDM interface: OCDM interface properties: Property Description drms (read-only) Supported DRM systems keysystems (read-only) DRM key systems sessions (read-only) Active sessions enumerator","title":"Properties"},{"location":"api/OpenCDMiAPI/#drms-property","text":"Provides access to the supported DRM systems. This property is read-only .","title":"drms property"},{"location":"api/OpenCDMiAPI/#value","text":"","title":"Value"},{"location":"api/OpenCDMiAPI/#result","text":"Name Type Description result array Supported DRM systems result[#] object ... result[#].name string Name of the DRM result[#].keysystems array Key system identifier list result[#].keysystems[#] string Identifier of a key system","title":"Result"},{"location":"api/OpenCDMiAPI/#example","text":"","title":"Example"},{"location":"api/OpenCDMiAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.drms\" }","title":"Get Request"},{"location":"api/OpenCDMiAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"PlayReady\", \"keysystems\": [ \"com.microsoft.playready\" ] } ] }","title":"Get Response"},{"location":"api/OpenCDMiAPI/#keysystems-property","text":"Provides access to the DRM key systems. This property is read-only .","title":"keysystems property"},{"location":"api/OpenCDMiAPI/#value_1","text":"The drm system argument shall be passed as the index to the property, e.g. OCDM.1.keysystems@<drm system> .","title":"Value"},{"location":"api/OpenCDMiAPI/#result_1","text":"Name Type Description result array DRM key systems result[#] string Identifier of a key system","title":"Result"},{"location":"api/OpenCDMiAPI/#errors","text":"Message Description ERROR_BAD_REQUEST Invalid DRM name","title":"Errors"},{"location":"api/OpenCDMiAPI/#example_1","text":"","title":"Example"},{"location":"api/OpenCDMiAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.keysystems@PlayReady\" }","title":"Get Request"},{"location":"api/OpenCDMiAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"com.microsoft.playready\" ] }","title":"Get Response"},{"location":"api/OpenCDMiAPI/#sessions-property","text":"Provides access to the active sessions enumerator. This property is read-only .","title":"sessions property"},{"location":"api/OpenCDMiAPI/#value_2","text":"","title":"Value"},{"location":"api/OpenCDMiAPI/#result_2","text":"Name Type Description result array Active sessions enumerator result[#] object ... result[#].drm string Name of the DRM system","title":"Result"},{"location":"api/OpenCDMiAPI/#example_2","text":"","title":"Example"},{"location":"api/OpenCDMiAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.sessions\" }","title":"Get Request"},{"location":"api/OpenCDMiAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"drm\": \"PlayReady\" } ] }","title":"Get Response"},{"location":"api/OpenCDMiAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the OCDM interface: OCDM interface events: Notification Description drmalreadyinitialized Signals that the specified DRM system could not be initialized because it is already initialized by another process drminitializationstatus Notifies about DRM initialization status","title":"Notifications"},{"location":"api/OpenCDMiAPI/#drmalreadyinitialized-notification","text":"Signals that the specified DRM system could not be initialized because it is already initialized by another process.","title":"drmalreadyinitialized notification"},{"location":"api/OpenCDMiAPI/#description_1","text":"When this event is received, the application owning given DRM system should release it immediately.","title":"Description"},{"location":"api/OpenCDMiAPI/#parameters","text":"Name Type Description params object ... params.drm string Name of the DRM system","title":"Parameters"},{"location":"api/OpenCDMiAPI/#example_3","text":"","title":"Example"},{"location":"api/OpenCDMiAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.register\", \"params\": { \"event\": \"drmalreadyinitialized\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/OpenCDMiAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.drmalreadyinitialized\", \"params\": { \"drm\": \"PlayReady\" } }","title":"Message"},{"location":"api/OpenCDMiAPI/#drminitializationstatus-notification","text":"Notifies about DRM initialization status.","title":"drminitializationstatus notification"},{"location":"api/OpenCDMiAPI/#description_2","text":"Register to this event to be notified about DRM retrying status busy/failure/success","title":"Description"},{"location":"api/OpenCDMiAPI/#parameters_1","text":"Name Type Description params object ... params.status string BUSY - drm is used by another process, SUCCESS - recovered from BUSY state after retry, FAILED - not recovered after re-trying from BUSY params.drm string Name of the DRM system","title":"Parameters"},{"location":"api/OpenCDMiAPI/#example_4","text":"","title":"Example"},{"location":"api/OpenCDMiAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.register\", \"params\": { \"event\": \"drminitializationstatus\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/OpenCDMiAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.drminitializationstatus\", \"params\": { \"status\": \"SUCCESS\", \"drm\": \"PlayReady\" } }","title":"Message"},{"location":"api/OutputAPI/","text":"Output API Version: 1.0.0 Status: Output interface for Thunder framework. (Defined with Dolby::IOutput in IDolby.h ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the Output interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Output JSON-RPC interface. Properties The following properties are provided by the Output interface: Dolby Output interface properties: Property Description dolbyatmossupported / dolby_atmosmetadata (read-only) Atmos capabilities of Sink dolbysoundmode / dolby_soundmode (read-only) Sound Mode - Mono/Stereo/Surround dolbyatmosoutput / dolby_enableatmosoutput (write-only) Enable Atmos Audio Output dolbymode / dolby_mode Dolby Mode dolbyatmossupported property Provides access to the atmos capabilities of Sink. This property is read-only . dolby_atmosmetadata is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Result Name Type Description result boolean Atmos capabilities of Sink Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolbyatmossupported\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } dolbysoundmode property Provides access to the sound Mode - Mono/Stereo/Surround. This property is read-only . dolby_soundmode is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Result Name Type Description result string Sound Mode - Mono/Stereo/Surround (must be one of the following: Auto, Dolbydigital, Dolbydigitalplus, Mono, Passthru, Stereo, Surround, Unknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolbysoundmode\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" } dolbyatmosoutput property Provides access to the enable Atmos Audio Output. This property is write-only . dolby_enableatmosoutput is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Name Type Description (property) boolean Enable/Disable Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolbyatmosoutput\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } dolbymode property Provides access to the dolby Mode. dolby_mode is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Name Type Description (property) string Dolby mode type (must be one of the following: Auto, DigitalAc3, DigitalPassthrough, DigitalPcm, DigitalPlus, Ms12 ) Result Name Type Description result string Dolby mode type (must be one of the following: Auto, DigitalAc3, DigitalPassthrough, DigitalPcm, DigitalPlus, Ms12 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolbymode\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DigitalPcm\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolbymode\", \"params\": \"DigitalPcm\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Output interface: Dolby Output interface events: Notification Description soundmodechanged / dolby_audiomodechanged Signal audio mode change soundmodechanged notification Signal audio mode change. dolby_audiomodechanged is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Parameters Name Type Description params object ... params.mode string Changed Mode (must be one of the following: Auto, Dolbydigital, Dolbydigitalplus, Mono, Passthru, Stereo, Surround, Unknown ) params.enabled boolean Enabled/Disabled Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.register\", \"params\": { \"event\": \"soundmodechanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.soundmodechanged\", \"params\": { \"mode\": \"Unknown\", \"enabled\": false } }","title":"Output API"},{"location":"api/OutputAPI/#output-api","text":"Version: 1.0.0 Status: Output interface for Thunder framework. (Defined with Dolby::IOutput in IDolby.h )","title":"Output API"},{"location":"api/OutputAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/OutputAPI/#introduction","text":"","title":"Introduction"},{"location":"api/OutputAPI/#scope","text":"This document describes purpose and functionality of the Output interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/OutputAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/OutputAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/OutputAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/OutputAPI/#description","text":"Output JSON-RPC interface.","title":"Description"},{"location":"api/OutputAPI/#properties","text":"The following properties are provided by the Output interface: Dolby Output interface properties: Property Description dolbyatmossupported / dolby_atmosmetadata (read-only) Atmos capabilities of Sink dolbysoundmode / dolby_soundmode (read-only) Sound Mode - Mono/Stereo/Surround dolbyatmosoutput / dolby_enableatmosoutput (write-only) Enable Atmos Audio Output dolbymode / dolby_mode Dolby Mode","title":"Properties"},{"location":"api/OutputAPI/#dolbyatmossupported-property","text":"Provides access to the atmos capabilities of Sink. This property is read-only . dolby_atmosmetadata is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"dolbyatmossupported property"},{"location":"api/OutputAPI/#value","text":"","title":"Value"},{"location":"api/OutputAPI/#result","text":"Name Type Description result boolean Atmos capabilities of Sink","title":"Result"},{"location":"api/OutputAPI/#example","text":"","title":"Example"},{"location":"api/OutputAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolbyatmossupported\" }","title":"Get Request"},{"location":"api/OutputAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"api/OutputAPI/#dolbysoundmode-property","text":"Provides access to the sound Mode - Mono/Stereo/Surround. This property is read-only . dolby_soundmode is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"dolbysoundmode property"},{"location":"api/OutputAPI/#value_1","text":"","title":"Value"},{"location":"api/OutputAPI/#result_1","text":"Name Type Description result string Sound Mode - Mono/Stereo/Surround (must be one of the following: Auto, Dolbydigital, Dolbydigitalplus, Mono, Passthru, Stereo, Surround, Unknown )","title":"Result"},{"location":"api/OutputAPI/#example_1","text":"","title":"Example"},{"location":"api/OutputAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolbysoundmode\" }","title":"Get Request"},{"location":"api/OutputAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" }","title":"Get Response"},{"location":"api/OutputAPI/#dolbyatmosoutput-property","text":"Provides access to the enable Atmos Audio Output. This property is write-only . dolby_enableatmosoutput is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"dolbyatmosoutput property"},{"location":"api/OutputAPI/#value_2","text":"Name Type Description (property) boolean Enable/Disable","title":"Value"},{"location":"api/OutputAPI/#example_2","text":"","title":"Example"},{"location":"api/OutputAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolbyatmosoutput\", \"params\": false }","title":"Set Request"},{"location":"api/OutputAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/OutputAPI/#dolbymode-property","text":"Provides access to the dolby Mode. dolby_mode is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"dolbymode property"},{"location":"api/OutputAPI/#value_3","text":"Name Type Description (property) string Dolby mode type (must be one of the following: Auto, DigitalAc3, DigitalPassthrough, DigitalPcm, DigitalPlus, Ms12 )","title":"Value"},{"location":"api/OutputAPI/#result_2","text":"Name Type Description result string Dolby mode type (must be one of the following: Auto, DigitalAc3, DigitalPassthrough, DigitalPcm, DigitalPlus, Ms12 )","title":"Result"},{"location":"api/OutputAPI/#example_3","text":"","title":"Example"},{"location":"api/OutputAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolbymode\" }","title":"Get Request"},{"location":"api/OutputAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DigitalPcm\" }","title":"Get Response"},{"location":"api/OutputAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.dolbymode\", \"params\": \"DigitalPcm\" }","title":"Set Request"},{"location":"api/OutputAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/OutputAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Output interface: Dolby Output interface events: Notification Description soundmodechanged / dolby_audiomodechanged Signal audio mode change","title":"Notifications"},{"location":"api/OutputAPI/#soundmodechanged-notification","text":"Signal audio mode change. dolby_audiomodechanged is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"soundmodechanged notification"},{"location":"api/OutputAPI/#parameters","text":"Name Type Description params object ... params.mode string Changed Mode (must be one of the following: Auto, Dolbydigital, Dolbydigitalplus, Mono, Passthru, Stereo, Surround, Unknown ) params.enabled boolean Enabled/Disabled","title":"Parameters"},{"location":"api/OutputAPI/#example_4","text":"","title":"Example"},{"location":"api/OutputAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Output.1.register\", \"params\": { \"event\": \"soundmodechanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/OutputAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.soundmodechanged\", \"params\": { \"mode\": \"Unknown\", \"enabled\": false } }","title":"Message"},{"location":"api/PackageManagerAPI/","text":"PackageManager API Version: 1.0.0 Status: PackageManager interface for Thunder framework. (Defined with IPackageManager in IPackageManager.h ) Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the PackageManager interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description PackageManager JSON-RPC interface. Methods The following methods are provided by the PackageManager interface: PackageManager interface methods: Method Description install Download the application bundle uninstall Uninstall the application download Download arbitrary application's resource file reset Delete persistent data stored locally getstoragedetails Information on the storage usage setauxmetadata Set an arbitrary metadata clearauxmetadata Clears an arbitrary metadata getmetadata Get application metadata cancel Cancel asynchronous request getprogress Estimated progress of a request getlist List installed applications lock Lock the application unlock Unlock application getlockinfo Get lock info install method Download the application bundle. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.url string URL used to install package params.appname string Application Name params.category string Category of the package Result Name Type Description result string Handle to the active installtion that can be used to refer to it later. e.g. for canceling or progress information Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.install\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"url\": \"...\", \"appname\": \"...\", \"category\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } uninstall method Uninstall the application. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.uninstalltype string Type of uninstall Result Name Type Description result string Handle to the active uninstallation that can be used to refer to it later. e.g. for canceling or progress information Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.uninstall\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"uninstalltype\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } download method Download arbitrary application's resource file. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.reskey string Resorce Key params.url string URL used to download package Result Name Type Description result string Handle to the active download that can be used to refer to it later. e.g. for canceling or progress information Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.download\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"reskey\": \"...\", \"url\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } reset method Delete persistent data stored locally. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.resettype string Type of Reset Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.reset\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"resettype\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } getstoragedetails method Information on the storage usage. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package Result Name Type Description result object Info about Storage result.apps object Storage details of application result.apps.path string Path of Storage result.apps.quotakb string Total Space allowed in KB result.apps.usedkb string Used Space in KB result.persistent object Storage details of persistent result.persistent.path string Path of Storage result.persistent.quotakb string Total Space allowed in KB result.persistent.usedkb string Used Space in KB Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.getstoragedetails\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"apps\": { \"path\": \"...\", \"quotakb\": \"...\", \"usedkb\": \"...\" }, \"persistent\": { \"path\": \"...\", \"quotakb\": \"...\", \"usedkb\": \"...\" } } } setauxmetadata method Set an arbitrary metadata. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.key string Key used to set arbitrary meta data params.value string Value of given key Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.setauxmetadata\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"key\": \"...\", \"value\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } clearauxmetadata method Clears an arbitrary metadata. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.key string Key used to clear arbitrary meta data Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.clearauxmetadata\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"key\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } getmetadata method Get application metadata. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package Result Name Type Description result object ... result.metadata object Payload of meta data result.metadata.appname string Name of the application result.metadata.type string Type of the package result.metadata.category string Category of the package result.metadata.url string URL used for operation result.resources array Resources result.resources[#] object ... result.resources[#].key string Key result.resources[#].value string Value result.auxmetadata array Arbitrary metadata result.auxmetadata[#] object ... result.auxmetadata[#].key string Key result.auxmetadata[#].value string Value Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.getmetadata\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"metadata\": { \"appname\": \"...\", \"type\": \"...\", \"category\": \"...\", \"url\": \"...\" }, \"resources\": [ { \"key\": \"...\", \"value\": \"...\" } ], \"auxmetadata\": [ { \"key\": \"...\", \"value\": \"...\" } ] } } cancel method Cancel asynchronous request. Parameters Name Type Description params object ... params.handle string Handle of the currently progressing operation (i.e, install/uninstal/download) Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.cancel\", \"params\": { \"handle\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } getprogress method Estimated progress of a request. Parameters Name Type Description params object ... params.handle string Handle of the currently progressing operation (i.e, install/uninstal/download) Result Name Type Description result integer Indication of installation progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.getprogress\", \"params\": { \"handle\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } getlist method List installed applications. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.appname string Application Name params.category string Category of the package Result Name Type Description result array Ids of Installed Package result[#] object ... result[#].id string Unique identifier of the package result[#].version string Version of the package Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.getlist\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"appname\": \"...\", \"category\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"id\": \"...\", \"version\": \"...\" } ] } lock method Lock the application. Preventing uninstallation. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.reason string Reason to lock the application params.owner string Owner used to lock Result Name Type Description result string Handle to the lock that can be used to refer to it later. e.g. for unlock later Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.lock\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"reason\": \"...\", \"owner\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } unlock method Unlock application. Parameters Name Type Description params object ... params.handle string Handle got during the Lock, it is to be used to Unlock operation Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.unlock\", \"params\": { \"handle\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } getlockinfo method Get lock info. Parameters Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package Result Name Type Description result object Info about Lock result.reason string Reason of Locking result.owner string Owner of Locking Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.getlockinfo\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"reason\": \"...\", \"owner\": \"...\" } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the PackageManager interface: PackageManager interface events: Notification Description operationstatus Completion of asynchronous operation operationstatus notification Completion of asynchronous operation. Parameters Name Type Description params object ... params.handle string Handle of the currently progressing operation (i.e, install/uninstal/download) params.operation string Type of the operation params.type string Type of the package params.id string Id of the package params.version string Version of the package params.status string Current status of the operation params.details string Details about the operation Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.register\", \"params\": { \"event\": \"operationstatus\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.operationstatus\", \"params\": { \"handle\": \"...\", \"operation\": \"...\", \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"status\": \"...\", \"details\": \"...\" } }","title":"PackageManager API"},{"location":"api/PackageManagerAPI/#packagemanager-api","text":"Version: 1.0.0 Status: PackageManager interface for Thunder framework. (Defined with IPackageManager in IPackageManager.h )","title":"PackageManager API"},{"location":"api/PackageManagerAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"api/PackageManagerAPI/#introduction","text":"","title":"Introduction"},{"location":"api/PackageManagerAPI/#scope","text":"This document describes purpose and functionality of the PackageManager interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"api/PackageManagerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/PackageManagerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/PackageManagerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/PackageManagerAPI/#description","text":"PackageManager JSON-RPC interface.","title":"Description"},{"location":"api/PackageManagerAPI/#methods","text":"The following methods are provided by the PackageManager interface: PackageManager interface methods: Method Description install Download the application bundle uninstall Uninstall the application download Download arbitrary application's resource file reset Delete persistent data stored locally getstoragedetails Information on the storage usage setauxmetadata Set an arbitrary metadata clearauxmetadata Clears an arbitrary metadata getmetadata Get application metadata cancel Cancel asynchronous request getprogress Estimated progress of a request getlist List installed applications lock Lock the application unlock Unlock application getlockinfo Get lock info","title":"Methods"},{"location":"api/PackageManagerAPI/#install-method","text":"Download the application bundle.","title":"install method"},{"location":"api/PackageManagerAPI/#parameters","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.url string URL used to install package params.appname string Application Name params.category string Category of the package","title":"Parameters"},{"location":"api/PackageManagerAPI/#result","text":"Name Type Description result string Handle to the active installtion that can be used to refer to it later. e.g. for canceling or progress information","title":"Result"},{"location":"api/PackageManagerAPI/#example","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.install\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"url\": \"...\", \"appname\": \"...\", \"category\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Response"},{"location":"api/PackageManagerAPI/#uninstall-method","text":"Uninstall the application.","title":"uninstall method"},{"location":"api/PackageManagerAPI/#parameters_1","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.uninstalltype string Type of uninstall","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_1","text":"Name Type Description result string Handle to the active uninstallation that can be used to refer to it later. e.g. for canceling or progress information","title":"Result"},{"location":"api/PackageManagerAPI/#example_1","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.uninstall\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"uninstalltype\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Response"},{"location":"api/PackageManagerAPI/#download-method","text":"Download arbitrary application's resource file.","title":"download method"},{"location":"api/PackageManagerAPI/#parameters_2","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.reskey string Resorce Key params.url string URL used to download package","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_2","text":"Name Type Description result string Handle to the active download that can be used to refer to it later. e.g. for canceling or progress information","title":"Result"},{"location":"api/PackageManagerAPI/#example_2","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.download\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"reskey\": \"...\", \"url\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Response"},{"location":"api/PackageManagerAPI/#reset-method","text":"Delete persistent data stored locally.","title":"reset method"},{"location":"api/PackageManagerAPI/#parameters_3","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.resettype string Type of Reset","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/PackageManagerAPI/#example_3","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.reset\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"resettype\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/PackageManagerAPI/#getstoragedetails-method","text":"Information on the storage usage.","title":"getstoragedetails method"},{"location":"api/PackageManagerAPI/#parameters_4","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_4","text":"Name Type Description result object Info about Storage result.apps object Storage details of application result.apps.path string Path of Storage result.apps.quotakb string Total Space allowed in KB result.apps.usedkb string Used Space in KB result.persistent object Storage details of persistent result.persistent.path string Path of Storage result.persistent.quotakb string Total Space allowed in KB result.persistent.usedkb string Used Space in KB","title":"Result"},{"location":"api/PackageManagerAPI/#example_4","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.getstoragedetails\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"apps\": { \"path\": \"...\", \"quotakb\": \"...\", \"usedkb\": \"...\" }, \"persistent\": { \"path\": \"...\", \"quotakb\": \"...\", \"usedkb\": \"...\" } } }","title":"Response"},{"location":"api/PackageManagerAPI/#setauxmetadata-method","text":"Set an arbitrary metadata.","title":"setauxmetadata method"},{"location":"api/PackageManagerAPI/#parameters_5","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.key string Key used to set arbitrary meta data params.value string Value of given key","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_5","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/PackageManagerAPI/#example_5","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.setauxmetadata\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"key\": \"...\", \"value\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/PackageManagerAPI/#clearauxmetadata-method","text":"Clears an arbitrary metadata.","title":"clearauxmetadata method"},{"location":"api/PackageManagerAPI/#parameters_6","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.key string Key used to clear arbitrary meta data","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_6","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/PackageManagerAPI/#example_6","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.clearauxmetadata\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"key\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/PackageManagerAPI/#getmetadata-method","text":"Get application metadata.","title":"getmetadata method"},{"location":"api/PackageManagerAPI/#parameters_7","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_7","text":"Name Type Description result object ... result.metadata object Payload of meta data result.metadata.appname string Name of the application result.metadata.type string Type of the package result.metadata.category string Category of the package result.metadata.url string URL used for operation result.resources array Resources result.resources[#] object ... result.resources[#].key string Key result.resources[#].value string Value result.auxmetadata array Arbitrary metadata result.auxmetadata[#] object ... result.auxmetadata[#].key string Key result.auxmetadata[#].value string Value","title":"Result"},{"location":"api/PackageManagerAPI/#example_7","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.getmetadata\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"metadata\": { \"appname\": \"...\", \"type\": \"...\", \"category\": \"...\", \"url\": \"...\" }, \"resources\": [ { \"key\": \"...\", \"value\": \"...\" } ], \"auxmetadata\": [ { \"key\": \"...\", \"value\": \"...\" } ] } }","title":"Response"},{"location":"api/PackageManagerAPI/#cancel-method","text":"Cancel asynchronous request.","title":"cancel method"},{"location":"api/PackageManagerAPI/#parameters_8","text":"Name Type Description params object ... params.handle string Handle of the currently progressing operation (i.e, install/uninstal/download)","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_8","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/PackageManagerAPI/#example_8","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.cancel\", \"params\": { \"handle\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/PackageManagerAPI/#getprogress-method","text":"Estimated progress of a request.","title":"getprogress method"},{"location":"api/PackageManagerAPI/#parameters_9","text":"Name Type Description params object ... params.handle string Handle of the currently progressing operation (i.e, install/uninstal/download)","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_9","text":"Name Type Description result integer Indication of installation progress","title":"Result"},{"location":"api/PackageManagerAPI/#example_9","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.getprogress\", \"params\": { \"handle\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/PackageManagerAPI/#getlist-method","text":"List installed applications.","title":"getlist method"},{"location":"api/PackageManagerAPI/#parameters_10","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.appname string Application Name params.category string Category of the package","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_10","text":"Name Type Description result array Ids of Installed Package result[#] object ... result[#].id string Unique identifier of the package result[#].version string Version of the package","title":"Result"},{"location":"api/PackageManagerAPI/#example_10","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.getlist\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"appname\": \"...\", \"category\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"id\": \"...\", \"version\": \"...\" } ] }","title":"Response"},{"location":"api/PackageManagerAPI/#lock-method","text":"Lock the application. Preventing uninstallation.","title":"lock method"},{"location":"api/PackageManagerAPI/#parameters_11","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package params.reason string Reason to lock the application params.owner string Owner used to lock","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_11","text":"Name Type Description result string Handle to the lock that can be used to refer to it later. e.g. for unlock later","title":"Result"},{"location":"api/PackageManagerAPI/#example_11","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.lock\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"reason\": \"...\", \"owner\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Response"},{"location":"api/PackageManagerAPI/#unlock-method","text":"Unlock application.","title":"unlock method"},{"location":"api/PackageManagerAPI/#parameters_12","text":"Name Type Description params object ... params.handle string Handle got during the Lock, it is to be used to Unlock operation","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_12","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/PackageManagerAPI/#example_12","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.unlock\", \"params\": { \"handle\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/PackageManagerAPI/#getlockinfo-method","text":"Get lock info.","title":"getlockinfo method"},{"location":"api/PackageManagerAPI/#parameters_13","text":"Name Type Description params object ... params.type string Type of the package params.id string Id of the package params.version string Version of the package","title":"Parameters"},{"location":"api/PackageManagerAPI/#result_13","text":"Name Type Description result object Info about Lock result.reason string Reason of Locking result.owner string Owner of Locking","title":"Result"},{"location":"api/PackageManagerAPI/#example_13","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.getlockinfo\", \"params\": { \"type\": \"...\", \"id\": \"...\", \"version\": \"...\" } }","title":"Request"},{"location":"api/PackageManagerAPI/#response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"reason\": \"...\", \"owner\": \"...\" } }","title":"Response"},{"location":"api/PackageManagerAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the PackageManager interface: PackageManager interface events: Notification Description operationstatus Completion of asynchronous operation","title":"Notifications"},{"location":"api/PackageManagerAPI/#operationstatus-notification","text":"Completion of asynchronous operation.","title":"operationstatus notification"},{"location":"api/PackageManagerAPI/#parameters_14","text":"Name Type Description params object ... params.handle string Handle of the currently progressing operation (i.e, install/uninstal/download) params.operation string Type of the operation params.type string Type of the package params.id string Id of the package params.version string Version of the package params.status string Current status of the operation params.details string Details about the operation","title":"Parameters"},{"location":"api/PackageManagerAPI/#example_14","text":"","title":"Example"},{"location":"api/PackageManagerAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PackageManager.1.register\", \"params\": { \"event\": \"operationstatus\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/PackageManagerAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.operationstatus\", \"params\": { \"handle\": \"...\", \"operation\": \"...\", \"type\": \"...\", \"id\": \"...\", \"version\": \"...\", \"status\": \"...\", \"details\": \"...\" } }","title":"Message"},{"location":"api/PackagerAPI/","text":"Packager API Version: 1.0.0 Status: Packager interface for Thunder framework. (Defined by Packager.json ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the Packager interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Packager JSON-RPC interface. Methods The following methods are provided by the Packager interface: Packager interface methods: Method Description install Installs a package given by a name, an URL or a file path synchronize Synchronizes repository manifest with a repository install method Installs a package given by a name, an URL or a file path. Parameters Name Type Description params object ... params.package string A name, an URL or a file path of the package to install params?.version string (optional) Version of the package to install params?.architecture string (optional) Architecture of the package to install Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress. Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.install\", \"params\": { \"package\": \"thunder-plugin-netflix\", \"version\": \"1.0\", \"architecture\": \"arm\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } synchronize method Synchronizes repository manifest with a repository. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress. Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.synchronize\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Packager API"},{"location":"api/PackagerAPI/#packager-api","text":"Version: 1.0.0 Status: Packager interface for Thunder framework. (Defined by Packager.json )","title":"Packager API"},{"location":"api/PackagerAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/PackagerAPI/#introduction","text":"","title":"Introduction"},{"location":"api/PackagerAPI/#scope","text":"This document describes purpose and functionality of the Packager interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/PackagerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/PackagerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/PackagerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/PackagerAPI/#description","text":"Packager JSON-RPC interface.","title":"Description"},{"location":"api/PackagerAPI/#methods","text":"The following methods are provided by the Packager interface: Packager interface methods: Method Description install Installs a package given by a name, an URL or a file path synchronize Synchronizes repository manifest with a repository","title":"Methods"},{"location":"api/PackagerAPI/#install-method","text":"Installs a package given by a name, an URL or a file path.","title":"install method"},{"location":"api/PackagerAPI/#parameters","text":"Name Type Description params object ... params.package string A name, an URL or a file path of the package to install params?.version string (optional) Version of the package to install params?.architecture string (optional) Architecture of the package to install","title":"Parameters"},{"location":"api/PackagerAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/PackagerAPI/#errors","text":"Message Description ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress.","title":"Errors"},{"location":"api/PackagerAPI/#example","text":"","title":"Example"},{"location":"api/PackagerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.install\", \"params\": { \"package\": \"thunder-plugin-netflix\", \"version\": \"1.0\", \"architecture\": \"arm\" } }","title":"Request"},{"location":"api/PackagerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/PackagerAPI/#synchronize-method","text":"Synchronizes repository manifest with a repository.","title":"synchronize method"},{"location":"api/PackagerAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/PackagerAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/PackagerAPI/#errors_1","text":"Message Description ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress.","title":"Errors"},{"location":"api/PackagerAPI/#example_1","text":"","title":"Example"},{"location":"api/PackagerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.synchronize\" }","title":"Request"},{"location":"api/PackagerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/PerformanceMonitorAPI/","text":"Performance Monitor API Version: 1.0.0 Status: PerformanceMonitor interface for Thunder framework. (Defined by PerformanceMonitor.json ) Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the PerformanceMonitor interface (version 1.0.0). It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Performance Monitor JSON-RPC interface. Methods The following methods are provided by the PerformanceMonitor interface: PerformanceMonitor interface methods: Method Description clear Clear all performance data collected send Interface to test send data receive Interface to test receive data exchange Interface to test exchange data clear method Clear all performance data collected. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.clear\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } send method Interface to test send data. Parameters Name Type Description params object ... params?.data string (optional) Any string data upto the size specified in the length params?.length integer (optional) Size of the data params?.duration integer (optional) Duration of the measurements Result Name Type Description result integer Size of data received by the jsonrpc interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.send\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } receive method Interface to test receive data. Parameters Name Type Description params integer Size of data to be provided by the jsonrpc interface Result Name Type Description result object ... result?.data string (optional) Any string data upto the size specified in the length result?.length integer (optional) Size of the data result?.duration integer (optional) Duration of the measurements Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.receive\", \"params\": 0 } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } exchange method Interface to test exchange data. Parameters Name Type Description params object ... params?.data string (optional) Any string data upto the size specified in the length params?.length integer (optional) Size of the data params?.duration integer (optional) Duration of the measurements Result Name Type Description result object ... result?.data string (optional) Any string data upto the size specified in the length result?.length integer (optional) Size of the data result?.duration integer (optional) Duration of the measurements Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.exchange\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Properties The following properties are provided by the PerformanceMonitor interface: PerformanceMonitor interface properties: Property Description measurement (read-only) Retrieve the performance measurement against given package size measurement property Provides access to the retrieve the performance measurement against given package size. Measurements will be provided in milliseconds. This property is read-only . Value Name Type Description (property) object Retrieve the performance measurement against given package size. Measurements will be provided in milliseconds (property).serialization object Time taken to complete serialization (property).serialization?.minimum integer (optional) Minimum value of measurements (property).serialization?.maximum integer (optional) Maximum value of measurements (property).serialization?.average integer (optional) Average value of measurements (property).serialization?.count integer (optional) How many times measurement has been collected (property).deserialization object Time taken to complete deserialization (property).deserialization?.minimum integer (optional) Minimum value of measurements (property).deserialization?.maximum integer (optional) Maximum value of measurements (property).deserialization?.average integer (optional) Average value of measurements (property).deserialization?.count integer (optional) How many times measurement has been collected (property).execution object Time taken to complete execution (property).execution?.minimum integer (optional) Minimum value of measurements (property).execution?.maximum integer (optional) Maximum value of measurements (property).execution?.average integer (optional) Average value of measurements (property).execution?.count integer (optional) How many times measurement has been collected (property).threadpool object Time taken to complete threadpool wait (property).threadpool?.minimum integer (optional) Minimum value of measurements (property).threadpool?.maximum integer (optional) Maximum value of measurements (property).threadpool?.average integer (optional) Average value of measurements (property).threadpool?.count integer (optional) How many times measurement has been collected (property).communication object Time taken to complete communication (property).communication?.minimum integer (optional) Minimum value of measurements (property).communication?.maximum integer (optional) Maximum value of measurements (property).communication?.average integer (optional) Average value of measurements (property).communication?.count integer (optional) How many times measurement has been collected (property).total object Time taken to complete whole jsonrpc process (property).total?.minimum integer (optional) Minimum value of measurements (property).total?.maximum integer (optional) Maximum value of measurements (property).total?.average integer (optional) Average value of measurements (property).total?.count integer (optional) How many times measurement has been collected The package size argument shall be passed as the index to the property, e.g. PerformanceMonitor.1.measurement@<package size> . Size of package whose statistics info has to be retrieved. Result Name Type Description result null Always null (default: None ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.measurement@1000\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Performance Monitor API"},{"location":"api/PerformanceMonitorAPI/#performance-monitor-api","text":"Version: 1.0.0 Status: PerformanceMonitor interface for Thunder framework. (Defined by PerformanceMonitor.json )","title":"Performance Monitor API"},{"location":"api/PerformanceMonitorAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"api/PerformanceMonitorAPI/#introduction","text":"","title":"Introduction"},{"location":"api/PerformanceMonitorAPI/#scope","text":"This document describes purpose and functionality of the PerformanceMonitor interface (version 1.0.0). It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"api/PerformanceMonitorAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/PerformanceMonitorAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/PerformanceMonitorAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/PerformanceMonitorAPI/#description","text":"Performance Monitor JSON-RPC interface.","title":"Description"},{"location":"api/PerformanceMonitorAPI/#methods","text":"The following methods are provided by the PerformanceMonitor interface: PerformanceMonitor interface methods: Method Description clear Clear all performance data collected send Interface to test send data receive Interface to test receive data exchange Interface to test exchange data","title":"Methods"},{"location":"api/PerformanceMonitorAPI/#clear-method","text":"Clear all performance data collected.","title":"clear method"},{"location":"api/PerformanceMonitorAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/PerformanceMonitorAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/PerformanceMonitorAPI/#example","text":"","title":"Example"},{"location":"api/PerformanceMonitorAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.clear\" }","title":"Request"},{"location":"api/PerformanceMonitorAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/PerformanceMonitorAPI/#send-method","text":"Interface to test send data.","title":"send method"},{"location":"api/PerformanceMonitorAPI/#parameters_1","text":"Name Type Description params object ... params?.data string (optional) Any string data upto the size specified in the length params?.length integer (optional) Size of the data params?.duration integer (optional) Duration of the measurements","title":"Parameters"},{"location":"api/PerformanceMonitorAPI/#result_1","text":"Name Type Description result integer Size of data received by the jsonrpc interface","title":"Result"},{"location":"api/PerformanceMonitorAPI/#example_1","text":"","title":"Example"},{"location":"api/PerformanceMonitorAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.send\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Request"},{"location":"api/PerformanceMonitorAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/PerformanceMonitorAPI/#receive-method","text":"Interface to test receive data.","title":"receive method"},{"location":"api/PerformanceMonitorAPI/#parameters_2","text":"Name Type Description params integer Size of data to be provided by the jsonrpc interface","title":"Parameters"},{"location":"api/PerformanceMonitorAPI/#result_2","text":"Name Type Description result object ... result?.data string (optional) Any string data upto the size specified in the length result?.length integer (optional) Size of the data result?.duration integer (optional) Duration of the measurements","title":"Result"},{"location":"api/PerformanceMonitorAPI/#example_2","text":"","title":"Example"},{"location":"api/PerformanceMonitorAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.receive\", \"params\": 0 }","title":"Request"},{"location":"api/PerformanceMonitorAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Response"},{"location":"api/PerformanceMonitorAPI/#exchange-method","text":"Interface to test exchange data.","title":"exchange method"},{"location":"api/PerformanceMonitorAPI/#parameters_3","text":"Name Type Description params object ... params?.data string (optional) Any string data upto the size specified in the length params?.length integer (optional) Size of the data params?.duration integer (optional) Duration of the measurements","title":"Parameters"},{"location":"api/PerformanceMonitorAPI/#result_3","text":"Name Type Description result object ... result?.data string (optional) Any string data upto the size specified in the length result?.length integer (optional) Size of the data result?.duration integer (optional) Duration of the measurements","title":"Result"},{"location":"api/PerformanceMonitorAPI/#example_3","text":"","title":"Example"},{"location":"api/PerformanceMonitorAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.exchange\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Request"},{"location":"api/PerformanceMonitorAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Response"},{"location":"api/PerformanceMonitorAPI/#properties","text":"The following properties are provided by the PerformanceMonitor interface: PerformanceMonitor interface properties: Property Description measurement (read-only) Retrieve the performance measurement against given package size","title":"Properties"},{"location":"api/PerformanceMonitorAPI/#measurement-property","text":"Provides access to the retrieve the performance measurement against given package size. Measurements will be provided in milliseconds. This property is read-only .","title":"measurement property"},{"location":"api/PerformanceMonitorAPI/#value","text":"Name Type Description (property) object Retrieve the performance measurement against given package size. Measurements will be provided in milliseconds (property).serialization object Time taken to complete serialization (property).serialization?.minimum integer (optional) Minimum value of measurements (property).serialization?.maximum integer (optional) Maximum value of measurements (property).serialization?.average integer (optional) Average value of measurements (property).serialization?.count integer (optional) How many times measurement has been collected (property).deserialization object Time taken to complete deserialization (property).deserialization?.minimum integer (optional) Minimum value of measurements (property).deserialization?.maximum integer (optional) Maximum value of measurements (property).deserialization?.average integer (optional) Average value of measurements (property).deserialization?.count integer (optional) How many times measurement has been collected (property).execution object Time taken to complete execution (property).execution?.minimum integer (optional) Minimum value of measurements (property).execution?.maximum integer (optional) Maximum value of measurements (property).execution?.average integer (optional) Average value of measurements (property).execution?.count integer (optional) How many times measurement has been collected (property).threadpool object Time taken to complete threadpool wait (property).threadpool?.minimum integer (optional) Minimum value of measurements (property).threadpool?.maximum integer (optional) Maximum value of measurements (property).threadpool?.average integer (optional) Average value of measurements (property).threadpool?.count integer (optional) How many times measurement has been collected (property).communication object Time taken to complete communication (property).communication?.minimum integer (optional) Minimum value of measurements (property).communication?.maximum integer (optional) Maximum value of measurements (property).communication?.average integer (optional) Average value of measurements (property).communication?.count integer (optional) How many times measurement has been collected (property).total object Time taken to complete whole jsonrpc process (property).total?.minimum integer (optional) Minimum value of measurements (property).total?.maximum integer (optional) Maximum value of measurements (property).total?.average integer (optional) Average value of measurements (property).total?.count integer (optional) How many times measurement has been collected The package size argument shall be passed as the index to the property, e.g. PerformanceMonitor.1.measurement@<package size> . Size of package whose statistics info has to be retrieved.","title":"Value"},{"location":"api/PerformanceMonitorAPI/#result_4","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/PerformanceMonitorAPI/#example_4","text":"","title":"Example"},{"location":"api/PerformanceMonitorAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.measurement@1000\" }","title":"Get Request"},{"location":"api/PerformanceMonitorAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Get Response"},{"location":"api/PertsistentStoreAPI/","text":"PertsistentStore API Version: 1.0.0 Status: PersistentStore interface for Thunder framework. (Defined by PersistentStore.json ) Table of Contents Introduction Description Methods Notifications Introduction Scope This document describes purpose and functionality of the PersistentStore interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Persistent Store JSON-RPC interface. Methods The following methods are provided by the PersistentStore interface: PersistentStore interface methods: Method Description deleteKey Deletes a key from the specified namespace deleteNamespace Deletes the specified namespace flushCache Flushes the device cache getKeys Returns the keys that are stored in the specified namespace getNamespaces Returns the namespaces getStorageSizes Returns the size occupied by each namespace getValue Returns the value of a key from the specified namespace setValue Sets the value of a key in the the specified namespace setNamespaceStorageLimit Sets the storage limit for a given namespace getNamespaceStorageLimit Returns the storage limit for a given namespace deleteKey method Deletes a key from the specified namespace. Parameters Name Type Description params object ... params.namespace string Namespace params.key string Key params?.scope string (optional) Scope (default: device ) Result Name Type Description result object ... result.success boolean Legacy parameter (always true) (default: True ) Errors Message Description ERROR_GENERAL Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.deleteKey\", \"params\": { \"namespace\": \"ns1\", \"key\": \"key1\", \"scope\": \"device\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"success\": true } } deleteNamespace method Deletes the specified namespace. Parameters Name Type Description params object ... params.namespace string Namespace params?.scope string (optional) Scope (default: device ) Result Name Type Description result object ... result.success boolean Legacy parameter (always true) (default: True ) Errors Message Description ERROR_GENERAL Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.deleteNamespace\", \"params\": { \"namespace\": \"ns1\", \"scope\": \"device\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"success\": true } } flushCache method Flushes the device cache. Parameters This method takes no parameters. Result Name Type Description result object ... result.success boolean Legacy parameter (always true) (default: True ) Errors Message Description ERROR_GENERAL Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.flushCache\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"success\": true } } getKeys method Returns the keys that are stored in the specified namespace. Parameters Name Type Description params object ... params.namespace string Namespace params?.scope string (optional) Scope (default: device ) Result Name Type Description result object ... result.keys array ... result.keys[#] string Key result.success boolean Legacy parameter (always true) (default: True ) Errors Message Description ERROR_GENERAL Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.getKeys\", \"params\": { \"namespace\": \"ns1\", \"scope\": \"device\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"keys\": [ \"key1\" ], \"success\": true } } getNamespaces method Returns the namespaces. Parameters Name Type Description params object ... params?.scope string (optional) Scope (default: device ) Result Name Type Description result object ... result.namespaces array ... result.namespaces[#] string Namespace result.success boolean Legacy parameter (always true) (default: True ) Errors Message Description ERROR_GENERAL Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.getNamespaces\", \"params\": { \"scope\": \"device\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"namespaces\": [ \"ns1\" ], \"success\": true } } getStorageSizes method Returns the size occupied by each namespace. Parameters Name Type Description params object ... params?.scope string (optional) Scope (default: device ) Result Name Type Description result object ... result.storageList array ... result.storageList[#] object ... result.storageList[#].namespace string Namespace result.storageList[#].size integer Size in bytes Errors Message Description ERROR_GENERAL Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.getStorageSizes\", \"params\": { \"scope\": \"device\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"storageList\": [ { \"namespace\": \"ns1\", \"size\": 100 } ] } } getValue method Returns the value of a key from the specified namespace. Parameters Name Type Description params object ... params.namespace string Namespace params.key string Key params?.scope string (optional) Scope (default: device ) Result Name Type Description result object ... result.value string Value result.success boolean Legacy parameter (always true) (default: True ) result?.ttl integer (optional) Time in seconds Errors Message Description ERROR_PENDING_CONDITIONS Time is not synced ERROR_NOT_EXIST Unknown namespace ERROR_UNKNOWN_KEY Unknown key ERROR_GENERAL Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.getValue\", \"params\": { \"namespace\": \"ns1\", \"key\": \"key1\", \"scope\": \"device\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"value\": \"value1\", \"success\": true, \"ttl\": 100 } } setValue method Sets the value of a key in the the specified namespace. Parameters Name Type Description params object ... params.namespace string Namespace params.key string Key params.value string Value params?.scope string (optional) Scope (default: device ) params?.ttl integer (optional) Time in seconds Result Name Type Description result object ... result.success boolean Legacy parameter (always true) (default: True ) Errors Message Description ERROR_PENDING_CONDITIONS Time is not synced ERROR_INVALID_INPUT_LENGTH Empty/too large namespace or key, or the storage doesn't have enough space ERROR_GENERAL Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.setValue\", \"params\": { \"namespace\": \"ns1\", \"key\": \"key1\", \"value\": \"value1\", \"scope\": \"device\", \"ttl\": 100 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"success\": true } } setNamespaceStorageLimit method Sets the storage limit for a given namespace. Parameters Name Type Description params object ... params.namespace string Namespace params.storageLimit integer Size in bytes params?.scope string (optional) Scope (default: device ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INVALID_INPUT_LENGTH Empty/too large namespace, or the storage doesn't have enough space ERROR_GENERAL Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.setNamespaceStorageLimit\", \"params\": { \"namespace\": \"ns1\", \"storageLimit\": 100, \"scope\": \"device\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } getNamespaceStorageLimit method Returns the storage limit for a given namespace. Parameters Name Type Description params object ... params.namespace string Namespace params?.scope string (optional) Scope (default: device ) Result Name Type Description result object ... result.storageLimit integer Size in bytes Errors Message Description ERROR_NOT_EXIST Unknown namespace ERROR_GENERAL Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.getNamespaceStorageLimit\", \"params\": { \"namespace\": \"ns1\", \"scope\": \"device\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"storageLimit\": 100 } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the PersistentStore interface: PersistentStore interface events: Notification Description onValueChanged Triggered whenever any of the values stored are changed using setValue onValueChanged notification Triggered whenever any of the values stored are changed using setValue. Parameters Name Type Description params object ... params.namespace string Namespace params.key string Key params.value string Value params.scope string Scope (default: device ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.register\", \"params\": { \"event\": \"onValueChanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.onValueChanged\", \"params\": { \"namespace\": \"ns1\", \"key\": \"key1\", \"value\": \"value1\", \"scope\": \"device\" } }","title":"PertsistentStore API"},{"location":"api/PertsistentStoreAPI/#pertsistentstore-api","text":"Version: 1.0.0 Status: PersistentStore interface for Thunder framework. (Defined by PersistentStore.json )","title":"PertsistentStore API"},{"location":"api/PertsistentStoreAPI/#table-of-contents","text":"Introduction Description Methods Notifications","title":"Table of Contents"},{"location":"api/PertsistentStoreAPI/#introduction","text":"","title":"Introduction"},{"location":"api/PertsistentStoreAPI/#scope","text":"This document describes purpose and functionality of the PersistentStore interface (version 1.0.0). It includes detailed specification about its methods provided and notifications sent.","title":"Scope"},{"location":"api/PertsistentStoreAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/PertsistentStoreAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/PertsistentStoreAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/PertsistentStoreAPI/#description","text":"Persistent Store JSON-RPC interface.","title":"Description"},{"location":"api/PertsistentStoreAPI/#methods","text":"The following methods are provided by the PersistentStore interface: PersistentStore interface methods: Method Description deleteKey Deletes a key from the specified namespace deleteNamespace Deletes the specified namespace flushCache Flushes the device cache getKeys Returns the keys that are stored in the specified namespace getNamespaces Returns the namespaces getStorageSizes Returns the size occupied by each namespace getValue Returns the value of a key from the specified namespace setValue Sets the value of a key in the the specified namespace setNamespaceStorageLimit Sets the storage limit for a given namespace getNamespaceStorageLimit Returns the storage limit for a given namespace","title":"Methods"},{"location":"api/PertsistentStoreAPI/#deletekey-method","text":"Deletes a key from the specified namespace.","title":"deleteKey method"},{"location":"api/PertsistentStoreAPI/#parameters","text":"Name Type Description params object ... params.namespace string Namespace params.key string Key params?.scope string (optional) Scope (default: device )","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#result","text":"Name Type Description result object ... result.success boolean Legacy parameter (always true) (default: True )","title":"Result"},{"location":"api/PertsistentStoreAPI/#errors","text":"Message Description ERROR_GENERAL Unknown error","title":"Errors"},{"location":"api/PertsistentStoreAPI/#example","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.deleteKey\", \"params\": { \"namespace\": \"ns1\", \"key\": \"key1\", \"scope\": \"device\" } }","title":"Request"},{"location":"api/PertsistentStoreAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"success\": true } }","title":"Response"},{"location":"api/PertsistentStoreAPI/#deletenamespace-method","text":"Deletes the specified namespace.","title":"deleteNamespace method"},{"location":"api/PertsistentStoreAPI/#parameters_1","text":"Name Type Description params object ... params.namespace string Namespace params?.scope string (optional) Scope (default: device )","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#result_1","text":"Name Type Description result object ... result.success boolean Legacy parameter (always true) (default: True )","title":"Result"},{"location":"api/PertsistentStoreAPI/#errors_1","text":"Message Description ERROR_GENERAL Unknown error","title":"Errors"},{"location":"api/PertsistentStoreAPI/#example_1","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.deleteNamespace\", \"params\": { \"namespace\": \"ns1\", \"scope\": \"device\" } }","title":"Request"},{"location":"api/PertsistentStoreAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"success\": true } }","title":"Response"},{"location":"api/PertsistentStoreAPI/#flushcache-method","text":"Flushes the device cache.","title":"flushCache method"},{"location":"api/PertsistentStoreAPI/#parameters_2","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#result_2","text":"Name Type Description result object ... result.success boolean Legacy parameter (always true) (default: True )","title":"Result"},{"location":"api/PertsistentStoreAPI/#errors_2","text":"Message Description ERROR_GENERAL Unknown error","title":"Errors"},{"location":"api/PertsistentStoreAPI/#example_2","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.flushCache\" }","title":"Request"},{"location":"api/PertsistentStoreAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"success\": true } }","title":"Response"},{"location":"api/PertsistentStoreAPI/#getkeys-method","text":"Returns the keys that are stored in the specified namespace.","title":"getKeys method"},{"location":"api/PertsistentStoreAPI/#parameters_3","text":"Name Type Description params object ... params.namespace string Namespace params?.scope string (optional) Scope (default: device )","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#result_3","text":"Name Type Description result object ... result.keys array ... result.keys[#] string Key result.success boolean Legacy parameter (always true) (default: True )","title":"Result"},{"location":"api/PertsistentStoreAPI/#errors_3","text":"Message Description ERROR_GENERAL Unknown error","title":"Errors"},{"location":"api/PertsistentStoreAPI/#example_3","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.getKeys\", \"params\": { \"namespace\": \"ns1\", \"scope\": \"device\" } }","title":"Request"},{"location":"api/PertsistentStoreAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"keys\": [ \"key1\" ], \"success\": true } }","title":"Response"},{"location":"api/PertsistentStoreAPI/#getnamespaces-method","text":"Returns the namespaces.","title":"getNamespaces method"},{"location":"api/PertsistentStoreAPI/#parameters_4","text":"Name Type Description params object ... params?.scope string (optional) Scope (default: device )","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#result_4","text":"Name Type Description result object ... result.namespaces array ... result.namespaces[#] string Namespace result.success boolean Legacy parameter (always true) (default: True )","title":"Result"},{"location":"api/PertsistentStoreAPI/#errors_4","text":"Message Description ERROR_GENERAL Unknown error","title":"Errors"},{"location":"api/PertsistentStoreAPI/#example_4","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.getNamespaces\", \"params\": { \"scope\": \"device\" } }","title":"Request"},{"location":"api/PertsistentStoreAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"namespaces\": [ \"ns1\" ], \"success\": true } }","title":"Response"},{"location":"api/PertsistentStoreAPI/#getstoragesizes-method","text":"Returns the size occupied by each namespace.","title":"getStorageSizes method"},{"location":"api/PertsistentStoreAPI/#parameters_5","text":"Name Type Description params object ... params?.scope string (optional) Scope (default: device )","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#result_5","text":"Name Type Description result object ... result.storageList array ... result.storageList[#] object ... result.storageList[#].namespace string Namespace result.storageList[#].size integer Size in bytes","title":"Result"},{"location":"api/PertsistentStoreAPI/#errors_5","text":"Message Description ERROR_GENERAL Unknown error","title":"Errors"},{"location":"api/PertsistentStoreAPI/#example_5","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.getStorageSizes\", \"params\": { \"scope\": \"device\" } }","title":"Request"},{"location":"api/PertsistentStoreAPI/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"storageList\": [ { \"namespace\": \"ns1\", \"size\": 100 } ] } }","title":"Response"},{"location":"api/PertsistentStoreAPI/#getvalue-method","text":"Returns the value of a key from the specified namespace.","title":"getValue method"},{"location":"api/PertsistentStoreAPI/#parameters_6","text":"Name Type Description params object ... params.namespace string Namespace params.key string Key params?.scope string (optional) Scope (default: device )","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#result_6","text":"Name Type Description result object ... result.value string Value result.success boolean Legacy parameter (always true) (default: True ) result?.ttl integer (optional) Time in seconds","title":"Result"},{"location":"api/PertsistentStoreAPI/#errors_6","text":"Message Description ERROR_PENDING_CONDITIONS Time is not synced ERROR_NOT_EXIST Unknown namespace ERROR_UNKNOWN_KEY Unknown key ERROR_GENERAL Unknown error","title":"Errors"},{"location":"api/PertsistentStoreAPI/#example_6","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.getValue\", \"params\": { \"namespace\": \"ns1\", \"key\": \"key1\", \"scope\": \"device\" } }","title":"Request"},{"location":"api/PertsistentStoreAPI/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"value\": \"value1\", \"success\": true, \"ttl\": 100 } }","title":"Response"},{"location":"api/PertsistentStoreAPI/#setvalue-method","text":"Sets the value of a key in the the specified namespace.","title":"setValue method"},{"location":"api/PertsistentStoreAPI/#parameters_7","text":"Name Type Description params object ... params.namespace string Namespace params.key string Key params.value string Value params?.scope string (optional) Scope (default: device ) params?.ttl integer (optional) Time in seconds","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#result_7","text":"Name Type Description result object ... result.success boolean Legacy parameter (always true) (default: True )","title":"Result"},{"location":"api/PertsistentStoreAPI/#errors_7","text":"Message Description ERROR_PENDING_CONDITIONS Time is not synced ERROR_INVALID_INPUT_LENGTH Empty/too large namespace or key, or the storage doesn't have enough space ERROR_GENERAL Unknown error","title":"Errors"},{"location":"api/PertsistentStoreAPI/#example_7","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.setValue\", \"params\": { \"namespace\": \"ns1\", \"key\": \"key1\", \"value\": \"value1\", \"scope\": \"device\", \"ttl\": 100 } }","title":"Request"},{"location":"api/PertsistentStoreAPI/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"success\": true } }","title":"Response"},{"location":"api/PertsistentStoreAPI/#setnamespacestoragelimit-method","text":"Sets the storage limit for a given namespace.","title":"setNamespaceStorageLimit method"},{"location":"api/PertsistentStoreAPI/#parameters_8","text":"Name Type Description params object ... params.namespace string Namespace params.storageLimit integer Size in bytes params?.scope string (optional) Scope (default: device )","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#result_8","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/PertsistentStoreAPI/#errors_8","text":"Message Description ERROR_INVALID_INPUT_LENGTH Empty/too large namespace, or the storage doesn't have enough space ERROR_GENERAL Unknown error","title":"Errors"},{"location":"api/PertsistentStoreAPI/#example_8","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.setNamespaceStorageLimit\", \"params\": { \"namespace\": \"ns1\", \"storageLimit\": 100, \"scope\": \"device\" } }","title":"Request"},{"location":"api/PertsistentStoreAPI/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/PertsistentStoreAPI/#getnamespacestoragelimit-method","text":"Returns the storage limit for a given namespace.","title":"getNamespaceStorageLimit method"},{"location":"api/PertsistentStoreAPI/#parameters_9","text":"Name Type Description params object ... params.namespace string Namespace params?.scope string (optional) Scope (default: device )","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#result_9","text":"Name Type Description result object ... result.storageLimit integer Size in bytes","title":"Result"},{"location":"api/PertsistentStoreAPI/#errors_9","text":"Message Description ERROR_NOT_EXIST Unknown namespace ERROR_GENERAL Unknown error","title":"Errors"},{"location":"api/PertsistentStoreAPI/#example_9","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.getNamespaceStorageLimit\", \"params\": { \"namespace\": \"ns1\", \"scope\": \"device\" } }","title":"Request"},{"location":"api/PertsistentStoreAPI/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"storageLimit\": 100 } }","title":"Response"},{"location":"api/PertsistentStoreAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the PersistentStore interface: PersistentStore interface events: Notification Description onValueChanged Triggered whenever any of the values stored are changed using setValue","title":"Notifications"},{"location":"api/PertsistentStoreAPI/#onvaluechanged-notification","text":"Triggered whenever any of the values stored are changed using setValue.","title":"onValueChanged notification"},{"location":"api/PertsistentStoreAPI/#parameters_10","text":"Name Type Description params object ... params.namespace string Namespace params.key string Key params.value string Value params.scope string Scope (default: device )","title":"Parameters"},{"location":"api/PertsistentStoreAPI/#example_10","text":"","title":"Example"},{"location":"api/PertsistentStoreAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PersistentStore.1.register\", \"params\": { \"event\": \"onValueChanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/PertsistentStoreAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.onValueChanged\", \"params\": { \"namespace\": \"ns1\", \"key\": \"key1\", \"value\": \"value1\", \"scope\": \"device\" } }","title":"Message"},{"location":"api/PlayerInfoAPI/","text":"Player Info API Version: 1.0.0 Status: PlayerInfo interface for Thunder framework. (Defined by PlayerInfo.json ) Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the PlayerInfo interface (version 1.0.0). It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description PlayerInfo JSON-RPC interface. Properties The following properties are provided by the PlayerInfo interface: PlayerInfo interface properties: Property Description playerinfo (read-only) Player general information dolbymode Dolby output mode playerinfo property Provides access to the player general information. This property is read-only . Value Result Name Type Description result object Player general information result?.audio array (optional) List of Audio Codec supported by the platform result?.audio[#] string (optional) Audio Codec supported by the platform result?.video array (optional) List of Video Codec supported by the platform result?.video[#] string (optional) Video Codec supported by the platform Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.playerinfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"audio\": [ \"AudioAAC\" ], \"video\": [ \"VideoH264\" ] } } dolbymode property Provides access to the dolby output mode. Value Name Type Description (property) object Dolby output mode (property).value string Dolby mode supported by the platform Result Name Type Description result string Dolby mode supported by the platform Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DIGITAL_PCM\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\", \"params\": { \"value\": \"DIGITAL_PCM\" } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Player Info API"},{"location":"api/PlayerInfoAPI/#player-info-api","text":"Version: 1.0.0 Status: PlayerInfo interface for Thunder framework. (Defined by PlayerInfo.json )","title":"Player Info API"},{"location":"api/PlayerInfoAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"api/PlayerInfoAPI/#introduction","text":"","title":"Introduction"},{"location":"api/PlayerInfoAPI/#scope","text":"This document describes purpose and functionality of the PlayerInfo interface (version 1.0.0). It includes detailed specification about its properties provided.","title":"Scope"},{"location":"api/PlayerInfoAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/PlayerInfoAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/PlayerInfoAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/PlayerInfoAPI/#description","text":"PlayerInfo JSON-RPC interface.","title":"Description"},{"location":"api/PlayerInfoAPI/#properties","text":"The following properties are provided by the PlayerInfo interface: PlayerInfo interface properties: Property Description playerinfo (read-only) Player general information dolbymode Dolby output mode","title":"Properties"},{"location":"api/PlayerInfoAPI/#playerinfo-property","text":"Provides access to the player general information. This property is read-only .","title":"playerinfo property"},{"location":"api/PlayerInfoAPI/#value","text":"","title":"Value"},{"location":"api/PlayerInfoAPI/#result","text":"Name Type Description result object Player general information result?.audio array (optional) List of Audio Codec supported by the platform result?.audio[#] string (optional) Audio Codec supported by the platform result?.video array (optional) List of Video Codec supported by the platform result?.video[#] string (optional) Video Codec supported by the platform","title":"Result"},{"location":"api/PlayerInfoAPI/#example","text":"","title":"Example"},{"location":"api/PlayerInfoAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.playerinfo\" }","title":"Get Request"},{"location":"api/PlayerInfoAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"audio\": [ \"AudioAAC\" ], \"video\": [ \"VideoH264\" ] } }","title":"Get Response"},{"location":"api/PlayerInfoAPI/#dolbymode-property","text":"Provides access to the dolby output mode.","title":"dolbymode property"},{"location":"api/PlayerInfoAPI/#value_1","text":"Name Type Description (property) object Dolby output mode (property).value string Dolby mode supported by the platform","title":"Value"},{"location":"api/PlayerInfoAPI/#result_1","text":"Name Type Description result string Dolby mode supported by the platform","title":"Result"},{"location":"api/PlayerInfoAPI/#example_1","text":"","title":"Example"},{"location":"api/PlayerInfoAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\" }","title":"Get Request"},{"location":"api/PlayerInfoAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DIGITAL_PCM\" }","title":"Get Response"},{"location":"api/PlayerInfoAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\", \"params\": { \"value\": \"DIGITAL_PCM\" } }","title":"Set Request"},{"location":"api/PlayerInfoAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/PlayerPropertiesAPI/","text":"PlayerProperties API Version: 1.0.0 Status: PlayerProperties interface for Thunder framework. (Defined with IPlayerProperties in IPlayerInfo.h ) Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the PlayerProperties interface (version 1.0.0). It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description PlayerProperties JSON-RPC interface. Properties The following properties are provided by the PlayerProperties interface: PlayerProperties interface properties: Property Description audiocodecs (read-only) Query Audio Codecs List videocodecs (read-only) Query Video Codecs List resolution (read-only) Current Video playback resolution isaudioequivalenceenabled (read-only) Checks Loudness Equivalence in platform audiocodecs property Provides access to the query Audio Codecs List. This property is read-only . Value Result Name Type Description result array Query Audio Codecs List result[#] string ... (must be one of the following: AudioAac, AudioAc3, AudioAc3Plus, AudioDts, AudioMpeg1, AudioMpeg2, AudioMpeg3, AudioMpeg4, AudioOpus, AudioUndefined, AudioVorbisOgg, AudioWav ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.audiocodecs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"AudioUndefined\" ] } videocodecs property Provides access to the query Video Codecs List. This property is read-only . Value Result Name Type Description result array Query Video Codecs List result[#] string ... (must be one of the following: VideoH263, VideoH264, VideoH265, VideoH26510, VideoMpeg, VideoMpeg2, VideoMpeg4, VideoUndefined, VideoVp10, VideoVp8, VideoVp9 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.videocodecs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"VideoUndefined\" ] } resolution property Provides access to the current Video playback resolution. This property is read-only . Value Result Name Type Description result string Current Video playback resolution (must be one of the following: Resolution1080I, Resolution1080I24, Resolution1080I25, Resolution1080I30, Resolution1080I50, Resolution1080P, Resolution1080P24, Resolution1080P25, Resolution1080P30, Resolution1080P50, Resolution2160P, Resolution2160P24, Resolution2160P25, Resolution2160P30, Resolution2160P50, Resolution2160P60, Resolution480I, Resolution480I24, Resolution480I25, Resolution480I30, Resolution480I50, Resolution480P, Resolution480P24, Resolution480P25, Resolution480P30, Resolution480P50, Resolution576I, Resolution576I24, Resolution576I25, Resolution576I30, Resolution576I50, Resolution576P, Resolution576P24, Resolution576P25, Resolution576P30, Resolution576P50, Resolution720P, Resolution720P24, Resolution720P25, Resolution720P30, Resolution720P50, ResolutionUnknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.resolution\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ResolutionUnknown\" } isaudioequivalenceenabled property Provides access to the checks Loudness Equivalence in platform. This property is read-only . Value Result Name Type Description result boolean Checks Loudness Equivalence in platform Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.isaudioequivalenceenabled\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"PlayerProperties API"},{"location":"api/PlayerPropertiesAPI/#playerproperties-api","text":"Version: 1.0.0 Status: PlayerProperties interface for Thunder framework. (Defined with IPlayerProperties in IPlayerInfo.h )","title":"PlayerProperties API"},{"location":"api/PlayerPropertiesAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"api/PlayerPropertiesAPI/#introduction","text":"","title":"Introduction"},{"location":"api/PlayerPropertiesAPI/#scope","text":"This document describes purpose and functionality of the PlayerProperties interface (version 1.0.0). It includes detailed specification about its properties provided.","title":"Scope"},{"location":"api/PlayerPropertiesAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/PlayerPropertiesAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/PlayerPropertiesAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/PlayerPropertiesAPI/#description","text":"PlayerProperties JSON-RPC interface.","title":"Description"},{"location":"api/PlayerPropertiesAPI/#properties","text":"The following properties are provided by the PlayerProperties interface: PlayerProperties interface properties: Property Description audiocodecs (read-only) Query Audio Codecs List videocodecs (read-only) Query Video Codecs List resolution (read-only) Current Video playback resolution isaudioequivalenceenabled (read-only) Checks Loudness Equivalence in platform","title":"Properties"},{"location":"api/PlayerPropertiesAPI/#audiocodecs-property","text":"Provides access to the query Audio Codecs List. This property is read-only .","title":"audiocodecs property"},{"location":"api/PlayerPropertiesAPI/#value","text":"","title":"Value"},{"location":"api/PlayerPropertiesAPI/#result","text":"Name Type Description result array Query Audio Codecs List result[#] string ... (must be one of the following: AudioAac, AudioAc3, AudioAc3Plus, AudioDts, AudioMpeg1, AudioMpeg2, AudioMpeg3, AudioMpeg4, AudioOpus, AudioUndefined, AudioVorbisOgg, AudioWav )","title":"Result"},{"location":"api/PlayerPropertiesAPI/#example","text":"","title":"Example"},{"location":"api/PlayerPropertiesAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.audiocodecs\" }","title":"Get Request"},{"location":"api/PlayerPropertiesAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"AudioUndefined\" ] }","title":"Get Response"},{"location":"api/PlayerPropertiesAPI/#videocodecs-property","text":"Provides access to the query Video Codecs List. This property is read-only .","title":"videocodecs property"},{"location":"api/PlayerPropertiesAPI/#value_1","text":"","title":"Value"},{"location":"api/PlayerPropertiesAPI/#result_1","text":"Name Type Description result array Query Video Codecs List result[#] string ... (must be one of the following: VideoH263, VideoH264, VideoH265, VideoH26510, VideoMpeg, VideoMpeg2, VideoMpeg4, VideoUndefined, VideoVp10, VideoVp8, VideoVp9 )","title":"Result"},{"location":"api/PlayerPropertiesAPI/#example_1","text":"","title":"Example"},{"location":"api/PlayerPropertiesAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.videocodecs\" }","title":"Get Request"},{"location":"api/PlayerPropertiesAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"VideoUndefined\" ] }","title":"Get Response"},{"location":"api/PlayerPropertiesAPI/#resolution-property","text":"Provides access to the current Video playback resolution. This property is read-only .","title":"resolution property"},{"location":"api/PlayerPropertiesAPI/#value_2","text":"","title":"Value"},{"location":"api/PlayerPropertiesAPI/#result_2","text":"Name Type Description result string Current Video playback resolution (must be one of the following: Resolution1080I, Resolution1080I24, Resolution1080I25, Resolution1080I30, Resolution1080I50, Resolution1080P, Resolution1080P24, Resolution1080P25, Resolution1080P30, Resolution1080P50, Resolution2160P, Resolution2160P24, Resolution2160P25, Resolution2160P30, Resolution2160P50, Resolution2160P60, Resolution480I, Resolution480I24, Resolution480I25, Resolution480I30, Resolution480I50, Resolution480P, Resolution480P24, Resolution480P25, Resolution480P30, Resolution480P50, Resolution576I, Resolution576I24, Resolution576I25, Resolution576I30, Resolution576I50, Resolution576P, Resolution576P24, Resolution576P25, Resolution576P30, Resolution576P50, Resolution720P, Resolution720P24, Resolution720P25, Resolution720P30, Resolution720P50, ResolutionUnknown )","title":"Result"},{"location":"api/PlayerPropertiesAPI/#example_2","text":"","title":"Example"},{"location":"api/PlayerPropertiesAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.resolution\" }","title":"Get Request"},{"location":"api/PlayerPropertiesAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ResolutionUnknown\" }","title":"Get Response"},{"location":"api/PlayerPropertiesAPI/#isaudioequivalenceenabled-property","text":"Provides access to the checks Loudness Equivalence in platform. This property is read-only .","title":"isaudioequivalenceenabled property"},{"location":"api/PlayerPropertiesAPI/#value_3","text":"","title":"Value"},{"location":"api/PlayerPropertiesAPI/#result_3","text":"Name Type Description result boolean Checks Loudness Equivalence in platform","title":"Result"},{"location":"api/PlayerPropertiesAPI/#example_3","text":"","title":"Example"},{"location":"api/PlayerPropertiesAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerProperties.1.isaudioequivalenceenabled\" }","title":"Get Request"},{"location":"api/PlayerPropertiesAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"api/PowerAPI/","text":"Power API Version: 1.0.0 Status: Power interface for Thunder framework. (Defined by Power.json ) Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the Power interface (version 1.0.0). It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Power JSON-RPC interface. Methods The following methods are provided by the Power interface: Power interface methods: Method Description set Sets power state set method Sets power state. Parameters Name Type Description params object ... params.powerstate string Power state params.timeout integer Time to wait for power state change Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL General failure ERROR_DUPLICATE_KEY Trying to set the same power mode ERROR_ILLEGAL_STATE Power state is not supported ERROR_BAD_REQUEST Invalid Power state or Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.set\", \"params\": { \"powerstate\": \"on\", \"timeout\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Power interface: Power interface properties: Property Description state (read-only) Power state state property Provides access to the power state. This property is read-only . Value Result Name Type Description result string Power state Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"on\" }","title":"Power API"},{"location":"api/PowerAPI/#power-api","text":"Version: 1.0.0 Status: Power interface for Thunder framework. (Defined by Power.json )","title":"Power API"},{"location":"api/PowerAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"api/PowerAPI/#introduction","text":"","title":"Introduction"},{"location":"api/PowerAPI/#scope","text":"This document describes purpose and functionality of the Power interface (version 1.0.0). It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"api/PowerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/PowerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/PowerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/PowerAPI/#description","text":"Power JSON-RPC interface.","title":"Description"},{"location":"api/PowerAPI/#methods","text":"The following methods are provided by the Power interface: Power interface methods: Method Description set Sets power state","title":"Methods"},{"location":"api/PowerAPI/#set-method","text":"Sets power state.","title":"set method"},{"location":"api/PowerAPI/#parameters","text":"Name Type Description params object ... params.powerstate string Power state params.timeout integer Time to wait for power state change","title":"Parameters"},{"location":"api/PowerAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/PowerAPI/#errors","text":"Message Description ERROR_GENERAL General failure ERROR_DUPLICATE_KEY Trying to set the same power mode ERROR_ILLEGAL_STATE Power state is not supported ERROR_BAD_REQUEST Invalid Power state or Bad JSON param data format","title":"Errors"},{"location":"api/PowerAPI/#example","text":"","title":"Example"},{"location":"api/PowerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.set\", \"params\": { \"powerstate\": \"on\", \"timeout\": 0 } }","title":"Request"},{"location":"api/PowerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/PowerAPI/#properties","text":"The following properties are provided by the Power interface: Power interface properties: Property Description state (read-only) Power state","title":"Properties"},{"location":"api/PowerAPI/#state-property","text":"Provides access to the power state. This property is read-only .","title":"state property"},{"location":"api/PowerAPI/#value","text":"","title":"Value"},{"location":"api/PowerAPI/#result_1","text":"Name Type Description result string Power state","title":"Result"},{"location":"api/PowerAPI/#example_1","text":"","title":"Example"},{"location":"api/PowerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.state\" }","title":"Get Request"},{"location":"api/PowerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"on\" }","title":"Get Response"},{"location":"api/ProcessContainers/","text":"Process Containers Version: 1.0.0 Status: Containers interface for Thunder framework. (Defined by Containers.json ) Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the Containers interface (version 1.0.0). It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Process Containers JSON-RPC API. Methods The following methods are provided by the Containers interface: Containers interface methods: Method Description start Starts a new container stop Stops a container start method Starts a new container. Parameters Name Type Description params object ... params?.name string (optional) Name of container params?.command string (optional) Command that will be started in the container params?.parameters array (optional) List of parameters supplied to command params?.parameters[#] string (optional) ... Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Container not found ERROR_GENERAL Failed to start container Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.start\", \"params\": { \"name\": \"ContainerName\", \"command\": \"lsof\", \"parameters\": [ \"-i\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } stop method Stops a container. Parameters Name Type Description params object ... params.name string Name of container Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Container not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.stop\", \"params\": { \"name\": \"ContainerName\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Containers interface: Containers interface properties: Property Description containers (read-only) List of active containers networks (read-only) List of network interfaces of the container memory (read-only) Memory taken by container cpu (read-only) CPU time containers property Provides access to the list of active containers. This property is read-only . Value Result Name Type Description result array List of names of all containers result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.containers\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ContainerName\" ] } networks property Provides access to the list of network interfaces of the container. This property is read-only . Value The name argument shall be passed as the index to the property, e.g. Containers.1.networks@<name> . Result Name Type Description result array List of all network interfaces related to the container result[#] object Returns networks associated with the container result[#]?.interface string (optional) Interface name result[#]?.ips array (optional) List of ip addresses result[#]?.ips[#] string (optional) IP address Errors Message Description ERROR_UNAVAILABLE Container not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.networks@ContainerName\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"veth3NF06K\", \"ips\": [ \"192.168.0.12\" ] } ] } memory property Provides access to the memory taken by container. This property is read-only . Value The name argument shall be passed as the index to the property, e.g. Containers.1.memory@<name> . Result Name Type Description result object Memory allocated by the container, in bytes result?.allocated integer (optional) Memory allocated by container result?.resident integer (optional) Resident memory of the container result?.shared integer (optional) Shared memory in the container Errors Message Description ERROR_UNAVAILABLE Container not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.memory@ContainerName\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"allocated\": 0, \"resident\": 0, \"shared\": 0 } } cpu property Provides access to the CPU time. This property is read-only . Value The name argument shall be passed as the index to the property, e.g. Containers.1.cpu@<name> . Result Name Type Description result object CPU time spent on running the container, in nanoseconds result?.total integer (optional) CPU-time spent on container, in nanoseconds result?.cores array (optional) Time spent on each cpu core, in nanoseconds result?.cores[#] integer (optional) ... Errors Message Description ERROR_UNAVAILABLE Container not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.cpu@ContainerName\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 2871287421, \"cores\": [ 2871287421 ] } }","title":"Process Containers"},{"location":"api/ProcessContainers/#process-containers","text":"Version: 1.0.0 Status: Containers interface for Thunder framework. (Defined by Containers.json )","title":"Process Containers"},{"location":"api/ProcessContainers/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"api/ProcessContainers/#introduction","text":"","title":"Introduction"},{"location":"api/ProcessContainers/#scope","text":"This document describes purpose and functionality of the Containers interface (version 1.0.0). It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"api/ProcessContainers/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/ProcessContainers/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/ProcessContainers/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/ProcessContainers/#description","text":"Process Containers JSON-RPC API.","title":"Description"},{"location":"api/ProcessContainers/#methods","text":"The following methods are provided by the Containers interface: Containers interface methods: Method Description start Starts a new container stop Stops a container","title":"Methods"},{"location":"api/ProcessContainers/#start-method","text":"Starts a new container.","title":"start method"},{"location":"api/ProcessContainers/#parameters","text":"Name Type Description params object ... params?.name string (optional) Name of container params?.command string (optional) Command that will be started in the container params?.parameters array (optional) List of parameters supplied to command params?.parameters[#] string (optional) ...","title":"Parameters"},{"location":"api/ProcessContainers/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/ProcessContainers/#errors","text":"Message Description ERROR_UNAVAILABLE Container not found ERROR_GENERAL Failed to start container","title":"Errors"},{"location":"api/ProcessContainers/#example","text":"","title":"Example"},{"location":"api/ProcessContainers/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.start\", \"params\": { \"name\": \"ContainerName\", \"command\": \"lsof\", \"parameters\": [ \"-i\" ] } }","title":"Request"},{"location":"api/ProcessContainers/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/ProcessContainers/#stop-method","text":"Stops a container.","title":"stop method"},{"location":"api/ProcessContainers/#parameters_1","text":"Name Type Description params object ... params.name string Name of container","title":"Parameters"},{"location":"api/ProcessContainers/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/ProcessContainers/#errors_1","text":"Message Description ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"api/ProcessContainers/#example_1","text":"","title":"Example"},{"location":"api/ProcessContainers/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.stop\", \"params\": { \"name\": \"ContainerName\" } }","title":"Request"},{"location":"api/ProcessContainers/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/ProcessContainers/#properties","text":"The following properties are provided by the Containers interface: Containers interface properties: Property Description containers (read-only) List of active containers networks (read-only) List of network interfaces of the container memory (read-only) Memory taken by container cpu (read-only) CPU time","title":"Properties"},{"location":"api/ProcessContainers/#containers-property","text":"Provides access to the list of active containers. This property is read-only .","title":"containers property"},{"location":"api/ProcessContainers/#value","text":"","title":"Value"},{"location":"api/ProcessContainers/#result_2","text":"Name Type Description result array List of names of all containers result[#] string ...","title":"Result"},{"location":"api/ProcessContainers/#example_2","text":"","title":"Example"},{"location":"api/ProcessContainers/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.containers\" }","title":"Get Request"},{"location":"api/ProcessContainers/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ContainerName\" ] }","title":"Get Response"},{"location":"api/ProcessContainers/#networks-property","text":"Provides access to the list of network interfaces of the container. This property is read-only .","title":"networks property"},{"location":"api/ProcessContainers/#value_1","text":"The name argument shall be passed as the index to the property, e.g. Containers.1.networks@<name> .","title":"Value"},{"location":"api/ProcessContainers/#result_3","text":"Name Type Description result array List of all network interfaces related to the container result[#] object Returns networks associated with the container result[#]?.interface string (optional) Interface name result[#]?.ips array (optional) List of ip addresses result[#]?.ips[#] string (optional) IP address","title":"Result"},{"location":"api/ProcessContainers/#errors_2","text":"Message Description ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"api/ProcessContainers/#example_3","text":"","title":"Example"},{"location":"api/ProcessContainers/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.networks@ContainerName\" }","title":"Get Request"},{"location":"api/ProcessContainers/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"veth3NF06K\", \"ips\": [ \"192.168.0.12\" ] } ] }","title":"Get Response"},{"location":"api/ProcessContainers/#memory-property","text":"Provides access to the memory taken by container. This property is read-only .","title":"memory property"},{"location":"api/ProcessContainers/#value_2","text":"The name argument shall be passed as the index to the property, e.g. Containers.1.memory@<name> .","title":"Value"},{"location":"api/ProcessContainers/#result_4","text":"Name Type Description result object Memory allocated by the container, in bytes result?.allocated integer (optional) Memory allocated by container result?.resident integer (optional) Resident memory of the container result?.shared integer (optional) Shared memory in the container","title":"Result"},{"location":"api/ProcessContainers/#errors_3","text":"Message Description ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"api/ProcessContainers/#example_4","text":"","title":"Example"},{"location":"api/ProcessContainers/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.memory@ContainerName\" }","title":"Get Request"},{"location":"api/ProcessContainers/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"allocated\": 0, \"resident\": 0, \"shared\": 0 } }","title":"Get Response"},{"location":"api/ProcessContainers/#cpu-property","text":"Provides access to the CPU time. This property is read-only .","title":"cpu property"},{"location":"api/ProcessContainers/#value_3","text":"The name argument shall be passed as the index to the property, e.g. Containers.1.cpu@<name> .","title":"Value"},{"location":"api/ProcessContainers/#result_5","text":"Name Type Description result object CPU time spent on running the container, in nanoseconds result?.total integer (optional) CPU-time spent on container, in nanoseconds result?.cores array (optional) Time spent on each cpu core, in nanoseconds result?.cores[#] integer (optional) ...","title":"Result"},{"location":"api/ProcessContainers/#errors_4","text":"Message Description ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"api/ProcessContainers/#example_5","text":"","title":"Example"},{"location":"api/ProcessContainers/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.cpu@ContainerName\" }","title":"Get Request"},{"location":"api/ProcessContainers/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 2871287421, \"cores\": [ 2871287421 ] } }","title":"Get Response"},{"location":"api/ProvisioningAPI/","text":"Provisioning API Version: 1.0.0 Status: Provisioning interface for Thunder framework. (Defined by Provisioning.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Provisioning interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Provisioning JSON-RPC interface. Methods The following methods are provided by the Provisioning interface: Provisioning interface methods: Method Description provision Trigers platform provision process index Set the index for a provisioning key provision method Trigers platform provision process. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Provisioning in progress ERROR_UNAVAILABLE Provisioning Back Office Client not available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.provision\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } index method Set the index for a provisioning key. Parameters Name Type Description params object ... params?.label string (optional) The label name for which the index should be changed params?.index integer (optional) Index to be used for the key Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Provisioning Back Office Client not available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.index\", \"params\": { \"label\": \"cobalt\", \"index\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Provisioning interface: Provisioning interface properties: Property Description id (read-only) Provision ID state (read-only) Platform provision state id property Provides access to the provision ID. This property is read-only . Value Result Name Type Description result string Provision ID Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.id\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"WPE00000uCfrLF45\" } state property Provides access to the platform provision state. This property is read-only . Value Result Name Type Description result object Platform provision state result.id string Provision ID value result.status integer Provision status result.tokens array List of provisioned systems result.tokens[#] string ... Errors Message Description ERROR_UNAVAILABLE Provisioning Back Office Client not available Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": \"WPE00000uCfrLF45\", \"status\": 200, \"tokens\": [ \"netflix, playready\" ] } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Provisioning interface: Provisioning interface events: Notification Description provisioningchange Signals a provisioning change provisioningchange notification Signals a provisioning change. Parameters Name Type Description params object ... params.status integer Provision status Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.register\", \"params\": { \"event\": \"provisioningchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.provisioningchange\", \"params\": { \"status\": 200 } }","title":"Provisioning API"},{"location":"api/ProvisioningAPI/#provisioning-api","text":"Version: 1.0.0 Status: Provisioning interface for Thunder framework. (Defined by Provisioning.json )","title":"Provisioning API"},{"location":"api/ProvisioningAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/ProvisioningAPI/#introduction","text":"","title":"Introduction"},{"location":"api/ProvisioningAPI/#scope","text":"This document describes purpose and functionality of the Provisioning interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/ProvisioningAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/ProvisioningAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/ProvisioningAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/ProvisioningAPI/#description","text":"Provisioning JSON-RPC interface.","title":"Description"},{"location":"api/ProvisioningAPI/#methods","text":"The following methods are provided by the Provisioning interface: Provisioning interface methods: Method Description provision Trigers platform provision process index Set the index for a provisioning key","title":"Methods"},{"location":"api/ProvisioningAPI/#provision-method","text":"Trigers platform provision process.","title":"provision method"},{"location":"api/ProvisioningAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/ProvisioningAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/ProvisioningAPI/#errors","text":"Message Description ERROR_INPROGRESS Provisioning in progress ERROR_UNAVAILABLE Provisioning Back Office Client not available","title":"Errors"},{"location":"api/ProvisioningAPI/#example","text":"","title":"Example"},{"location":"api/ProvisioningAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.provision\" }","title":"Request"},{"location":"api/ProvisioningAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/ProvisioningAPI/#index-method","text":"Set the index for a provisioning key.","title":"index method"},{"location":"api/ProvisioningAPI/#parameters_1","text":"Name Type Description params object ... params?.label string (optional) The label name for which the index should be changed params?.index integer (optional) Index to be used for the key","title":"Parameters"},{"location":"api/ProvisioningAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/ProvisioningAPI/#errors_1","text":"Message Description ERROR_UNAVAILABLE Provisioning Back Office Client not available","title":"Errors"},{"location":"api/ProvisioningAPI/#example_1","text":"","title":"Example"},{"location":"api/ProvisioningAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.index\", \"params\": { \"label\": \"cobalt\", \"index\": 0 } }","title":"Request"},{"location":"api/ProvisioningAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/ProvisioningAPI/#properties","text":"The following properties are provided by the Provisioning interface: Provisioning interface properties: Property Description id (read-only) Provision ID state (read-only) Platform provision state","title":"Properties"},{"location":"api/ProvisioningAPI/#id-property","text":"Provides access to the provision ID. This property is read-only .","title":"id property"},{"location":"api/ProvisioningAPI/#value","text":"","title":"Value"},{"location":"api/ProvisioningAPI/#result_2","text":"Name Type Description result string Provision ID","title":"Result"},{"location":"api/ProvisioningAPI/#example_2","text":"","title":"Example"},{"location":"api/ProvisioningAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.id\" }","title":"Get Request"},{"location":"api/ProvisioningAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"WPE00000uCfrLF45\" }","title":"Get Response"},{"location":"api/ProvisioningAPI/#state-property","text":"Provides access to the platform provision state. This property is read-only .","title":"state property"},{"location":"api/ProvisioningAPI/#value_1","text":"","title":"Value"},{"location":"api/ProvisioningAPI/#result_3","text":"Name Type Description result object Platform provision state result.id string Provision ID value result.status integer Provision status result.tokens array List of provisioned systems result.tokens[#] string ...","title":"Result"},{"location":"api/ProvisioningAPI/#errors_2","text":"Message Description ERROR_UNAVAILABLE Provisioning Back Office Client not available","title":"Errors"},{"location":"api/ProvisioningAPI/#example_3","text":"","title":"Example"},{"location":"api/ProvisioningAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.state\" }","title":"Get Request"},{"location":"api/ProvisioningAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": \"WPE00000uCfrLF45\", \"status\": 200, \"tokens\": [ \"netflix, playready\" ] } }","title":"Get Response"},{"location":"api/ProvisioningAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Provisioning interface: Provisioning interface events: Notification Description provisioningchange Signals a provisioning change","title":"Notifications"},{"location":"api/ProvisioningAPI/#provisioningchange-notification","text":"Signals a provisioning change.","title":"provisioningchange notification"},{"location":"api/ProvisioningAPI/#parameters_2","text":"Name Type Description params object ... params.status integer Provision status","title":"Parameters"},{"location":"api/ProvisioningAPI/#example_4","text":"","title":"Example"},{"location":"api/ProvisioningAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Provisioning.1.register\", \"params\": { \"event\": \"provisioningchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/ProvisioningAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.provisioningchange\", \"params\": { \"status\": 200 } }","title":"Message"},{"location":"api/RemoteControlAPI/","text":"Remote Control API Version: 1.0.0 Status: RemoteControl interface for Thunder framework. (Defined by RemoteControl.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the RemoteControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description RemoteControl JSON-RPC interface. Methods The following methods are provided by the RemoteControl interface: RemoteControl interface methods: Method Description key Gets key code details send Sends a key to a device (press and release) press Presses a key on a device release Releases a key on a device add Adds a key code to the key map modify Modifies a key code in the key map delete Deletes a key code from the key map load Re-loads the device's key map from persistent memory save Saves the device's key map into persistent path pair Activates pairing mode of a device unpair Unpairs a device key method Gets key code details. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code Result Name Type Description result object ... result.code integer Key code result.key integer Key ingest value result?.modifiers array (optional) List of key modifiers result?.modifiers[#] string (optional) Key modifier Errors Message Description ERROR_UNKNOWN_KEY Key does not exist ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.key\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } send method Sends a key to a device (press and release). Parameters Name Type Description params object ... params.device string Device name params.code integer Key code Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist ERROR_ALREADY_RELEASED Key is already released Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.send\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } press method Presses a key on a device. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.press\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } release method Releases a key on a device. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist ERROR_ALREADY_RELEASED Key is already released Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.release\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } add method Adds a key code to the key map. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code params.key integer Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Code already exists Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.add\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } modify method Modifies a key code in the key map. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code params.key integer Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.modify\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } delete method Deletes a key code from the key map. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Key does not exist ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.delete\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } load method Re-loads the device's key map from persistent memory. Parameters Name Type Description params object ... params.device string Device name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL File does not exist ERROR_BAD_REQUEST Bad JSON param data format ERROR_ILLEGAL_STATE Illegal state ERROR_OPENING_FAILED Opening failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.load\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } save method Saves the device's key map into persistent path. Parameters Name Type Description params object ... params.device string Device name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL File is not created ERROR_BAD_REQUEST Bad JSON param data format ERROR_ILLEGAL_STATE Illegal state Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.save\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } pair method Activates pairing mode of a device. Parameters Name Type Description params object ... params.device string Device name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL Failed to activate pairing ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.pair\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } unpair method Unpairs a device. Parameters Name Type Description params object ... params.device string Device name params.bindid string Binding ID Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL Failed to unpair the device ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.unpair\", \"params\": { \"device\": \"DevInput\", \"bindid\": \"id\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the RemoteControl interface: RemoteControl interface properties: Property Description devices (read-only) Names of all available devices device (read-only) Metadata of a specific device devices property Provides access to the names of all available devices. This property is read-only . Value Result Name Type Description result array Names of all available devices result[#] string Device name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.devices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Web\" ] } device property Provides access to the metadata of a specific device. This property is read-only . Value The device argument shall be passed as the index to the property, e.g. RemoteControl.1.device@<device> . Result Name Type Description result object Metadata of a specific device result.metadata string Device metadata Errors Message Description ERROR_GENERAL Metadata not supported on a virtual device ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.device@DevInput\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"metadata\": \"It is based on protocol A\" } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the RemoteControl interface: RemoteControl interface events: Notification Description keypressed Notifies of a key press/release action keypressed notification Notifies of a key press/release action. Parameters Name Type Description params object ... params.pressed boolean Denotes if the key was pressed (true) or released (false) The key code argument will be passed within the designator, e.g. 42.client.keypressed . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.register\", \"params\": { \"event\": \"keypressed\", \"id\": \"42.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"42.client.keypressed\", \"params\": { \"pressed\": false } }","title":"Remote Control API"},{"location":"api/RemoteControlAPI/#remote-control-api","text":"Version: 1.0.0 Status: RemoteControl interface for Thunder framework. (Defined by RemoteControl.json )","title":"Remote Control API"},{"location":"api/RemoteControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/RemoteControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/RemoteControlAPI/#scope","text":"This document describes purpose and functionality of the RemoteControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/RemoteControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/RemoteControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/RemoteControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/RemoteControlAPI/#description","text":"RemoteControl JSON-RPC interface.","title":"Description"},{"location":"api/RemoteControlAPI/#methods","text":"The following methods are provided by the RemoteControl interface: RemoteControl interface methods: Method Description key Gets key code details send Sends a key to a device (press and release) press Presses a key on a device release Releases a key on a device add Adds a key code to the key map modify Modifies a key code in the key map delete Deletes a key code from the key map load Re-loads the device's key map from persistent memory save Saves the device's key map into persistent path pair Activates pairing mode of a device unpair Unpairs a device","title":"Methods"},{"location":"api/RemoteControlAPI/#key-method","text":"Gets key code details.","title":"key method"},{"location":"api/RemoteControlAPI/#parameters","text":"Name Type Description params object ... params.device string Device name params.code integer Key code","title":"Parameters"},{"location":"api/RemoteControlAPI/#result","text":"Name Type Description result object ... result.code integer Key code result.key integer Key ingest value result?.modifiers array (optional) List of key modifiers result?.modifiers[#] string (optional) Key modifier","title":"Result"},{"location":"api/RemoteControlAPI/#errors","text":"Message Description ERROR_UNKNOWN_KEY Key does not exist ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"api/RemoteControlAPI/#example","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.key\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"api/RemoteControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Response"},{"location":"api/RemoteControlAPI/#send-method","text":"Sends a key to a device (press and release).","title":"send method"},{"location":"api/RemoteControlAPI/#parameters_1","text":"Name Type Description params object ... params.device string Device name params.code integer Key code","title":"Parameters"},{"location":"api/RemoteControlAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/RemoteControlAPI/#errors_1","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist ERROR_ALREADY_RELEASED Key is already released","title":"Errors"},{"location":"api/RemoteControlAPI/#example_1","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.send\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"api/RemoteControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/RemoteControlAPI/#press-method","text":"Presses a key on a device.","title":"press method"},{"location":"api/RemoteControlAPI/#parameters_2","text":"Name Type Description params object ... params.device string Device name params.code integer Key code","title":"Parameters"},{"location":"api/RemoteControlAPI/#result_2","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/RemoteControlAPI/#errors_2","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist","title":"Errors"},{"location":"api/RemoteControlAPI/#example_2","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.press\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"api/RemoteControlAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/RemoteControlAPI/#release-method","text":"Releases a key on a device.","title":"release method"},{"location":"api/RemoteControlAPI/#parameters_3","text":"Name Type Description params object ... params.device string Device name params.code integer Key code","title":"Parameters"},{"location":"api/RemoteControlAPI/#result_3","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/RemoteControlAPI/#errors_3","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist ERROR_ALREADY_RELEASED Key is already released","title":"Errors"},{"location":"api/RemoteControlAPI/#example_3","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.release\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"api/RemoteControlAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/RemoteControlAPI/#add-method","text":"Adds a key code to the key map.","title":"add method"},{"location":"api/RemoteControlAPI/#parameters_4","text":"Name Type Description params object ... params.device string Device name params.code integer Key code params.key integer Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier","title":"Parameters"},{"location":"api/RemoteControlAPI/#result_4","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/RemoteControlAPI/#errors_4","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Code already exists","title":"Errors"},{"location":"api/RemoteControlAPI/#example_4","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.add\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Request"},{"location":"api/RemoteControlAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/RemoteControlAPI/#modify-method","text":"Modifies a key code in the key map.","title":"modify method"},{"location":"api/RemoteControlAPI/#parameters_5","text":"Name Type Description params object ... params.device string Device name params.code integer Key code params.key integer Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier","title":"Parameters"},{"location":"api/RemoteControlAPI/#result_5","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/RemoteControlAPI/#errors_5","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist","title":"Errors"},{"location":"api/RemoteControlAPI/#example_5","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.modify\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Request"},{"location":"api/RemoteControlAPI/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/RemoteControlAPI/#delete-method","text":"Deletes a key code from the key map.","title":"delete method"},{"location":"api/RemoteControlAPI/#parameters_6","text":"Name Type Description params object ... params.device string Device name params.code integer Key code","title":"Parameters"},{"location":"api/RemoteControlAPI/#result_6","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/RemoteControlAPI/#errors_6","text":"Message Description ERROR_UNKNOWN_KEY Key does not exist ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"api/RemoteControlAPI/#example_6","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.delete\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"api/RemoteControlAPI/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/RemoteControlAPI/#load-method","text":"Re-loads the device's key map from persistent memory.","title":"load method"},{"location":"api/RemoteControlAPI/#parameters_7","text":"Name Type Description params object ... params.device string Device name","title":"Parameters"},{"location":"api/RemoteControlAPI/#result_7","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/RemoteControlAPI/#errors_7","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL File does not exist ERROR_BAD_REQUEST Bad JSON param data format ERROR_ILLEGAL_STATE Illegal state ERROR_OPENING_FAILED Opening failed","title":"Errors"},{"location":"api/RemoteControlAPI/#example_7","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.load\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"api/RemoteControlAPI/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/RemoteControlAPI/#save-method","text":"Saves the device's key map into persistent path.","title":"save method"},{"location":"api/RemoteControlAPI/#parameters_8","text":"Name Type Description params object ... params.device string Device name","title":"Parameters"},{"location":"api/RemoteControlAPI/#result_8","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/RemoteControlAPI/#errors_8","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL File is not created ERROR_BAD_REQUEST Bad JSON param data format ERROR_ILLEGAL_STATE Illegal state","title":"Errors"},{"location":"api/RemoteControlAPI/#example_8","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.save\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"api/RemoteControlAPI/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/RemoteControlAPI/#pair-method","text":"Activates pairing mode of a device.","title":"pair method"},{"location":"api/RemoteControlAPI/#parameters_9","text":"Name Type Description params object ... params.device string Device name","title":"Parameters"},{"location":"api/RemoteControlAPI/#result_9","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/RemoteControlAPI/#errors_9","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL Failed to activate pairing ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"api/RemoteControlAPI/#example_9","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.pair\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"api/RemoteControlAPI/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/RemoteControlAPI/#unpair-method","text":"Unpairs a device.","title":"unpair method"},{"location":"api/RemoteControlAPI/#parameters_10","text":"Name Type Description params object ... params.device string Device name params.bindid string Binding ID","title":"Parameters"},{"location":"api/RemoteControlAPI/#result_10","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/RemoteControlAPI/#errors_10","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL Failed to unpair the device ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"api/RemoteControlAPI/#example_10","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.unpair\", \"params\": { \"device\": \"DevInput\", \"bindid\": \"id\" } }","title":"Request"},{"location":"api/RemoteControlAPI/#response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/RemoteControlAPI/#properties","text":"The following properties are provided by the RemoteControl interface: RemoteControl interface properties: Property Description devices (read-only) Names of all available devices device (read-only) Metadata of a specific device","title":"Properties"},{"location":"api/RemoteControlAPI/#devices-property","text":"Provides access to the names of all available devices. This property is read-only .","title":"devices property"},{"location":"api/RemoteControlAPI/#value","text":"","title":"Value"},{"location":"api/RemoteControlAPI/#result_11","text":"Name Type Description result array Names of all available devices result[#] string Device name","title":"Result"},{"location":"api/RemoteControlAPI/#example_11","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.devices\" }","title":"Get Request"},{"location":"api/RemoteControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Web\" ] }","title":"Get Response"},{"location":"api/RemoteControlAPI/#device-property","text":"Provides access to the metadata of a specific device. This property is read-only .","title":"device property"},{"location":"api/RemoteControlAPI/#value_1","text":"The device argument shall be passed as the index to the property, e.g. RemoteControl.1.device@<device> .","title":"Value"},{"location":"api/RemoteControlAPI/#result_12","text":"Name Type Description result object Metadata of a specific device result.metadata string Device metadata","title":"Result"},{"location":"api/RemoteControlAPI/#errors_11","text":"Message Description ERROR_GENERAL Metadata not supported on a virtual device ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"api/RemoteControlAPI/#example_12","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.device@DevInput\" }","title":"Get Request"},{"location":"api/RemoteControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"metadata\": \"It is based on protocol A\" } }","title":"Get Response"},{"location":"api/RemoteControlAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the RemoteControl interface: RemoteControl interface events: Notification Description keypressed Notifies of a key press/release action","title":"Notifications"},{"location":"api/RemoteControlAPI/#keypressed-notification","text":"Notifies of a key press/release action.","title":"keypressed notification"},{"location":"api/RemoteControlAPI/#parameters_11","text":"Name Type Description params object ... params.pressed boolean Denotes if the key was pressed (true) or released (false) The key code argument will be passed within the designator, e.g. 42.client.keypressed .","title":"Parameters"},{"location":"api/RemoteControlAPI/#example_13","text":"","title":"Example"},{"location":"api/RemoteControlAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.register\", \"params\": { \"event\": \"keypressed\", \"id\": \"42.client\" } }","title":"Registration"},{"location":"api/RemoteControlAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"42.client.keypressed\", \"params\": { \"pressed\": false } }","title":"Message"},{"location":"api/ScriptEngineAPI/","text":"ScriptEngine API Version: 1.0.0 Status: ScriptEngine interface for Thunder framework. (Defined with IScriptEngine in IScriptEngine.h ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the ScriptEngine interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description ScriptEngine JSON-RPC interface. Properties The following properties are provided by the ScriptEngine interface: ScriptEngine interface properties: Property Description url Script to be loaded into the engine and to be executed url property Provides access to the script to be loaded into the engine and to be executed. Value Name Type Description (property) object Script to be loaded into the engine and to be executed (property).value string ... Result Name Type Description result string Loaded URL Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ScriptEngine.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://example.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ScriptEngine.1.url\", \"params\": { \"value\": \"...\" } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the ScriptEngine interface: ScriptEngine interface events: Notification Description urlchanged Signal changes on the subscribed namespace urlchanged notification Signal changes on the subscribed namespace.. Parameters Name Type Description params object ... params.url string Loaded URL Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ScriptEngine.1.register\", \"params\": { \"event\": \"urlchanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.urlchanged\", \"params\": { \"url\": \"https://example.com\" } }","title":"ScriptEngine API"},{"location":"api/ScriptEngineAPI/#scriptengine-api","text":"Version: 1.0.0 Status: ScriptEngine interface for Thunder framework. (Defined with IScriptEngine in IScriptEngine.h )","title":"ScriptEngine API"},{"location":"api/ScriptEngineAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/ScriptEngineAPI/#introduction","text":"","title":"Introduction"},{"location":"api/ScriptEngineAPI/#scope","text":"This document describes purpose and functionality of the ScriptEngine interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/ScriptEngineAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/ScriptEngineAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/ScriptEngineAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/ScriptEngineAPI/#description","text":"ScriptEngine JSON-RPC interface.","title":"Description"},{"location":"api/ScriptEngineAPI/#properties","text":"The following properties are provided by the ScriptEngine interface: ScriptEngine interface properties: Property Description url Script to be loaded into the engine and to be executed","title":"Properties"},{"location":"api/ScriptEngineAPI/#url-property","text":"Provides access to the script to be loaded into the engine and to be executed.","title":"url property"},{"location":"api/ScriptEngineAPI/#value","text":"Name Type Description (property) object Script to be loaded into the engine and to be executed (property).value string ...","title":"Value"},{"location":"api/ScriptEngineAPI/#result","text":"Name Type Description result string Loaded URL","title":"Result"},{"location":"api/ScriptEngineAPI/#example","text":"","title":"Example"},{"location":"api/ScriptEngineAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ScriptEngine.1.url\" }","title":"Get Request"},{"location":"api/ScriptEngineAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://example.com\" }","title":"Get Response"},{"location":"api/ScriptEngineAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ScriptEngine.1.url\", \"params\": { \"value\": \"...\" } }","title":"Set Request"},{"location":"api/ScriptEngineAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ScriptEngineAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the ScriptEngine interface: ScriptEngine interface events: Notification Description urlchanged Signal changes on the subscribed namespace","title":"Notifications"},{"location":"api/ScriptEngineAPI/#urlchanged-notification","text":"Signal changes on the subscribed namespace..","title":"urlchanged notification"},{"location":"api/ScriptEngineAPI/#parameters","text":"Name Type Description params object ... params.url string Loaded URL","title":"Parameters"},{"location":"api/ScriptEngineAPI/#example_1","text":"","title":"Example"},{"location":"api/ScriptEngineAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ScriptEngine.1.register\", \"params\": { \"event\": \"urlchanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/ScriptEngineAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.urlchanged\", \"params\": { \"url\": \"https://example.com\" } }","title":"Message"},{"location":"api/SecureShellServerAPI/","text":"SecureShell Server API Version: 1.0.0 Status: SecureShellServer interface for Thunder framework. (Defined by SecureShellServer.json ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the SecureShellServer interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description SecureShell Server JSON-RPC interface. Methods The following methods are provided by the SecureShellServer interface: SecureShellServer interface methods: Method Description getactivesessionscount Get count of currently active SSH client sessions maintained by SecureShell SSH Service getactivesessionsinfo (read-only) Get details of currently active SSH client sessions maintained by SecureShell SSH Service closeclientsession Close and active SSH client session getactivesessionscount method Get count of currently active SSH client sessions maintained by SecureShell SSH Service. Description With this method SecureShell SSH service shall provide the count of active SSH client sessions. Parameters This method takes no parameters. Result Name Type Description result integer Number of client sessions count Errors Message Description ERROR_GENERAL Failed to get client sessions count ERROR_UNAVAILABLE Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.getactivesessionscount\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } getactivesessionsinfo method Get details of currently active SSH client sessions maintained by SecureShell SSH Service. Description With this method SecureShell SSH service shall provide the full details of active SSH client sessions. Parameters This method takes no parameters. Result Name Type Description result array ... result[#] object ... result[#].pid integer SSH client process ID result[#].ipaddress string SSH client connected from this IP address result[#].timestamp string SSH client connected at this timestamp Errors Message Description ERROR_GENERAL Failed to get client sessions details ERROR_UNAVAILABLE Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.getactivesessionsinfo\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"pid\": 268, \"ipaddress\": \"192.168.33.57\", \"timestamp\": \"Sun Jun 30 21:49:08 2019\" } ] } closeclientsession method Close and active SSH client session. Description With this method SecureShell an active SSH client session shall be closed. Parameters Name Type Description params object ... params.clientpid string SSH client process id (default: 268 ) Errors Message Description ERROR_GENERAL Failed to close SSH client session ERROR_UNAVAILABLE Unknown error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.closeclientsession\", \"params\": { \"clientpid\": \"268\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"SecureShell Server API"},{"location":"api/SecureShellServerAPI/#secureshell-server-api","text":"Version: 1.0.0 Status: SecureShellServer interface for Thunder framework. (Defined by SecureShellServer.json )","title":"SecureShell Server API"},{"location":"api/SecureShellServerAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/SecureShellServerAPI/#introduction","text":"","title":"Introduction"},{"location":"api/SecureShellServerAPI/#scope","text":"This document describes purpose and functionality of the SecureShellServer interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/SecureShellServerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/SecureShellServerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/SecureShellServerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/SecureShellServerAPI/#description","text":"SecureShell Server JSON-RPC interface.","title":"Description"},{"location":"api/SecureShellServerAPI/#methods","text":"The following methods are provided by the SecureShellServer interface: SecureShellServer interface methods: Method Description getactivesessionscount Get count of currently active SSH client sessions maintained by SecureShell SSH Service getactivesessionsinfo (read-only) Get details of currently active SSH client sessions maintained by SecureShell SSH Service closeclientsession Close and active SSH client session","title":"Methods"},{"location":"api/SecureShellServerAPI/#getactivesessionscount-method","text":"Get count of currently active SSH client sessions maintained by SecureShell SSH Service.","title":"getactivesessionscount method"},{"location":"api/SecureShellServerAPI/#description_1","text":"With this method SecureShell SSH service shall provide the count of active SSH client sessions.","title":"Description"},{"location":"api/SecureShellServerAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/SecureShellServerAPI/#result","text":"Name Type Description result integer Number of client sessions count","title":"Result"},{"location":"api/SecureShellServerAPI/#errors","text":"Message Description ERROR_GENERAL Failed to get client sessions count ERROR_UNAVAILABLE Unknown error","title":"Errors"},{"location":"api/SecureShellServerAPI/#example","text":"","title":"Example"},{"location":"api/SecureShellServerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.getactivesessionscount\" }","title":"Request"},{"location":"api/SecureShellServerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/SecureShellServerAPI/#getactivesessionsinfo-method","text":"Get details of currently active SSH client sessions maintained by SecureShell SSH Service.","title":"getactivesessionsinfo method"},{"location":"api/SecureShellServerAPI/#description_2","text":"With this method SecureShell SSH service shall provide the full details of active SSH client sessions.","title":"Description"},{"location":"api/SecureShellServerAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/SecureShellServerAPI/#result_1","text":"Name Type Description result array ... result[#] object ... result[#].pid integer SSH client process ID result[#].ipaddress string SSH client connected from this IP address result[#].timestamp string SSH client connected at this timestamp","title":"Result"},{"location":"api/SecureShellServerAPI/#errors_1","text":"Message Description ERROR_GENERAL Failed to get client sessions details ERROR_UNAVAILABLE Unknown error","title":"Errors"},{"location":"api/SecureShellServerAPI/#example_1","text":"","title":"Example"},{"location":"api/SecureShellServerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.getactivesessionsinfo\" }","title":"Request"},{"location":"api/SecureShellServerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"pid\": 268, \"ipaddress\": \"192.168.33.57\", \"timestamp\": \"Sun Jun 30 21:49:08 2019\" } ] }","title":"Response"},{"location":"api/SecureShellServerAPI/#closeclientsession-method","text":"Close and active SSH client session.","title":"closeclientsession method"},{"location":"api/SecureShellServerAPI/#description_3","text":"With this method SecureShell an active SSH client session shall be closed.","title":"Description"},{"location":"api/SecureShellServerAPI/#parameters_2","text":"Name Type Description params object ... params.clientpid string SSH client process id (default: 268 )","title":"Parameters"},{"location":"api/SecureShellServerAPI/#errors_2","text":"Message Description ERROR_GENERAL Failed to close SSH client session ERROR_UNAVAILABLE Unknown error","title":"Errors"},{"location":"api/SecureShellServerAPI/#example_2","text":"","title":"Example"},{"location":"api/SecureShellServerAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecureShellServer.1.closeclientsession\", \"params\": { \"clientpid\": \"268\" } }","title":"Request"},{"location":"api/SecureShellServerAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/SecurityAgentAPI/","text":"Security Agent API Version: 1.0.0 Status: SecurityAgent interface for Thunder framework. (Defined by SecurityAgent.json ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the SecurityAgent interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Security Agent JSON-RPC interface. Methods The following methods are provided by the SecurityAgent interface: SecurityAgent interface methods: Method Description createtoken Creates Token validate Validates Token createtoken method Creates Token. Description Create a signed JsonWeb token from provided payload. Parameters Name Type Description params object ... params?.url string (optional) Url of application origin params?.user string (optional) Username params?.hash string (optional) Random hash Result Name Type Description result object ... result.token string Signed JsonWeb token Errors Message Description ERROR_GENERAL Token creation failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.createtoken\", \"params\": { \"url\": \"https://test.comcast.com\", \"user\": \"Test\", \"hash\": \"1CLYex47SY\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } } validate method Validates Token. Description Checks whether the token is valid and properly signed. Parameters Name Type Description params object ... params.token string Token that will be validated Result Name Type Description result object ... result.valid boolean Tells whether token is signature is correct Errors Message Description Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.validate\", \"params\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"valid\": false } }","title":"Security Agent API"},{"location":"api/SecurityAgentAPI/#security-agent-api","text":"Version: 1.0.0 Status: SecurityAgent interface for Thunder framework. (Defined by SecurityAgent.json )","title":"Security Agent API"},{"location":"api/SecurityAgentAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/SecurityAgentAPI/#introduction","text":"","title":"Introduction"},{"location":"api/SecurityAgentAPI/#scope","text":"This document describes purpose and functionality of the SecurityAgent interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/SecurityAgentAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/SecurityAgentAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/SecurityAgentAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/SecurityAgentAPI/#description","text":"Security Agent JSON-RPC interface.","title":"Description"},{"location":"api/SecurityAgentAPI/#methods","text":"The following methods are provided by the SecurityAgent interface: SecurityAgent interface methods: Method Description createtoken Creates Token validate Validates Token","title":"Methods"},{"location":"api/SecurityAgentAPI/#createtoken-method","text":"Creates Token.","title":"createtoken method"},{"location":"api/SecurityAgentAPI/#description_1","text":"Create a signed JsonWeb token from provided payload.","title":"Description"},{"location":"api/SecurityAgentAPI/#parameters","text":"Name Type Description params object ... params?.url string (optional) Url of application origin params?.user string (optional) Username params?.hash string (optional) Random hash","title":"Parameters"},{"location":"api/SecurityAgentAPI/#result","text":"Name Type Description result object ... result.token string Signed JsonWeb token","title":"Result"},{"location":"api/SecurityAgentAPI/#errors","text":"Message Description ERROR_GENERAL Token creation failed","title":"Errors"},{"location":"api/SecurityAgentAPI/#example","text":"","title":"Example"},{"location":"api/SecurityAgentAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.createtoken\", \"params\": { \"url\": \"https://test.comcast.com\", \"user\": \"Test\", \"hash\": \"1CLYex47SY\" } }","title":"Request"},{"location":"api/SecurityAgentAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } }","title":"Response"},{"location":"api/SecurityAgentAPI/#validate-method","text":"Validates Token.","title":"validate method"},{"location":"api/SecurityAgentAPI/#description_2","text":"Checks whether the token is valid and properly signed.","title":"Description"},{"location":"api/SecurityAgentAPI/#parameters_1","text":"Name Type Description params object ... params.token string Token that will be validated","title":"Parameters"},{"location":"api/SecurityAgentAPI/#result_1","text":"Name Type Description result object ... result.valid boolean Tells whether token is signature is correct","title":"Result"},{"location":"api/SecurityAgentAPI/#errors_1","text":"Message Description","title":"Errors"},{"location":"api/SecurityAgentAPI/#example_1","text":"","title":"Example"},{"location":"api/SecurityAgentAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.validate\", \"params\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } }","title":"Request"},{"location":"api/SecurityAgentAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"valid\": false } }","title":"Response"},{"location":"api/SinkAPI/","text":"Sink API Version: 1.0.0 Status: Sink interface for Thunder framework. (Defined with IBluetoothAudio::ISink in IBluetoothAudio.h ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Sink interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Sink JSON-RPC interface. Methods The following methods are provided by the Sink interface: BluetoothAudio Sink interface methods: Method Description sink::assign Assigns a Bluetooth sink device for audio playback sink::revoke Revokes a Bluetooth sink device from audio playback sink::assign method Assigns a Bluetooth sink device for audio playback. Parameters Name Type Description params object ... params.address string Address of the bluetooth device to assign Result Name Type Description result null Always null Errors Message Description ERROR_BAD_REQUEST Device address value is invalid ERROR_ALREADY_CONNECTED A sink device is already assigned Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::assign\", \"params\": { \"address\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } sink::revoke method Revokes a Bluetooth sink device from audio playback. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Message Description ERROR_ALREADY_RELEASED No device is currently assigned as sink Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::revoke\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Sink interface: BluetoothAudio Sink interface properties: Property Description sink::state (read-only) Current state o the audio sink device sink::device (read-only) Bluetooth address of the audio sink device sink::type (read-only) Type of the audio sink device sink::latency Latency of the audio sink device sink::supportedcodecs (read-only) Audio codecs supported by the audio sink device sink::supporteddrms (read-only) DRM schemes supported by the audio sink device sink::codec (read-only) Properites of the currently used audio codec sink::drm (read-only) Properites of the currently used DRM scheme sink::stream (read-only) Properties of the currently transmitted audio stream sink::state property Provides access to the current state o the audio sink device. This property is read-only . Value Result Name Type Description result string Current state o the audio sink device (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unassigned\" } sink::device property Provides access to the bluetooth address of the audio sink device. This property is read-only . Value Result Name Type Description result string Bluetooth address of the audio sink device Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not assigned Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::device\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } sink::type property Provides access to the type of the audio sink device. This property is read-only . Value Result Name Type Description result string Type of the audio sink device (must be one of the following: Amplifier, Headphone, Recorder, Speaker, Unknown ) Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::type\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" } sink::latency property Provides access to the latency of the audio sink device. Value Name Type Description (property) object Latency of the audio sink device (property).value integer Audio latency in milliseconds Result Name Type Description result integer Latency of the audio sink device Errors Message Description ERROR_BAD_REQUEST Latency value is invalid Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::latency\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::latency\", \"params\": { \"value\": 20 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } sink::supportedcodecs property Provides access to the audio codecs supported by the audio sink device. This property is read-only . Value Result Name Type Description result array Audio codecs supported by the audio sink device result[#] string ... (must be one of the following: LC-SBC ) Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::supportedcodecs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"LC-SBC\" ] } sink::supporteddrms property Provides access to the DRM schemes supported by the audio sink device. This property is read-only . Value Result Name Type Description result array DRM schemes supported by the audio sink device result[#] string ... (must be one of the following: DTCP, SCMS-T ) Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::supporteddrms\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"DTCP\" ] } sink::codec property Provides access to the properites of the currently used audio codec. This property is read-only . Value Result Name Type Description result object Properites of the currently used audio codec result.codec string Audio codec used (must be one of the following: LC-SBC ) result.settings opaque object Codec-specific audio quality preset, compression profile, etc Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::codec\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"LC-SBC\", \"settings\": {} } } sink::drm property Provides access to the properites of the currently used DRM scheme. This property is read-only . Value Result Name Type Description result object Properites of the currently used DRM scheme result.drm string Content protection scheme used (must be one of the following: DTCP, SCMS-T ) result.settings opaque object DRM-specific content protection level, encoding rules, etc Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected or not yet configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::drm\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"drm\": \"DTCP\", \"settings\": {} } } sink::stream property Provides access to the properties of the currently transmitted audio stream. This property is read-only . Value Result Name Type Description result object Properties of the currently transmitted audio stream result.samplerate integer Sample rate in Hz result.bitrate integer Target bitrate in bits per second (eg. 320000) result.channels integer Number of audio channels result.resolution integer Sampling resolution in bits per sample result.isresampled boolean Indicates if the source stream is being resampled by the stack to match sink capabilities Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected or not yet configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::stream\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"samplerate\": 44100, \"bitrate\": 0, \"channels\": 2, \"resolution\": 16, \"isresampled\": false } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Sink interface: BluetoothAudio Sink interface events: Notification Description sink::statechanged Signals audio sink state change sink::statechanged notification Signals audio sink state change. Parameters Name Type Description params object ... params.state string Changed BluetoothAudio State (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.register\", \"params\": { \"event\": \"sink::statechanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.sink::statechanged\", \"params\": { \"state\": \"Unassigned\" } }","title":"Sink API"},{"location":"api/SinkAPI/#sink-api","text":"Version: 1.0.0 Status: Sink interface for Thunder framework. (Defined with IBluetoothAudio::ISink in IBluetoothAudio.h )","title":"Sink API"},{"location":"api/SinkAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/SinkAPI/#introduction","text":"","title":"Introduction"},{"location":"api/SinkAPI/#scope","text":"This document describes purpose and functionality of the Sink interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/SinkAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/SinkAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/SinkAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/SinkAPI/#description","text":"Sink JSON-RPC interface.","title":"Description"},{"location":"api/SinkAPI/#methods","text":"The following methods are provided by the Sink interface: BluetoothAudio Sink interface methods: Method Description sink::assign Assigns a Bluetooth sink device for audio playback sink::revoke Revokes a Bluetooth sink device from audio playback","title":"Methods"},{"location":"api/SinkAPI/#sinkassign-method","text":"Assigns a Bluetooth sink device for audio playback.","title":"sink::assign method"},{"location":"api/SinkAPI/#parameters","text":"Name Type Description params object ... params.address string Address of the bluetooth device to assign","title":"Parameters"},{"location":"api/SinkAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/SinkAPI/#errors","text":"Message Description ERROR_BAD_REQUEST Device address value is invalid ERROR_ALREADY_CONNECTED A sink device is already assigned","title":"Errors"},{"location":"api/SinkAPI/#example","text":"","title":"Example"},{"location":"api/SinkAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::assign\", \"params\": { \"address\": \"...\" } }","title":"Request"},{"location":"api/SinkAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/SinkAPI/#sinkrevoke-method","text":"Revokes a Bluetooth sink device from audio playback.","title":"sink::revoke method"},{"location":"api/SinkAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/SinkAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/SinkAPI/#errors_1","text":"Message Description ERROR_ALREADY_RELEASED No device is currently assigned as sink","title":"Errors"},{"location":"api/SinkAPI/#example_1","text":"","title":"Example"},{"location":"api/SinkAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::revoke\" }","title":"Request"},{"location":"api/SinkAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/SinkAPI/#properties","text":"The following properties are provided by the Sink interface: BluetoothAudio Sink interface properties: Property Description sink::state (read-only) Current state o the audio sink device sink::device (read-only) Bluetooth address of the audio sink device sink::type (read-only) Type of the audio sink device sink::latency Latency of the audio sink device sink::supportedcodecs (read-only) Audio codecs supported by the audio sink device sink::supporteddrms (read-only) DRM schemes supported by the audio sink device sink::codec (read-only) Properites of the currently used audio codec sink::drm (read-only) Properites of the currently used DRM scheme sink::stream (read-only) Properties of the currently transmitted audio stream","title":"Properties"},{"location":"api/SinkAPI/#sinkstate-property","text":"Provides access to the current state o the audio sink device. This property is read-only .","title":"sink::state property"},{"location":"api/SinkAPI/#value","text":"","title":"Value"},{"location":"api/SinkAPI/#result_2","text":"Name Type Description result string Current state o the audio sink device (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned )","title":"Result"},{"location":"api/SinkAPI/#example_2","text":"","title":"Example"},{"location":"api/SinkAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::state\" }","title":"Get Request"},{"location":"api/SinkAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unassigned\" }","title":"Get Response"},{"location":"api/SinkAPI/#sinkdevice-property","text":"Provides access to the bluetooth address of the audio sink device. This property is read-only .","title":"sink::device property"},{"location":"api/SinkAPI/#value_1","text":"","title":"Value"},{"location":"api/SinkAPI/#result_3","text":"Name Type Description result string Bluetooth address of the audio sink device","title":"Result"},{"location":"api/SinkAPI/#errors_2","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not assigned","title":"Errors"},{"location":"api/SinkAPI/#example_3","text":"","title":"Example"},{"location":"api/SinkAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::device\" }","title":"Get Request"},{"location":"api/SinkAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"api/SinkAPI/#sinktype-property","text":"Provides access to the type of the audio sink device. This property is read-only .","title":"sink::type property"},{"location":"api/SinkAPI/#value_2","text":"","title":"Value"},{"location":"api/SinkAPI/#result_4","text":"Name Type Description result string Type of the audio sink device (must be one of the following: Amplifier, Headphone, Recorder, Speaker, Unknown )","title":"Result"},{"location":"api/SinkAPI/#errors_3","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected","title":"Errors"},{"location":"api/SinkAPI/#example_4","text":"","title":"Example"},{"location":"api/SinkAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::type\" }","title":"Get Request"},{"location":"api/SinkAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" }","title":"Get Response"},{"location":"api/SinkAPI/#sinklatency-property","text":"Provides access to the latency of the audio sink device.","title":"sink::latency property"},{"location":"api/SinkAPI/#value_3","text":"Name Type Description (property) object Latency of the audio sink device (property).value integer Audio latency in milliseconds","title":"Value"},{"location":"api/SinkAPI/#result_5","text":"Name Type Description result integer Latency of the audio sink device","title":"Result"},{"location":"api/SinkAPI/#errors_4","text":"Message Description ERROR_BAD_REQUEST Latency value is invalid","title":"Errors"},{"location":"api/SinkAPI/#example_5","text":"","title":"Example"},{"location":"api/SinkAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::latency\" }","title":"Get Request"},{"location":"api/SinkAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/SinkAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::latency\", \"params\": { \"value\": 20 } }","title":"Set Request"},{"location":"api/SinkAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/SinkAPI/#sinksupportedcodecs-property","text":"Provides access to the audio codecs supported by the audio sink device. This property is read-only .","title":"sink::supportedcodecs property"},{"location":"api/SinkAPI/#value_4","text":"","title":"Value"},{"location":"api/SinkAPI/#result_6","text":"Name Type Description result array Audio codecs supported by the audio sink device result[#] string ... (must be one of the following: LC-SBC )","title":"Result"},{"location":"api/SinkAPI/#errors_5","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected","title":"Errors"},{"location":"api/SinkAPI/#example_6","text":"","title":"Example"},{"location":"api/SinkAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::supportedcodecs\" }","title":"Get Request"},{"location":"api/SinkAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"LC-SBC\" ] }","title":"Get Response"},{"location":"api/SinkAPI/#sinksupporteddrms-property","text":"Provides access to the DRM schemes supported by the audio sink device. This property is read-only .","title":"sink::supporteddrms property"},{"location":"api/SinkAPI/#value_5","text":"","title":"Value"},{"location":"api/SinkAPI/#result_7","text":"Name Type Description result array DRM schemes supported by the audio sink device result[#] string ... (must be one of the following: DTCP, SCMS-T )","title":"Result"},{"location":"api/SinkAPI/#errors_6","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected","title":"Errors"},{"location":"api/SinkAPI/#example_7","text":"","title":"Example"},{"location":"api/SinkAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::supporteddrms\" }","title":"Get Request"},{"location":"api/SinkAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"DTCP\" ] }","title":"Get Response"},{"location":"api/SinkAPI/#sinkcodec-property","text":"Provides access to the properites of the currently used audio codec. This property is read-only .","title":"sink::codec property"},{"location":"api/SinkAPI/#value_6","text":"","title":"Value"},{"location":"api/SinkAPI/#result_8","text":"Name Type Description result object Properites of the currently used audio codec result.codec string Audio codec used (must be one of the following: LC-SBC ) result.settings opaque object Codec-specific audio quality preset, compression profile, etc","title":"Result"},{"location":"api/SinkAPI/#errors_7","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not configured","title":"Errors"},{"location":"api/SinkAPI/#example_8","text":"","title":"Example"},{"location":"api/SinkAPI/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::codec\" }","title":"Get Request"},{"location":"api/SinkAPI/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"LC-SBC\", \"settings\": {} } }","title":"Get Response"},{"location":"api/SinkAPI/#sinkdrm-property","text":"Provides access to the properites of the currently used DRM scheme. This property is read-only .","title":"sink::drm property"},{"location":"api/SinkAPI/#value_7","text":"","title":"Value"},{"location":"api/SinkAPI/#result_9","text":"Name Type Description result object Properites of the currently used DRM scheme result.drm string Content protection scheme used (must be one of the following: DTCP, SCMS-T ) result.settings opaque object DRM-specific content protection level, encoding rules, etc","title":"Result"},{"location":"api/SinkAPI/#errors_8","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected or not yet configured","title":"Errors"},{"location":"api/SinkAPI/#example_9","text":"","title":"Example"},{"location":"api/SinkAPI/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::drm\" }","title":"Get Request"},{"location":"api/SinkAPI/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"drm\": \"DTCP\", \"settings\": {} } }","title":"Get Response"},{"location":"api/SinkAPI/#sinkstream-property","text":"Provides access to the properties of the currently transmitted audio stream. This property is read-only .","title":"sink::stream property"},{"location":"api/SinkAPI/#value_8","text":"","title":"Value"},{"location":"api/SinkAPI/#result_10","text":"Name Type Description result object Properties of the currently transmitted audio stream result.samplerate integer Sample rate in Hz result.bitrate integer Target bitrate in bits per second (eg. 320000) result.channels integer Number of audio channels result.resolution integer Sampling resolution in bits per sample result.isresampled boolean Indicates if the source stream is being resampled by the stack to match sink capabilities","title":"Result"},{"location":"api/SinkAPI/#errors_9","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected or not yet configured","title":"Errors"},{"location":"api/SinkAPI/#example_10","text":"","title":"Example"},{"location":"api/SinkAPI/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.sink::stream\" }","title":"Get Request"},{"location":"api/SinkAPI/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"samplerate\": 44100, \"bitrate\": 0, \"channels\": 2, \"resolution\": 16, \"isresampled\": false } }","title":"Get Response"},{"location":"api/SinkAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Sink interface: BluetoothAudio Sink interface events: Notification Description sink::statechanged Signals audio sink state change","title":"Notifications"},{"location":"api/SinkAPI/#sinkstatechanged-notification","text":"Signals audio sink state change.","title":"sink::statechanged notification"},{"location":"api/SinkAPI/#parameters_2","text":"Name Type Description params object ... params.state string Changed BluetoothAudio State (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned )","title":"Parameters"},{"location":"api/SinkAPI/#example_11","text":"","title":"Example"},{"location":"api/SinkAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Sink.1.register\", \"params\": { \"event\": \"sink::statechanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/SinkAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.sink::statechanged\", \"params\": { \"state\": \"Unassigned\" } }","title":"Message"},{"location":"api/SourceAPI/","text":"Source API Version: 1.0.0 Status: Source interface for Thunder framework. (Defined with IBluetoothAudio::ISource in IBluetoothAudio.h ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the Source interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Source JSON-RPC interface. Properties The following properties are provided by the Source interface: BluetoothAudio Source interface properties: Property Description source::state (read-only) Current state of the source device source::device (read-only) Bluetooth address of the source device source::type (read-only) Type of the audio source device source::codec (read-only) Properites of the currently used codec source::drm (read-only) Properties of the currently used DRM scheme source::stream (read-only) Properites of the currently transmitted audio stream source::state property Provides access to the current state of the source device. This property is read-only . Value Result Name Type Description result string Current state of the source device (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unassigned\" } source::device property Provides access to the bluetooth address of the source device. This property is read-only . Value Result Name Type Description result string Bluetooth address of the source device Errors Message Description ERROR_ILLEGAL_STATE No source device is currently connected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::device\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } source::type property Provides access to the type of the audio source device. This property is read-only . Value Result Name Type Description result string Type of the audio source device (must be one of the following: Microphone, Mixer, Player, Tuner, Unknown ) Errors Message Description ERROR_ILLEGAL_STATE No source device is currently connected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::type\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" } source::codec property Provides access to the properites of the currently used codec. This property is read-only . Value Result Name Type Description result object Properites of the currently used codec result.codec string Audio codec used (must be one of the following: LC-SBC ) result.settings opaque object Codec-specific audio quality preset, compression profile, etc Errors Message Description ERROR_ILLEGAL_STATE No source device is not connected or sink is not yet configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::codec\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"LC-SBC\", \"settings\": {} } } source::drm property Provides access to the properties of the currently used DRM scheme. This property is read-only . Value Result Name Type Description result object Properties of the currently used DRM scheme result.drm string Content protection scheme used (must be one of the following: DTCP, SCMS-T ) result.settings opaque object DRM-specific content protection level, encoding rules, etc Errors Message Description ERROR_ILLEGAL_STATE No source device is connected or sink is not yet configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::drm\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"drm\": \"DTCP\", \"settings\": {} } } source::stream property Provides access to the properites of the currently transmitted audio stream. This property is read-only . Value Result Name Type Description result object Properites of the currently transmitted audio stream result.samplerate integer Sample rate in Hz result.bitrate integer Target bitrate in bits per second (eg. 320000) result.channels integer Number of audio channels result.resolution integer Sampling resolution in bits per sample result.isresampled boolean Indicates if the source stream is being resampled by the stack to match sink capabilities Errors Message Description ERROR_ILLEGAL_STATE No source device is connected or sink is not yet configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::stream\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"samplerate\": 44100, \"bitrate\": 0, \"channels\": 2, \"resolution\": 16, \"isresampled\": false } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Source interface: BluetoothAudio Source interface events: Notification Description source::statechanged Signals audio source state change source::statechanged notification Signals audio source state change. Parameters Name Type Description params object ... params.state string Changed BluetoothAudio State (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.register\", \"params\": { \"event\": \"source::statechanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.source::statechanged\", \"params\": { \"state\": \"Unassigned\" } }","title":"Source API"},{"location":"api/SourceAPI/#source-api","text":"Version: 1.0.0 Status: Source interface for Thunder framework. (Defined with IBluetoothAudio::ISource in IBluetoothAudio.h )","title":"Source API"},{"location":"api/SourceAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/SourceAPI/#introduction","text":"","title":"Introduction"},{"location":"api/SourceAPI/#scope","text":"This document describes purpose and functionality of the Source interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/SourceAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/SourceAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/SourceAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/SourceAPI/#description","text":"Source JSON-RPC interface.","title":"Description"},{"location":"api/SourceAPI/#properties","text":"The following properties are provided by the Source interface: BluetoothAudio Source interface properties: Property Description source::state (read-only) Current state of the source device source::device (read-only) Bluetooth address of the source device source::type (read-only) Type of the audio source device source::codec (read-only) Properites of the currently used codec source::drm (read-only) Properties of the currently used DRM scheme source::stream (read-only) Properites of the currently transmitted audio stream","title":"Properties"},{"location":"api/SourceAPI/#sourcestate-property","text":"Provides access to the current state of the source device. This property is read-only .","title":"source::state property"},{"location":"api/SourceAPI/#value","text":"","title":"Value"},{"location":"api/SourceAPI/#result","text":"Name Type Description result string Current state of the source device (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned )","title":"Result"},{"location":"api/SourceAPI/#example","text":"","title":"Example"},{"location":"api/SourceAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::state\" }","title":"Get Request"},{"location":"api/SourceAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unassigned\" }","title":"Get Response"},{"location":"api/SourceAPI/#sourcedevice-property","text":"Provides access to the bluetooth address of the source device. This property is read-only .","title":"source::device property"},{"location":"api/SourceAPI/#value_1","text":"","title":"Value"},{"location":"api/SourceAPI/#result_1","text":"Name Type Description result string Bluetooth address of the source device","title":"Result"},{"location":"api/SourceAPI/#errors","text":"Message Description ERROR_ILLEGAL_STATE No source device is currently connected","title":"Errors"},{"location":"api/SourceAPI/#example_1","text":"","title":"Example"},{"location":"api/SourceAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::device\" }","title":"Get Request"},{"location":"api/SourceAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"api/SourceAPI/#sourcetype-property","text":"Provides access to the type of the audio source device. This property is read-only .","title":"source::type property"},{"location":"api/SourceAPI/#value_2","text":"","title":"Value"},{"location":"api/SourceAPI/#result_2","text":"Name Type Description result string Type of the audio source device (must be one of the following: Microphone, Mixer, Player, Tuner, Unknown )","title":"Result"},{"location":"api/SourceAPI/#errors_1","text":"Message Description ERROR_ILLEGAL_STATE No source device is currently connected","title":"Errors"},{"location":"api/SourceAPI/#example_2","text":"","title":"Example"},{"location":"api/SourceAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::type\" }","title":"Get Request"},{"location":"api/SourceAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" }","title":"Get Response"},{"location":"api/SourceAPI/#sourcecodec-property","text":"Provides access to the properites of the currently used codec. This property is read-only .","title":"source::codec property"},{"location":"api/SourceAPI/#value_3","text":"","title":"Value"},{"location":"api/SourceAPI/#result_3","text":"Name Type Description result object Properites of the currently used codec result.codec string Audio codec used (must be one of the following: LC-SBC ) result.settings opaque object Codec-specific audio quality preset, compression profile, etc","title":"Result"},{"location":"api/SourceAPI/#errors_2","text":"Message Description ERROR_ILLEGAL_STATE No source device is not connected or sink is not yet configured","title":"Errors"},{"location":"api/SourceAPI/#example_3","text":"","title":"Example"},{"location":"api/SourceAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::codec\" }","title":"Get Request"},{"location":"api/SourceAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"LC-SBC\", \"settings\": {} } }","title":"Get Response"},{"location":"api/SourceAPI/#sourcedrm-property","text":"Provides access to the properties of the currently used DRM scheme. This property is read-only .","title":"source::drm property"},{"location":"api/SourceAPI/#value_4","text":"","title":"Value"},{"location":"api/SourceAPI/#result_4","text":"Name Type Description result object Properties of the currently used DRM scheme result.drm string Content protection scheme used (must be one of the following: DTCP, SCMS-T ) result.settings opaque object DRM-specific content protection level, encoding rules, etc","title":"Result"},{"location":"api/SourceAPI/#errors_3","text":"Message Description ERROR_ILLEGAL_STATE No source device is connected or sink is not yet configured","title":"Errors"},{"location":"api/SourceAPI/#example_4","text":"","title":"Example"},{"location":"api/SourceAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::drm\" }","title":"Get Request"},{"location":"api/SourceAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"drm\": \"DTCP\", \"settings\": {} } }","title":"Get Response"},{"location":"api/SourceAPI/#sourcestream-property","text":"Provides access to the properites of the currently transmitted audio stream. This property is read-only .","title":"source::stream property"},{"location":"api/SourceAPI/#value_5","text":"","title":"Value"},{"location":"api/SourceAPI/#result_5","text":"Name Type Description result object Properites of the currently transmitted audio stream result.samplerate integer Sample rate in Hz result.bitrate integer Target bitrate in bits per second (eg. 320000) result.channels integer Number of audio channels result.resolution integer Sampling resolution in bits per sample result.isresampled boolean Indicates if the source stream is being resampled by the stack to match sink capabilities","title":"Result"},{"location":"api/SourceAPI/#errors_4","text":"Message Description ERROR_ILLEGAL_STATE No source device is connected or sink is not yet configured","title":"Errors"},{"location":"api/SourceAPI/#example_5","text":"","title":"Example"},{"location":"api/SourceAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.source::stream\" }","title":"Get Request"},{"location":"api/SourceAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"samplerate\": 44100, \"bitrate\": 0, \"channels\": 2, \"resolution\": 16, \"isresampled\": false } }","title":"Get Response"},{"location":"api/SourceAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Source interface: BluetoothAudio Source interface events: Notification Description source::statechanged Signals audio source state change","title":"Notifications"},{"location":"api/SourceAPI/#sourcestatechanged-notification","text":"Signals audio source state change.","title":"source::statechanged notification"},{"location":"api/SourceAPI/#parameters","text":"Name Type Description params object ... params.state string Changed BluetoothAudio State (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned )","title":"Parameters"},{"location":"api/SourceAPI/#example_6","text":"","title":"Example"},{"location":"api/SourceAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Source.1.register\", \"params\": { \"event\": \"source::statechanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/SourceAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.source::statechanged\", \"params\": { \"state\": \"Unassigned\" } }","title":"Message"},{"location":"api/SparkAPI/","text":"Spark API Version: 1.0.0 Status: Spark interface for Thunder framework. (Defined by Spark.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Spark interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Spark JSON-RPC interface. Methods The following methods are provided by the Spark interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Spark interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps (read-only) Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service url property Provides access to the URL loaded in the browser. Also see: urlchange Value Name Type Description (property) string URL loaded in the browser Result Name Type Description result string URL loaded in the browser Errors Message Description ERROR_INCORRECT_URL Incorrect URL given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\", \"params\": \"https://www.google.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the current browser visibility. Also see: visibilitychange Value Name Type Description (property) string Current browser visibility Result Name Type Description result string Current browser visibility Errors Message Description ERROR_UNAVAILABLE Returned when the operation is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current number of frames per second the browser is rendering. This property is read-only . Value Result Name Type Description result integer Current number of frames per second the browser is rendering Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service Result Name Type Description result string Running state of the service Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Spark interface: Browser interface events: Notification Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Notification Description statechange Signals a state change of the service urlchange notification Signals a URL change in the browser. Parameters Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) (default: True ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } } visibilitychange notification Signals a visibility change of the browser. Parameters Name Type Description params object ... params.hidden boolean Determines if the browser has been hidden (true) or made visible (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } } statechange notification Signals a state change of the service. Parameters Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Spark API"},{"location":"api/SparkAPI/#spark-api","text":"Version: 1.0.0 Status: Spark interface for Thunder framework. (Defined by Spark.json )","title":"Spark API"},{"location":"api/SparkAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/SparkAPI/#introduction","text":"","title":"Introduction"},{"location":"api/SparkAPI/#scope","text":"This document describes purpose and functionality of the Spark interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/SparkAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/SparkAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/SparkAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/SparkAPI/#description","text":"Spark JSON-RPC interface.","title":"Description"},{"location":"api/SparkAPI/#methods","text":"The following methods are provided by the Spark interface: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"api/SparkAPI/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"api/SparkAPI/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"api/SparkAPI/#parameters","text":"Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"api/SparkAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/SparkAPI/#errors","text":"Message Description ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"api/SparkAPI/#example","text":"","title":"Example"},{"location":"api/SparkAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"api/SparkAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/SparkAPI/#properties","text":"The following properties are provided by the Spark interface: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps (read-only) Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"api/SparkAPI/#url-property","text":"Provides access to the URL loaded in the browser. Also see: urlchange","title":"url property"},{"location":"api/SparkAPI/#value","text":"Name Type Description (property) string URL loaded in the browser","title":"Value"},{"location":"api/SparkAPI/#result_1","text":"Name Type Description result string URL loaded in the browser","title":"Result"},{"location":"api/SparkAPI/#errors_1","text":"Message Description ERROR_INCORRECT_URL Incorrect URL given","title":"Errors"},{"location":"api/SparkAPI/#example_1","text":"","title":"Example"},{"location":"api/SparkAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\" }","title":"Get Request"},{"location":"api/SparkAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" }","title":"Get Response"},{"location":"api/SparkAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\", \"params\": \"https://www.google.com\" }","title":"Set Request"},{"location":"api/SparkAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/SparkAPI/#visibility-property","text":"Provides access to the current browser visibility. Also see: visibilitychange","title":"visibility property"},{"location":"api/SparkAPI/#value_1","text":"Name Type Description (property) string Current browser visibility","title":"Value"},{"location":"api/SparkAPI/#result_2","text":"Name Type Description result string Current browser visibility","title":"Result"},{"location":"api/SparkAPI/#errors_2","text":"Message Description ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"api/SparkAPI/#example_2","text":"","title":"Example"},{"location":"api/SparkAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\" }","title":"Get Request"},{"location":"api/SparkAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" }","title":"Get Response"},{"location":"api/SparkAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"api/SparkAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/SparkAPI/#fps-property","text":"Provides access to the current number of frames per second the browser is rendering. This property is read-only .","title":"fps property"},{"location":"api/SparkAPI/#value_2","text":"","title":"Value"},{"location":"api/SparkAPI/#result_3","text":"Name Type Description result integer Current number of frames per second the browser is rendering","title":"Result"},{"location":"api/SparkAPI/#example_3","text":"","title":"Example"},{"location":"api/SparkAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.fps\" }","title":"Get Request"},{"location":"api/SparkAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 }","title":"Get Response"},{"location":"api/SparkAPI/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"api/SparkAPI/#value_3","text":"Name Type Description (property) string Running state of the service","title":"Value"},{"location":"api/SparkAPI/#result_4","text":"Name Type Description result string Running state of the service","title":"Result"},{"location":"api/SparkAPI/#example_4","text":"","title":"Example"},{"location":"api/SparkAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\" }","title":"Get Request"},{"location":"api/SparkAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"api/SparkAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"api/SparkAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/SparkAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Spark interface: Browser interface events: Notification Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Notification Description statechange Signals a state change of the service","title":"Notifications"},{"location":"api/SparkAPI/#urlchange-notification","text":"Signals a URL change in the browser.","title":"urlchange notification"},{"location":"api/SparkAPI/#parameters_1","text":"Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) (default: True )","title":"Parameters"},{"location":"api/SparkAPI/#example_5","text":"","title":"Example"},{"location":"api/SparkAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/SparkAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } }","title":"Message"},{"location":"api/SparkAPI/#visibilitychange-notification","text":"Signals a visibility change of the browser.","title":"visibilitychange notification"},{"location":"api/SparkAPI/#parameters_2","text":"Name Type Description params object ... params.hidden boolean Determines if the browser has been hidden (true) or made visible (false)","title":"Parameters"},{"location":"api/SparkAPI/#example_6","text":"","title":"Example"},{"location":"api/SparkAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/SparkAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Message"},{"location":"api/SparkAPI/#statechange-notification","text":"Signals a state change of the service.","title":"statechange notification"},{"location":"api/SparkAPI/#parameters_3","text":"Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"api/SparkAPI/#example_7","text":"","title":"Example"},{"location":"api/SparkAPI/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/SparkAPI/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Message"},{"location":"api/StateControlAPI/","text":"StateControl API Version: 1.0.0 Status: StateControl interface for Thunder framework. (Defined by StateControl.json ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the StateControl interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description StateControl JSON-RPC interface. Properties The following properties are provided by the StateControl interface: StateControl interface properties: Property Description state Running state of the service state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service Result Name Type Description result string Running state of the service Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"StateControl.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"StateControl.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the StateControl interface: StateControl interface events: Notification Description statechange Signals a state change of the service statechange notification Signals a state change of the service. Parameters Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"StateControl.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"StateControl API"},{"location":"api/StateControlAPI/#statecontrol-api","text":"Version: 1.0.0 Status: StateControl interface for Thunder framework. (Defined by StateControl.json )","title":"StateControl API"},{"location":"api/StateControlAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/StateControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/StateControlAPI/#scope","text":"This document describes purpose and functionality of the StateControl interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/StateControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/StateControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/StateControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/StateControlAPI/#description","text":"StateControl JSON-RPC interface.","title":"Description"},{"location":"api/StateControlAPI/#properties","text":"The following properties are provided by the StateControl interface: StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"api/StateControlAPI/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"api/StateControlAPI/#value","text":"Name Type Description (property) string Running state of the service","title":"Value"},{"location":"api/StateControlAPI/#result","text":"Name Type Description result string Running state of the service","title":"Result"},{"location":"api/StateControlAPI/#example","text":"","title":"Example"},{"location":"api/StateControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"StateControl.1.state\" }","title":"Get Request"},{"location":"api/StateControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"api/StateControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"StateControl.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"api/StateControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/StateControlAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the StateControl interface: StateControl interface events: Notification Description statechange Signals a state change of the service","title":"Notifications"},{"location":"api/StateControlAPI/#statechange-notification","text":"Signals a state change of the service.","title":"statechange notification"},{"location":"api/StateControlAPI/#parameters","text":"Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"api/StateControlAPI/#example_1","text":"","title":"Example"},{"location":"api/StateControlAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"StateControl.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/StateControlAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Message"},{"location":"api/StreamerAPI/","text":"Streamer API Version: 1.0.0 Status: Streamer interface for Thunder framework. (Defined by Streamer.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Streamer interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Streamer JSON-RPC interface. Methods The following methods are provided by the Streamer interface: Streamer interface methods: Method Description create Creates a stream instance destroy Destroys a stream instance load Loads a source into a stream attach Attaches a decoder to the streamer detach Detaches a decoder from the streamer create method Creates a stream instance. Parameters Name Type Description params object ... params.type string Stream type Result Name Type Description result integer Stream ID Errors Message Description ERROR_BAD_REQUEST Invalid stream type given ERROR_UNAVAILABLE Fronted of the selected stream type is not available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.create\", \"params\": { \"type\": \"cable\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } destroy method Destroys a stream instance. Parameters Name Type Description params object ... params.id integer Stream ID Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.destroy\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } load method Loads a source into a stream. Also see: statechange Parameters Name Type Description params object ... params.id integer Stream ID params.location string Location of the source to load Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_INCORRECT_URL Invalid location given ERROR_GENERAL Undefined loading error ERROR_ILLEGAL_STATE Stream is not in a valid state Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.load\", \"params\": { \"id\": 0, \"location\": \"http://example.com/sample.m3u8\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } attach method Attaches a decoder to the streamer. Parameters Name Type Description params object ... params.id integer Stream ID Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_INPROGRESS Decoder already attached ERROR_ILLEGAL_STATE Stream is not in a valid state ERROR_UNAVAILABLE No free decoders available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.attach\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } detach method Detaches a decoder from the streamer. Parameters Name Type Description params object ... params.id integer Stream ID Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Stream is not in a valid state or decoder not attached ERROR_INPROGRESS Decoder is in use Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.detach\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Streamer interface: Streamer interface properties: Property Description speed Playback speed position Stream position window Stream playback window speeds (read-only) Speeds supported by the stream player streams (read-only) All created stream instance IDs type (read-only) Type of a stream drm (read-only) DRM type associated with a stream state (read-only) Current state of a stream metadata (read-only) Metadata associated with the stream error (read-only) Most recent error code elements (read-only) Stream elements speed property Provides access to the playback speed. Description Speed (in percentage) Also see: statechange Value Name Type Description (property) integer Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speed@<stream id> . Result Name Type Description result integer Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\", \"params\": 100 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } position property Provides access to the stream position. Value Name Type Description (property) integer Position (in milliseconds) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.position@<stream id> . Result Name Type Description result integer Position (in milliseconds) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 60000 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\", \"params\": 60000 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } window property Provides access to the stream playback window. Value Name Type Description (property) object Geometry of the window (property).x integer Horizontal position of the window (in pixels) (property).y integer Vertical position of the window (in pixels) (property).width integer Width of the window (in pixels) (property).height integer Height of the window (in pixels) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.window@<stream id> . Result Name Type Description result object Geometry of the window result.x integer Horizontal position of the window (in pixels) result.y integer Vertical position of the window (in pixels) result.width integer Width of the window (in pixels) result.height integer Height of the window (in pixels) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } speeds property Provides access to the speeds supported by the stream player. This property is read-only . Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speeds@<stream id> . Result Name Type Description result array Supported speeds (in percentage) result[#] integer (speeds in percentage) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speeds@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 100, -100, 200, -200, 400, -400 ] } streams property Provides access to the all created stream instance IDs. This property is read-only . Value Result Name Type Description result array Stream IDs result[#] integer (a stream ID) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.streams\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 1, 2, 3 ] } type property Provides access to the type of a stream. This property is read-only . Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.type@<stream id> . Result Name Type Description result string Stream type Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.type@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"cable\" } drm property Provides access to the DRM type associated with a stream. This property is read-only . Also see: drmchange Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.drm@<stream id> . Result Name Type Description result string DRM used Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.drm@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"clearkey\" } state property Provides access to the current state of a stream. This property is read-only . Also see: statechange Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.state@<stream id> . Result Name Type Description result string Stream state Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.state@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"controlled\" } metadata property Provides access to the metadata associated with the stream. This property is read-only . Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.metadata@<stream id> . Result Name Type Description result string Custom implementation-specific metadata Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.metadata@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } error property Provides access to the most recent error code. This property is read-only . Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.error@<stream id> . Result Name Type Description result integer Custom implementation-specific error code value Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.error@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } elements property Provides access to the stream elements. This property is read-only . Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.elements@<stream id> . Result Name Type Description result array List of stream elements result[#] object Stream element result[#].type string Stream element type Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_UNAVAILABLE Stream elements retrieval not supported Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.elements@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"video\" } ] } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Streamer interface: Streamer interface events: Notification Description statechange Notifies of stream state change timeupdate Notifies of stream position change stream Notifies of a custom stream incident player Notifies of a custom player incident drm Notifies of a custom DRM-related incident statechange notification Notifies of stream state change. Parameters Name Type Description params object ... params.state string Stream state The Stream ID argument will be passed within the designator, e.g. 0.client.statechange . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"0.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"0.client.statechange\", \"params\": { \"state\": \"controlled\" } } timeupdate notification Notifies of stream position change. This event is fired every second to indicate the current stream position. It does not fire if the stream is paused (i.e. speed is set to 0). Parameters Name Type Description params object ... params.time integer Stream position in miliseconds The Stream ID argument will be passed within the designator, e.g. 0.client.timeupdate . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"timeupdate\", \"id\": \"0.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"0.client.timeupdate\", \"params\": { \"time\": 30000 } } stream notification Notifies of a custom stream incident. Parameters Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.stream . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"stream\", \"id\": \"0.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"0.client.stream\", \"params\": { \"code\": 1 } } player notification Notifies of a custom player incident. Parameters Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.player . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"player\", \"id\": \"0.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"0.client.player\", \"params\": { \"code\": 1 } } drm notification Notifies of a custom DRM-related incident. Parameters Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.drm . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"drm\", \"id\": \"0.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"0.client.drm\", \"params\": { \"code\": 1 } }","title":"Streamer API"},{"location":"api/StreamerAPI/#streamer-api","text":"Version: 1.0.0 Status: Streamer interface for Thunder framework. (Defined by Streamer.json )","title":"Streamer API"},{"location":"api/StreamerAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/StreamerAPI/#introduction","text":"","title":"Introduction"},{"location":"api/StreamerAPI/#scope","text":"This document describes purpose and functionality of the Streamer interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/StreamerAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/StreamerAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/StreamerAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/StreamerAPI/#description","text":"Streamer JSON-RPC interface.","title":"Description"},{"location":"api/StreamerAPI/#methods","text":"The following methods are provided by the Streamer interface: Streamer interface methods: Method Description create Creates a stream instance destroy Destroys a stream instance load Loads a source into a stream attach Attaches a decoder to the streamer detach Detaches a decoder from the streamer","title":"Methods"},{"location":"api/StreamerAPI/#create-method","text":"Creates a stream instance.","title":"create method"},{"location":"api/StreamerAPI/#parameters","text":"Name Type Description params object ... params.type string Stream type","title":"Parameters"},{"location":"api/StreamerAPI/#result","text":"Name Type Description result integer Stream ID","title":"Result"},{"location":"api/StreamerAPI/#errors","text":"Message Description ERROR_BAD_REQUEST Invalid stream type given ERROR_UNAVAILABLE Fronted of the selected stream type is not available","title":"Errors"},{"location":"api/StreamerAPI/#example","text":"","title":"Example"},{"location":"api/StreamerAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.create\", \"params\": { \"type\": \"cable\" } }","title":"Request"},{"location":"api/StreamerAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/StreamerAPI/#destroy-method","text":"Destroys a stream instance.","title":"destroy method"},{"location":"api/StreamerAPI/#parameters_1","text":"Name Type Description params object ... params.id integer Stream ID","title":"Parameters"},{"location":"api/StreamerAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/StreamerAPI/#errors_1","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"api/StreamerAPI/#example_1","text":"","title":"Example"},{"location":"api/StreamerAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.destroy\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"api/StreamerAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/StreamerAPI/#load-method","text":"Loads a source into a stream. Also see: statechange","title":"load method"},{"location":"api/StreamerAPI/#parameters_2","text":"Name Type Description params object ... params.id integer Stream ID params.location string Location of the source to load","title":"Parameters"},{"location":"api/StreamerAPI/#result_2","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/StreamerAPI/#errors_2","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_INCORRECT_URL Invalid location given ERROR_GENERAL Undefined loading error ERROR_ILLEGAL_STATE Stream is not in a valid state","title":"Errors"},{"location":"api/StreamerAPI/#example_2","text":"","title":"Example"},{"location":"api/StreamerAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.load\", \"params\": { \"id\": 0, \"location\": \"http://example.com/sample.m3u8\" } }","title":"Request"},{"location":"api/StreamerAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/StreamerAPI/#attach-method","text":"Attaches a decoder to the streamer.","title":"attach method"},{"location":"api/StreamerAPI/#parameters_3","text":"Name Type Description params object ... params.id integer Stream ID","title":"Parameters"},{"location":"api/StreamerAPI/#result_3","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/StreamerAPI/#errors_3","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_INPROGRESS Decoder already attached ERROR_ILLEGAL_STATE Stream is not in a valid state ERROR_UNAVAILABLE No free decoders available","title":"Errors"},{"location":"api/StreamerAPI/#example_3","text":"","title":"Example"},{"location":"api/StreamerAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.attach\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"api/StreamerAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/StreamerAPI/#detach-method","text":"Detaches a decoder from the streamer.","title":"detach method"},{"location":"api/StreamerAPI/#parameters_4","text":"Name Type Description params object ... params.id integer Stream ID","title":"Parameters"},{"location":"api/StreamerAPI/#result_4","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/StreamerAPI/#errors_4","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Stream is not in a valid state or decoder not attached ERROR_INPROGRESS Decoder is in use","title":"Errors"},{"location":"api/StreamerAPI/#example_4","text":"","title":"Example"},{"location":"api/StreamerAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.detach\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"api/StreamerAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/StreamerAPI/#properties","text":"The following properties are provided by the Streamer interface: Streamer interface properties: Property Description speed Playback speed position Stream position window Stream playback window speeds (read-only) Speeds supported by the stream player streams (read-only) All created stream instance IDs type (read-only) Type of a stream drm (read-only) DRM type associated with a stream state (read-only) Current state of a stream metadata (read-only) Metadata associated with the stream error (read-only) Most recent error code elements (read-only) Stream elements","title":"Properties"},{"location":"api/StreamerAPI/#speed-property","text":"Provides access to the playback speed.","title":"speed property"},{"location":"api/StreamerAPI/#description_1","text":"Speed (in percentage) Also see: statechange","title":"Description"},{"location":"api/StreamerAPI/#value","text":"Name Type Description (property) integer Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speed@<stream id> .","title":"Value"},{"location":"api/StreamerAPI/#result_5","text":"Name Type Description result integer Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player","title":"Result"},{"location":"api/StreamerAPI/#errors_5","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"api/StreamerAPI/#example_5","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 }","title":"Get Response"},{"location":"api/StreamerAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\", \"params\": 100 }","title":"Set Request"},{"location":"api/StreamerAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/StreamerAPI/#position-property","text":"Provides access to the stream position.","title":"position property"},{"location":"api/StreamerAPI/#value_1","text":"Name Type Description (property) integer Position (in milliseconds) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.position@<stream id> .","title":"Value"},{"location":"api/StreamerAPI/#result_6","text":"Name Type Description result integer Position (in milliseconds)","title":"Result"},{"location":"api/StreamerAPI/#errors_6","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"api/StreamerAPI/#example_6","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 60000 }","title":"Get Response"},{"location":"api/StreamerAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\", \"params\": 60000 }","title":"Set Request"},{"location":"api/StreamerAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/StreamerAPI/#window-property","text":"Provides access to the stream playback window.","title":"window property"},{"location":"api/StreamerAPI/#value_2","text":"Name Type Description (property) object Geometry of the window (property).x integer Horizontal position of the window (in pixels) (property).y integer Vertical position of the window (in pixels) (property).width integer Width of the window (in pixels) (property).height integer Height of the window (in pixels) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.window@<stream id> .","title":"Value"},{"location":"api/StreamerAPI/#result_7","text":"Name Type Description result object Geometry of the window result.x integer Horizontal position of the window (in pixels) result.y integer Vertical position of the window (in pixels) result.width integer Width of the window (in pixels) result.height integer Height of the window (in pixels)","title":"Result"},{"location":"api/StreamerAPI/#errors_7","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"api/StreamerAPI/#example_7","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } }","title":"Get Response"},{"location":"api/StreamerAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } }","title":"Set Request"},{"location":"api/StreamerAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/StreamerAPI/#speeds-property","text":"Provides access to the speeds supported by the stream player. This property is read-only .","title":"speeds property"},{"location":"api/StreamerAPI/#value_3","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speeds@<stream id> .","title":"Value"},{"location":"api/StreamerAPI/#result_8","text":"Name Type Description result array Supported speeds (in percentage) result[#] integer (speeds in percentage)","title":"Result"},{"location":"api/StreamerAPI/#errors_8","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"api/StreamerAPI/#example_8","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speeds@0\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 100, -100, 200, -200, 400, -400 ] }","title":"Get Response"},{"location":"api/StreamerAPI/#streams-property","text":"Provides access to the all created stream instance IDs. This property is read-only .","title":"streams property"},{"location":"api/StreamerAPI/#value_4","text":"","title":"Value"},{"location":"api/StreamerAPI/#result_9","text":"Name Type Description result array Stream IDs result[#] integer (a stream ID)","title":"Result"},{"location":"api/StreamerAPI/#example_9","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.streams\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 1, 2, 3 ] }","title":"Get Response"},{"location":"api/StreamerAPI/#type-property","text":"Provides access to the type of a stream. This property is read-only .","title":"type property"},{"location":"api/StreamerAPI/#value_5","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.type@<stream id> .","title":"Value"},{"location":"api/StreamerAPI/#result_10","text":"Name Type Description result string Stream type","title":"Result"},{"location":"api/StreamerAPI/#errors_9","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"api/StreamerAPI/#example_10","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.type@0\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"cable\" }","title":"Get Response"},{"location":"api/StreamerAPI/#drm-property","text":"Provides access to the DRM type associated with a stream. This property is read-only . Also see: drmchange","title":"drm property"},{"location":"api/StreamerAPI/#value_6","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.drm@<stream id> .","title":"Value"},{"location":"api/StreamerAPI/#result_11","text":"Name Type Description result string DRM used","title":"Result"},{"location":"api/StreamerAPI/#errors_10","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"api/StreamerAPI/#example_11","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.drm@0\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"clearkey\" }","title":"Get Response"},{"location":"api/StreamerAPI/#state-property","text":"Provides access to the current state of a stream. This property is read-only . Also see: statechange","title":"state property"},{"location":"api/StreamerAPI/#value_7","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.state@<stream id> .","title":"Value"},{"location":"api/StreamerAPI/#result_12","text":"Name Type Description result string Stream state","title":"Result"},{"location":"api/StreamerAPI/#errors_11","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"api/StreamerAPI/#example_12","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.state@0\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"controlled\" }","title":"Get Response"},{"location":"api/StreamerAPI/#metadata-property","text":"Provides access to the metadata associated with the stream. This property is read-only .","title":"metadata property"},{"location":"api/StreamerAPI/#value_8","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.metadata@<stream id> .","title":"Value"},{"location":"api/StreamerAPI/#result_13","text":"Name Type Description result string Custom implementation-specific metadata","title":"Result"},{"location":"api/StreamerAPI/#errors_12","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"api/StreamerAPI/#example_13","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.metadata@0\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"api/StreamerAPI/#error-property","text":"Provides access to the most recent error code. This property is read-only .","title":"error property"},{"location":"api/StreamerAPI/#value_9","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.error@<stream id> .","title":"Value"},{"location":"api/StreamerAPI/#result_14","text":"Name Type Description result integer Custom implementation-specific error code value","title":"Result"},{"location":"api/StreamerAPI/#errors_13","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"api/StreamerAPI/#example_14","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.error@0\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/StreamerAPI/#elements-property","text":"Provides access to the stream elements. This property is read-only .","title":"elements property"},{"location":"api/StreamerAPI/#value_10","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.elements@<stream id> .","title":"Value"},{"location":"api/StreamerAPI/#result_15","text":"Name Type Description result array List of stream elements result[#] object Stream element result[#].type string Stream element type","title":"Result"},{"location":"api/StreamerAPI/#errors_14","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_UNAVAILABLE Stream elements retrieval not supported","title":"Errors"},{"location":"api/StreamerAPI/#example_15","text":"","title":"Example"},{"location":"api/StreamerAPI/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.elements@0\" }","title":"Get Request"},{"location":"api/StreamerAPI/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"video\" } ] }","title":"Get Response"},{"location":"api/StreamerAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Streamer interface: Streamer interface events: Notification Description statechange Notifies of stream state change timeupdate Notifies of stream position change stream Notifies of a custom stream incident player Notifies of a custom player incident drm Notifies of a custom DRM-related incident","title":"Notifications"},{"location":"api/StreamerAPI/#statechange-notification","text":"Notifies of stream state change.","title":"statechange notification"},{"location":"api/StreamerAPI/#parameters_5","text":"Name Type Description params object ... params.state string Stream state The Stream ID argument will be passed within the designator, e.g. 0.client.statechange .","title":"Parameters"},{"location":"api/StreamerAPI/#example_16","text":"","title":"Example"},{"location":"api/StreamerAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"0.client\" } }","title":"Registration"},{"location":"api/StreamerAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.statechange\", \"params\": { \"state\": \"controlled\" } }","title":"Message"},{"location":"api/StreamerAPI/#timeupdate-notification","text":"Notifies of stream position change. This event is fired every second to indicate the current stream position. It does not fire if the stream is paused (i.e. speed is set to 0).","title":"timeupdate notification"},{"location":"api/StreamerAPI/#parameters_6","text":"Name Type Description params object ... params.time integer Stream position in miliseconds The Stream ID argument will be passed within the designator, e.g. 0.client.timeupdate .","title":"Parameters"},{"location":"api/StreamerAPI/#example_17","text":"","title":"Example"},{"location":"api/StreamerAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"timeupdate\", \"id\": \"0.client\" } }","title":"Registration"},{"location":"api/StreamerAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.timeupdate\", \"params\": { \"time\": 30000 } }","title":"Message"},{"location":"api/StreamerAPI/#stream-notification","text":"Notifies of a custom stream incident.","title":"stream notification"},{"location":"api/StreamerAPI/#parameters_7","text":"Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.stream .","title":"Parameters"},{"location":"api/StreamerAPI/#example_18","text":"","title":"Example"},{"location":"api/StreamerAPI/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"stream\", \"id\": \"0.client\" } }","title":"Registration"},{"location":"api/StreamerAPI/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.stream\", \"params\": { \"code\": 1 } }","title":"Message"},{"location":"api/StreamerAPI/#player-notification","text":"Notifies of a custom player incident.","title":"player notification"},{"location":"api/StreamerAPI/#parameters_8","text":"Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.player .","title":"Parameters"},{"location":"api/StreamerAPI/#example_19","text":"","title":"Example"},{"location":"api/StreamerAPI/#registration_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"player\", \"id\": \"0.client\" } }","title":"Registration"},{"location":"api/StreamerAPI/#message_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.player\", \"params\": { \"code\": 1 } }","title":"Message"},{"location":"api/StreamerAPI/#drm-notification","text":"Notifies of a custom DRM-related incident.","title":"drm notification"},{"location":"api/StreamerAPI/#parameters_9","text":"Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.drm .","title":"Parameters"},{"location":"api/StreamerAPI/#example_20","text":"","title":"Example"},{"location":"api/StreamerAPI/#registration_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"drm\", \"id\": \"0.client\" } }","title":"Registration"},{"location":"api/StreamerAPI/#message_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.drm\", \"params\": { \"code\": 1 } }","title":"Message"},{"location":"api/SubsystemControlAPI/","text":"Subsystem Control API Version: 1.0.0 Status: SubsystemControl interface for Thunder framework. (Defined by SubsystemControl.json ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the SubsystemControl interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description SubsystemControl JSON-RPC interface. Methods The following methods are provided by the SubsystemControl interface: SubsystemControl interface methods: Method Description activate Activates a subsystem deactivate Deactivates a subsystem activate method Activates a subsystem. Description This method allows a subsystem to be activated from the outside. This is usefull in case Thunder can not determine the availability of a subsystem but it needs to be triggered from the outside. Parameters Name Type Description params object ... params.system string Subsystem to activate params?.configuration string (optional) A JSON string that holds the information applicable to the subsystem to be activated Result Name Type Description result integer The result of the activating anythin unequal to 0 means somthing failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SubsystemControl.1.activate\", \"params\": { \"system\": \"network\", \"configuration\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } deactivate method Deactivates a subsystem. Description This method allows a subsystem to be deactivated from the outside. This is usefull in case Thunder can not determine the availability of a subsystem but it needs to be triggered from the outside. Parameters Name Type Description params string Subsystem to deactivate Result Name Type Description result null Always null (default: None ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SubsystemControl.1.deactivate\", \"params\": \"network\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Subsystem Control API"},{"location":"api/SubsystemControlAPI/#subsystem-control-api","text":"Version: 1.0.0 Status: SubsystemControl interface for Thunder framework. (Defined by SubsystemControl.json )","title":"Subsystem Control API"},{"location":"api/SubsystemControlAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/SubsystemControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/SubsystemControlAPI/#scope","text":"This document describes purpose and functionality of the SubsystemControl interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/SubsystemControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/SubsystemControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/SubsystemControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/SubsystemControlAPI/#description","text":"SubsystemControl JSON-RPC interface.","title":"Description"},{"location":"api/SubsystemControlAPI/#methods","text":"The following methods are provided by the SubsystemControl interface: SubsystemControl interface methods: Method Description activate Activates a subsystem deactivate Deactivates a subsystem","title":"Methods"},{"location":"api/SubsystemControlAPI/#activate-method","text":"Activates a subsystem.","title":"activate method"},{"location":"api/SubsystemControlAPI/#description_1","text":"This method allows a subsystem to be activated from the outside. This is usefull in case Thunder can not determine the availability of a subsystem but it needs to be triggered from the outside.","title":"Description"},{"location":"api/SubsystemControlAPI/#parameters","text":"Name Type Description params object ... params.system string Subsystem to activate params?.configuration string (optional) A JSON string that holds the information applicable to the subsystem to be activated","title":"Parameters"},{"location":"api/SubsystemControlAPI/#result","text":"Name Type Description result integer The result of the activating anythin unequal to 0 means somthing failed","title":"Result"},{"location":"api/SubsystemControlAPI/#example","text":"","title":"Example"},{"location":"api/SubsystemControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SubsystemControl.1.activate\", \"params\": { \"system\": \"network\", \"configuration\": \"...\" } }","title":"Request"},{"location":"api/SubsystemControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"api/SubsystemControlAPI/#deactivate-method","text":"Deactivates a subsystem.","title":"deactivate method"},{"location":"api/SubsystemControlAPI/#description_2","text":"This method allows a subsystem to be deactivated from the outside. This is usefull in case Thunder can not determine the availability of a subsystem but it needs to be triggered from the outside.","title":"Description"},{"location":"api/SubsystemControlAPI/#parameters_1","text":"Name Type Description params string Subsystem to deactivate","title":"Parameters"},{"location":"api/SubsystemControlAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/SubsystemControlAPI/#example_1","text":"","title":"Example"},{"location":"api/SubsystemControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SubsystemControl.1.deactivate\", \"params\": \"network\" }","title":"Request"},{"location":"api/SubsystemControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/SystemCommandsAPI/","text":"System Commands API Version: 1.0.0 Status: SystemCommands interface for Thunder framework. (Defined by SystemCommands.json ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the SystemCommands interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description System Commands JSON-RPC interface. Methods The following methods are provided by the SystemCommands interface: SystemCommands interface methods: Method Description usbreset Resets a USB device usbreset method Resets a USB device. Description With this method a USB device can be reset using USBFS_RESET ioctl command. Parameters Name Type Description params object ... params.device string USB device to reset (default: /dev/usb/001 ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to reset the USB device ERROR_UNAVAILABLE Unknown USB device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SystemCommands.1.usbreset\", \"params\": { \"device\": \"/dev/usb/001\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"System Commands API"},{"location":"api/SystemCommandsAPI/#system-commands-api","text":"Version: 1.0.0 Status: SystemCommands interface for Thunder framework. (Defined by SystemCommands.json )","title":"System Commands API"},{"location":"api/SystemCommandsAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/SystemCommandsAPI/#introduction","text":"","title":"Introduction"},{"location":"api/SystemCommandsAPI/#scope","text":"This document describes purpose and functionality of the SystemCommands interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/SystemCommandsAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/SystemCommandsAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/SystemCommandsAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/SystemCommandsAPI/#description","text":"System Commands JSON-RPC interface.","title":"Description"},{"location":"api/SystemCommandsAPI/#methods","text":"The following methods are provided by the SystemCommands interface: SystemCommands interface methods: Method Description usbreset Resets a USB device","title":"Methods"},{"location":"api/SystemCommandsAPI/#usbreset-method","text":"Resets a USB device.","title":"usbreset method"},{"location":"api/SystemCommandsAPI/#description_1","text":"With this method a USB device can be reset using USBFS_RESET ioctl command.","title":"Description"},{"location":"api/SystemCommandsAPI/#parameters","text":"Name Type Description params object ... params.device string USB device to reset (default: /dev/usb/001 )","title":"Parameters"},{"location":"api/SystemCommandsAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/SystemCommandsAPI/#errors","text":"Message Description ERROR_GENERAL Failed to reset the USB device ERROR_UNAVAILABLE Unknown USB device","title":"Errors"},{"location":"api/SystemCommandsAPI/#example","text":"","title":"Example"},{"location":"api/SystemCommandsAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SystemCommands.1.usbreset\", \"params\": { \"device\": \"/dev/usb/001\" } }","title":"Request"},{"location":"api/SystemCommandsAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/TimeSyncAPI/","text":"Time Sync API Version: 1.0.0 Status: TimeSync interface for Thunder framework. (Defined by TimeSync.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the TimeSync interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description TimeSync JSON-RPC interface. Methods The following methods are provided by the TimeSync interface: TimeSync interface methods: Method Description synchronize Synchronizes time synchronize method Synchronizes time. Description Use this method to synchronize the system time with the currently configured time source. If automatic time synchronization is initially disabled or stopped, it will be restarted. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Returned when the method is called while previously triggered synchronization is in progress. ERROR_INCOMPLETE_CONFIG Returned when the source configuration is missing or invalid. Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synchronize\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the TimeSync interface: TimeSync interface properties: Property Description synctime (read-only) Most recent synchronized time time Current system time synctime property Provides access to the most recent synchronized time. This property is read-only . Value Result Name Type Description result object Most recent synchronized time result.time string Synchronized time (in ISO8601 format); empty string if the time has never been synchronized result?.source string (optional) The synchronization source e.g. an NTP server Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synctime\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"time\": \"2019-05-07T07:20:26Z\", \"source\": \"ntp://example.com\" } } time property Provides access to the current system time. Description Upon setting this property automatic time synchronization will be stopped. Usage of this property is deprecated and the SubSystem control plugin can be used as an alternative to achieve the same Value Name Type Description (property) string System time (in ISO8601 format) Result Name Type Description result string System time (in ISO8601 format) Errors Message Description ERROR_BAD_REQUEST The time is invalid Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"2019-05-07T07:20:26Z\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\", \"params\": \"2019-05-07T07:20:26Z\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the TimeSync interface: TimeSync interface events: Notification Description timechange Signals a time change timechange notification Signals a time change. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.register\", \"params\": { \"event\": \"timechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.timechange\" }","title":"Time Sync API"},{"location":"api/TimeSyncAPI/#time-sync-api","text":"Version: 1.0.0 Status: TimeSync interface for Thunder framework. (Defined by TimeSync.json )","title":"Time Sync API"},{"location":"api/TimeSyncAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/TimeSyncAPI/#introduction","text":"","title":"Introduction"},{"location":"api/TimeSyncAPI/#scope","text":"This document describes purpose and functionality of the TimeSync interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/TimeSyncAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/TimeSyncAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/TimeSyncAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/TimeSyncAPI/#description","text":"TimeSync JSON-RPC interface.","title":"Description"},{"location":"api/TimeSyncAPI/#methods","text":"The following methods are provided by the TimeSync interface: TimeSync interface methods: Method Description synchronize Synchronizes time","title":"Methods"},{"location":"api/TimeSyncAPI/#synchronize-method","text":"Synchronizes time.","title":"synchronize method"},{"location":"api/TimeSyncAPI/#description_1","text":"Use this method to synchronize the system time with the currently configured time source. If automatic time synchronization is initially disabled or stopped, it will be restarted.","title":"Description"},{"location":"api/TimeSyncAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/TimeSyncAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/TimeSyncAPI/#errors","text":"Message Description ERROR_INPROGRESS Returned when the method is called while previously triggered synchronization is in progress. ERROR_INCOMPLETE_CONFIG Returned when the source configuration is missing or invalid.","title":"Errors"},{"location":"api/TimeSyncAPI/#example","text":"","title":"Example"},{"location":"api/TimeSyncAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synchronize\" }","title":"Request"},{"location":"api/TimeSyncAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/TimeSyncAPI/#properties","text":"The following properties are provided by the TimeSync interface: TimeSync interface properties: Property Description synctime (read-only) Most recent synchronized time time Current system time","title":"Properties"},{"location":"api/TimeSyncAPI/#synctime-property","text":"Provides access to the most recent synchronized time. This property is read-only .","title":"synctime property"},{"location":"api/TimeSyncAPI/#value","text":"","title":"Value"},{"location":"api/TimeSyncAPI/#result_1","text":"Name Type Description result object Most recent synchronized time result.time string Synchronized time (in ISO8601 format); empty string if the time has never been synchronized result?.source string (optional) The synchronization source e.g. an NTP server","title":"Result"},{"location":"api/TimeSyncAPI/#example_1","text":"","title":"Example"},{"location":"api/TimeSyncAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synctime\" }","title":"Get Request"},{"location":"api/TimeSyncAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"time\": \"2019-05-07T07:20:26Z\", \"source\": \"ntp://example.com\" } }","title":"Get Response"},{"location":"api/TimeSyncAPI/#time-property","text":"Provides access to the current system time.","title":"time property"},{"location":"api/TimeSyncAPI/#description_2","text":"Upon setting this property automatic time synchronization will be stopped. Usage of this property is deprecated and the SubSystem control plugin can be used as an alternative to achieve the same","title":"Description"},{"location":"api/TimeSyncAPI/#value_1","text":"Name Type Description (property) string System time (in ISO8601 format)","title":"Value"},{"location":"api/TimeSyncAPI/#result_2","text":"Name Type Description result string System time (in ISO8601 format)","title":"Result"},{"location":"api/TimeSyncAPI/#errors_1","text":"Message Description ERROR_BAD_REQUEST The time is invalid","title":"Errors"},{"location":"api/TimeSyncAPI/#example_2","text":"","title":"Example"},{"location":"api/TimeSyncAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\" }","title":"Get Request"},{"location":"api/TimeSyncAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"2019-05-07T07:20:26Z\" }","title":"Get Response"},{"location":"api/TimeSyncAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\", \"params\": \"2019-05-07T07:20:26Z\" }","title":"Set Request"},{"location":"api/TimeSyncAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/TimeSyncAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the TimeSync interface: TimeSync interface events: Notification Description timechange Signals a time change","title":"Notifications"},{"location":"api/TimeSyncAPI/#timechange-notification","text":"Signals a time change.","title":"timechange notification"},{"location":"api/TimeSyncAPI/#parameters_1","text":"This notification carries no parameters.","title":"Parameters"},{"location":"api/TimeSyncAPI/#example_3","text":"","title":"Example"},{"location":"api/TimeSyncAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.register\", \"params\": { \"event\": \"timechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/TimeSyncAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.timechange\" }","title":"Message"},{"location":"api/TimeZoneAPI/","text":"TimeZone API Version: 1.0.0 Status: TimeZone interface for Thunder framework. (Defined with ITimeZone in ITimeZone.h ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the TimeZone interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description TimeZone JSON-RPC interface. Properties The following properties are provided by the TimeZone interface: TimeZone interface properties: Property Description timezone TimeZone for system timezone property Provides access to the timeZone for system. Value Name Type Description (property) string TimeZone for system Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeZone.1.timezone\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeZone.1.timezone\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the TimeZone interface: TimeZone interface events: Notification Description timezonechanged TimeZone was set for the system timezonechanged notification TimeZone was set for the system. Parameters Name Type Description params string New TimeZone Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeZone.1.register\", \"params\": { \"event\": \"timezonechanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.timezonechanged\", \"params\": \"...\" }","title":"TimeZone API"},{"location":"api/TimeZoneAPI/#timezone-api","text":"Version: 1.0.0 Status: TimeZone interface for Thunder framework. (Defined with ITimeZone in ITimeZone.h )","title":"TimeZone API"},{"location":"api/TimeZoneAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/TimeZoneAPI/#introduction","text":"","title":"Introduction"},{"location":"api/TimeZoneAPI/#scope","text":"This document describes purpose and functionality of the TimeZone interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/TimeZoneAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/TimeZoneAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/TimeZoneAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/TimeZoneAPI/#description","text":"TimeZone JSON-RPC interface.","title":"Description"},{"location":"api/TimeZoneAPI/#properties","text":"The following properties are provided by the TimeZone interface: TimeZone interface properties: Property Description timezone TimeZone for system","title":"Properties"},{"location":"api/TimeZoneAPI/#timezone-property","text":"Provides access to the timeZone for system.","title":"timezone property"},{"location":"api/TimeZoneAPI/#value","text":"Name Type Description (property) string TimeZone for system","title":"Value"},{"location":"api/TimeZoneAPI/#example","text":"","title":"Example"},{"location":"api/TimeZoneAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeZone.1.timezone\" }","title":"Get Request"},{"location":"api/TimeZoneAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"api/TimeZoneAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeZone.1.timezone\", \"params\": \"...\" }","title":"Set Request"},{"location":"api/TimeZoneAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/TimeZoneAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the TimeZone interface: TimeZone interface events: Notification Description timezonechanged TimeZone was set for the system","title":"Notifications"},{"location":"api/TimeZoneAPI/#timezonechanged-notification","text":"TimeZone was set for the system.","title":"timezonechanged notification"},{"location":"api/TimeZoneAPI/#parameters","text":"Name Type Description params string New TimeZone","title":"Parameters"},{"location":"api/TimeZoneAPI/#example_1","text":"","title":"Example"},{"location":"api/TimeZoneAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeZone.1.register\", \"params\": { \"event\": \"timezonechanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/TimeZoneAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.timezonechanged\", \"params\": \"...\" }","title":"Message"},{"location":"api/TraceControlAPI/","text":"Trace Control API Version: 1.0.0 Status: TraceControl interface for Thunder framework. (Defined by TraceControl.json ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the TraceControl interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description TraceControl JSON-RPC interface. Methods The following methods are provided by the TraceControl interface: TraceControl interface methods: Method Description status Retrieves general information set Sets traces status method Retrieves general information. Description Retrieves the actual trace status information for targeted module and category, if either category nor module is given, all information is returned. It will retrieves the details about console status and remote address(port and binding address), if these are configured. Parameters Name Type Description params object ... params.module string Module name params.category string Category name Result Name Type Description result object ... result.console boolean Config attribute (Console) result.remote object Config attribute (Remote) result.remote.port integer Config attribute (port) result.remote.binding string Config attribute (binding) result.settings array Trace info list result.settings[#] object ... result.settings[#].module string Module name result.settings[#].category string Category name result.settings[#].state string State value Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TraceControl.1.status\", \"params\": { \"module\": \"Plugin_Monitor\", \"category\": \"Information\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"console\": false, \"remote\": { \"port\": 2200, \"binding\": \"0.0.0.0\" }, \"settings\": [ { \"module\": \"Plugin_Monitor\", \"category\": \"Information\", \"state\": \"disabled\" } ] } } set method Sets traces. Description Disables/enables all/select category traces for particular module. Parameters Name Type Description params object ... params.module string Module name params.category string Category name params.state string State value Result Name Type Description result null Always null (default: None ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TraceControl.1.set\", \"params\": { \"module\": \"Plugin_Monitor\", \"category\": \"Information\", \"state\": \"disabled\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Trace Control API"},{"location":"api/TraceControlAPI/#trace-control-api","text":"Version: 1.0.0 Status: TraceControl interface for Thunder framework. (Defined by TraceControl.json )","title":"Trace Control API"},{"location":"api/TraceControlAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/TraceControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/TraceControlAPI/#scope","text":"This document describes purpose and functionality of the TraceControl interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/TraceControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/TraceControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/TraceControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/TraceControlAPI/#description","text":"TraceControl JSON-RPC interface.","title":"Description"},{"location":"api/TraceControlAPI/#methods","text":"The following methods are provided by the TraceControl interface: TraceControl interface methods: Method Description status Retrieves general information set Sets traces","title":"Methods"},{"location":"api/TraceControlAPI/#status-method","text":"Retrieves general information.","title":"status method"},{"location":"api/TraceControlAPI/#description_1","text":"Retrieves the actual trace status information for targeted module and category, if either category nor module is given, all information is returned. It will retrieves the details about console status and remote address(port and binding address), if these are configured.","title":"Description"},{"location":"api/TraceControlAPI/#parameters","text":"Name Type Description params object ... params.module string Module name params.category string Category name","title":"Parameters"},{"location":"api/TraceControlAPI/#result","text":"Name Type Description result object ... result.console boolean Config attribute (Console) result.remote object Config attribute (Remote) result.remote.port integer Config attribute (port) result.remote.binding string Config attribute (binding) result.settings array Trace info list result.settings[#] object ... result.settings[#].module string Module name result.settings[#].category string Category name result.settings[#].state string State value","title":"Result"},{"location":"api/TraceControlAPI/#example","text":"","title":"Example"},{"location":"api/TraceControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TraceControl.1.status\", \"params\": { \"module\": \"Plugin_Monitor\", \"category\": \"Information\" } }","title":"Request"},{"location":"api/TraceControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"console\": false, \"remote\": { \"port\": 2200, \"binding\": \"0.0.0.0\" }, \"settings\": [ { \"module\": \"Plugin_Monitor\", \"category\": \"Information\", \"state\": \"disabled\" } ] } }","title":"Response"},{"location":"api/TraceControlAPI/#set-method","text":"Sets traces.","title":"set method"},{"location":"api/TraceControlAPI/#description_2","text":"Disables/enables all/select category traces for particular module.","title":"Description"},{"location":"api/TraceControlAPI/#parameters_1","text":"Name Type Description params object ... params.module string Module name params.category string Category name params.state string State value","title":"Parameters"},{"location":"api/TraceControlAPI/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/TraceControlAPI/#example_1","text":"","title":"Example"},{"location":"api/TraceControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TraceControl.1.set\", \"params\": { \"module\": \"Plugin_Monitor\", \"category\": \"Information\", \"state\": \"disabled\" } }","title":"Request"},{"location":"api/TraceControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/ValuePointAPI/","text":"ValuePoint API Version: 1.0.0 Status: ValuePoint interface for Thunder framework. (Defined with IValuePoint in IValuePoint.h ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the ValuePoint interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description ValuePoint JSON-RPC interface. Properties The following properties are provided by the ValuePoint interface: ValuePoint interface properties: Property Description identifier (read-only) Each IValuePoint instance has a unique identifier that identifies the instance bundle (read-only) If this IValuePoint belongs to a bundle that has multiple IValuePoints the id that identifies the bundle and the result will be Core::ERROR_NONE condition (read-only) Current state/condition of this IValuePoint type (read-only) Characteristics of this IValuePoint(IElement) minimum (read-only) The minimum value this IValuePoint(IElement) can reach maximum (read-only) The maximum value this IValuePoint(IElement) can reach value The current value of this IValuePoint metadata (read-only) There most be more than meets the eye, report it as a JSON string identifier property Provides access to the each IValuePoint instance has a unique identifier that identifies the instance. The value returned here return the unique ID of this IValuePoint. This property is read-only . Value Result Name Type Description result integer Each IValuePoint instance has a unique identifier that identifies the instance. The value returned here return the unique ID of this IValuePoint Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.identifier\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } bundle property Provides access to the if this IValuePoint belongs to a bundle that has multiple IValuePoints the id that identifies the bundle and the result will be Core::ERROR_NONE. If it does not belong to a bundle, this call returns Core::ERROR_UNAVAILABLE,. This property is read-only . Value Result Name Type Description result integer If this IValuePoint belongs to a bundle that has multiple IValuePoints the id that identifies the bundle and the result will be Core::ERROR_NONE. If it does not belong to a bundle, this call returns Core::ERROR_UNAVAILABLE, Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.bundle\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } condition property Provides access to the current state/condition of this IValuePoint. This property is read-only . Value Result Name Type Description result string Current state/condition of this IValuePoint (must be one of the following: Activated, Constructing, Deactivated ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.condition\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Constructing\" } type property Provides access to the characteristics of this IValuePoint(IElement). This property is read-only . Value Result Name Type Description result integer Characteristics of this IValuePoint(IElement) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.type\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } minimum property Provides access to the the minimum value this IValuePoint(IElement) can reach. This property is read-only . Value Result Name Type Description result integer The minimum value this IValuePoint(IElement) can reach Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.minimum\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } maximum property Provides access to the the maximum value this IValuePoint(IElement) can reach. This property is read-only . Value Result Name Type Description result integer The maximum value this IValuePoint(IElement) can reach Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.maximum\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } value property Provides access to the the current value of this IValuePoint. Value Name Type Description (property) object The current value of this IValuePoint (property).value integer ... Result Name Type Description result integer Represent the current value of this IValuePoint Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.value\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.value\", \"params\": { \"value\": 0 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } metadata property Provides access to the there most be more than meets the eye, report it as a JSON string. This property is read-only . Value Result Name Type Description result string There most be more than meets the eye, report it as a JSON string Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.metadata\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the ValuePoint interface: ValuePoint interface events: Notification Description update Signal event any change in value metadata Signal event any change in Metadata update notification Signal event any change in value. Parameters Name Type Description params object ... params.id integer Id of the value Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.register\", \"params\": { \"event\": \"update\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.update\", \"params\": { \"id\": 0 } } metadata notification Signal event any change in Metadata. Parameters Name Type Description params object ... params.id integer Id of the Metadata Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.register\", \"params\": { \"event\": \"metadata\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.metadata\", \"params\": { \"id\": 0 } }","title":"ValuePoint API"},{"location":"api/ValuePointAPI/#valuepoint-api","text":"Version: 1.0.0 Status: ValuePoint interface for Thunder framework. (Defined with IValuePoint in IValuePoint.h )","title":"ValuePoint API"},{"location":"api/ValuePointAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/ValuePointAPI/#introduction","text":"","title":"Introduction"},{"location":"api/ValuePointAPI/#scope","text":"This document describes purpose and functionality of the ValuePoint interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/ValuePointAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/ValuePointAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/ValuePointAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/ValuePointAPI/#description","text":"ValuePoint JSON-RPC interface.","title":"Description"},{"location":"api/ValuePointAPI/#properties","text":"The following properties are provided by the ValuePoint interface: ValuePoint interface properties: Property Description identifier (read-only) Each IValuePoint instance has a unique identifier that identifies the instance bundle (read-only) If this IValuePoint belongs to a bundle that has multiple IValuePoints the id that identifies the bundle and the result will be Core::ERROR_NONE condition (read-only) Current state/condition of this IValuePoint type (read-only) Characteristics of this IValuePoint(IElement) minimum (read-only) The minimum value this IValuePoint(IElement) can reach maximum (read-only) The maximum value this IValuePoint(IElement) can reach value The current value of this IValuePoint metadata (read-only) There most be more than meets the eye, report it as a JSON string","title":"Properties"},{"location":"api/ValuePointAPI/#identifier-property","text":"Provides access to the each IValuePoint instance has a unique identifier that identifies the instance. The value returned here return the unique ID of this IValuePoint. This property is read-only .","title":"identifier property"},{"location":"api/ValuePointAPI/#value","text":"","title":"Value"},{"location":"api/ValuePointAPI/#result","text":"Name Type Description result integer Each IValuePoint instance has a unique identifier that identifies the instance. The value returned here return the unique ID of this IValuePoint","title":"Result"},{"location":"api/ValuePointAPI/#example","text":"","title":"Example"},{"location":"api/ValuePointAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.identifier\" }","title":"Get Request"},{"location":"api/ValuePointAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/ValuePointAPI/#bundle-property","text":"Provides access to the if this IValuePoint belongs to a bundle that has multiple IValuePoints the id that identifies the bundle and the result will be Core::ERROR_NONE. If it does not belong to a bundle, this call returns Core::ERROR_UNAVAILABLE,. This property is read-only .","title":"bundle property"},{"location":"api/ValuePointAPI/#value_1","text":"","title":"Value"},{"location":"api/ValuePointAPI/#result_1","text":"Name Type Description result integer If this IValuePoint belongs to a bundle that has multiple IValuePoints the id that identifies the bundle and the result will be Core::ERROR_NONE. If it does not belong to a bundle, this call returns Core::ERROR_UNAVAILABLE,","title":"Result"},{"location":"api/ValuePointAPI/#example_1","text":"","title":"Example"},{"location":"api/ValuePointAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.bundle\" }","title":"Get Request"},{"location":"api/ValuePointAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/ValuePointAPI/#condition-property","text":"Provides access to the current state/condition of this IValuePoint. This property is read-only .","title":"condition property"},{"location":"api/ValuePointAPI/#value_2","text":"","title":"Value"},{"location":"api/ValuePointAPI/#result_2","text":"Name Type Description result string Current state/condition of this IValuePoint (must be one of the following: Activated, Constructing, Deactivated )","title":"Result"},{"location":"api/ValuePointAPI/#example_2","text":"","title":"Example"},{"location":"api/ValuePointAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.condition\" }","title":"Get Request"},{"location":"api/ValuePointAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Constructing\" }","title":"Get Response"},{"location":"api/ValuePointAPI/#type-property","text":"Provides access to the characteristics of this IValuePoint(IElement). This property is read-only .","title":"type property"},{"location":"api/ValuePointAPI/#value_3","text":"","title":"Value"},{"location":"api/ValuePointAPI/#result_3","text":"Name Type Description result integer Characteristics of this IValuePoint(IElement)","title":"Result"},{"location":"api/ValuePointAPI/#example_3","text":"","title":"Example"},{"location":"api/ValuePointAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.type\" }","title":"Get Request"},{"location":"api/ValuePointAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/ValuePointAPI/#minimum-property","text":"Provides access to the the minimum value this IValuePoint(IElement) can reach. This property is read-only .","title":"minimum property"},{"location":"api/ValuePointAPI/#value_4","text":"","title":"Value"},{"location":"api/ValuePointAPI/#result_4","text":"Name Type Description result integer The minimum value this IValuePoint(IElement) can reach","title":"Result"},{"location":"api/ValuePointAPI/#example_4","text":"","title":"Example"},{"location":"api/ValuePointAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.minimum\" }","title":"Get Request"},{"location":"api/ValuePointAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/ValuePointAPI/#maximum-property","text":"Provides access to the the maximum value this IValuePoint(IElement) can reach. This property is read-only .","title":"maximum property"},{"location":"api/ValuePointAPI/#value_5","text":"","title":"Value"},{"location":"api/ValuePointAPI/#result_5","text":"Name Type Description result integer The maximum value this IValuePoint(IElement) can reach","title":"Result"},{"location":"api/ValuePointAPI/#example_5","text":"","title":"Example"},{"location":"api/ValuePointAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.maximum\" }","title":"Get Request"},{"location":"api/ValuePointAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/ValuePointAPI/#value-property","text":"Provides access to the the current value of this IValuePoint.","title":"value property"},{"location":"api/ValuePointAPI/#value_6","text":"Name Type Description (property) object The current value of this IValuePoint (property).value integer ...","title":"Value"},{"location":"api/ValuePointAPI/#result_6","text":"Name Type Description result integer Represent the current value of this IValuePoint","title":"Result"},{"location":"api/ValuePointAPI/#example_6","text":"","title":"Example"},{"location":"api/ValuePointAPI/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.value\" }","title":"Get Request"},{"location":"api/ValuePointAPI/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/ValuePointAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.value\", \"params\": { \"value\": 0 } }","title":"Set Request"},{"location":"api/ValuePointAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ValuePointAPI/#metadata-property","text":"Provides access to the there most be more than meets the eye, report it as a JSON string. This property is read-only .","title":"metadata property"},{"location":"api/ValuePointAPI/#value_7","text":"","title":"Value"},{"location":"api/ValuePointAPI/#result_7","text":"Name Type Description result string There most be more than meets the eye, report it as a JSON string","title":"Result"},{"location":"api/ValuePointAPI/#example_7","text":"","title":"Example"},{"location":"api/ValuePointAPI/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.metadata\" }","title":"Get Request"},{"location":"api/ValuePointAPI/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"api/ValuePointAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the ValuePoint interface: ValuePoint interface events: Notification Description update Signal event any change in value metadata Signal event any change in Metadata","title":"Notifications"},{"location":"api/ValuePointAPI/#update-notification","text":"Signal event any change in value.","title":"update notification"},{"location":"api/ValuePointAPI/#parameters","text":"Name Type Description params object ... params.id integer Id of the value","title":"Parameters"},{"location":"api/ValuePointAPI/#example_8","text":"","title":"Example"},{"location":"api/ValuePointAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.register\", \"params\": { \"event\": \"update\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/ValuePointAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.update\", \"params\": { \"id\": 0 } }","title":"Message"},{"location":"api/ValuePointAPI/#metadata-notification","text":"Signal event any change in Metadata.","title":"metadata notification"},{"location":"api/ValuePointAPI/#parameters_1","text":"Name Type Description params object ... params.id integer Id of the Metadata","title":"Parameters"},{"location":"api/ValuePointAPI/#example_9","text":"","title":"Example"},{"location":"api/ValuePointAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ValuePoint.1.register\", \"params\": { \"event\": \"metadata\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/ValuePointAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.metadata\", \"params\": { \"id\": 0 } }","title":"Message"},{"location":"api/VolumeControlAPI/","text":"VolumeControl API Version: 1.0.0 Status: VolumeControl interface for Thunder framework. (Defined with IVolumeControl in IVolumeControl.h ) Table of Contents Introduction Description Properties Notifications Introduction Scope This document describes purpose and functionality of the VolumeControl interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description VolumeControl JSON-RPC interface. Properties The following properties are provided by the VolumeControl interface: VolumeControl interface properties: Property Description muted Audio mute state volume Audio volume level muted property Provides access to the audio mute state. Value Name Type Description (property) boolean Mute state (true: muted, false: un-muted) Result Name Type Description result boolean Mute state (true: muted, false: un-muted) Errors Message Description ERROR_GENERAL Failed to set/retrieve muting state Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } volume property Provides access to the audio volume level. Value Name Type Description (property) integer Volume level in percent Result Name Type Description result integer Volume level in percent Errors Message Description ERROR_GENERAL Failed to set/retrieve audio volume Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\", \"params\": 100 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the VolumeControl interface: VolumeControl interface events: Notification Description volume Signals volume change muted Signals mute state change volume notification Signals volume change. Parameters Name Type Description params object ... params.volume integer New bolume level in percent Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.register\", \"params\": { \"event\": \"volume\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.volume\", \"params\": { \"volume\": 100 } } muted notification Signals mute state change. Parameters Name Type Description params object ... params.muted boolean New mute state (true: muted, false: un-muted) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.register\", \"params\": { \"event\": \"muted\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.muted\", \"params\": { \"muted\": false } }","title":"VolumeControl API"},{"location":"api/VolumeControlAPI/#volumecontrol-api","text":"Version: 1.0.0 Status: VolumeControl interface for Thunder framework. (Defined with IVolumeControl in IVolumeControl.h )","title":"VolumeControl API"},{"location":"api/VolumeControlAPI/#table-of-contents","text":"Introduction Description Properties Notifications","title":"Table of Contents"},{"location":"api/VolumeControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/VolumeControlAPI/#scope","text":"This document describes purpose and functionality of the VolumeControl interface (version 1.0.0). It includes detailed specification about its properties provided and notifications sent.","title":"Scope"},{"location":"api/VolumeControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/VolumeControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/VolumeControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/VolumeControlAPI/#description","text":"VolumeControl JSON-RPC interface.","title":"Description"},{"location":"api/VolumeControlAPI/#properties","text":"The following properties are provided by the VolumeControl interface: VolumeControl interface properties: Property Description muted Audio mute state volume Audio volume level","title":"Properties"},{"location":"api/VolumeControlAPI/#muted-property","text":"Provides access to the audio mute state.","title":"muted property"},{"location":"api/VolumeControlAPI/#value","text":"Name Type Description (property) boolean Mute state (true: muted, false: un-muted)","title":"Value"},{"location":"api/VolumeControlAPI/#result","text":"Name Type Description result boolean Mute state (true: muted, false: un-muted)","title":"Result"},{"location":"api/VolumeControlAPI/#errors","text":"Message Description ERROR_GENERAL Failed to set/retrieve muting state","title":"Errors"},{"location":"api/VolumeControlAPI/#example","text":"","title":"Example"},{"location":"api/VolumeControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\" }","title":"Get Request"},{"location":"api/VolumeControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"api/VolumeControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\", \"params\": false }","title":"Set Request"},{"location":"api/VolumeControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/VolumeControlAPI/#volume-property","text":"Provides access to the audio volume level.","title":"volume property"},{"location":"api/VolumeControlAPI/#value_1","text":"Name Type Description (property) integer Volume level in percent","title":"Value"},{"location":"api/VolumeControlAPI/#result_1","text":"Name Type Description result integer Volume level in percent","title":"Result"},{"location":"api/VolumeControlAPI/#errors_1","text":"Message Description ERROR_GENERAL Failed to set/retrieve audio volume","title":"Errors"},{"location":"api/VolumeControlAPI/#example_1","text":"","title":"Example"},{"location":"api/VolumeControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\" }","title":"Get Request"},{"location":"api/VolumeControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/VolumeControlAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\", \"params\": 100 }","title":"Set Request"},{"location":"api/VolumeControlAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/VolumeControlAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the VolumeControl interface: VolumeControl interface events: Notification Description volume Signals volume change muted Signals mute state change","title":"Notifications"},{"location":"api/VolumeControlAPI/#volume-notification","text":"Signals volume change.","title":"volume notification"},{"location":"api/VolumeControlAPI/#parameters","text":"Name Type Description params object ... params.volume integer New bolume level in percent","title":"Parameters"},{"location":"api/VolumeControlAPI/#example_2","text":"","title":"Example"},{"location":"api/VolumeControlAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.register\", \"params\": { \"event\": \"volume\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/VolumeControlAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.volume\", \"params\": { \"volume\": 100 } }","title":"Message"},{"location":"api/VolumeControlAPI/#muted-notification","text":"Signals mute state change.","title":"muted notification"},{"location":"api/VolumeControlAPI/#parameters_1","text":"Name Type Description params object ... params.muted boolean New mute state (true: muted, false: un-muted)","title":"Parameters"},{"location":"api/VolumeControlAPI/#example_3","text":"","title":"Example"},{"location":"api/VolumeControlAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.register\", \"params\": { \"event\": \"muted\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/VolumeControlAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.muted\", \"params\": { \"muted\": false } }","title":"Message"},{"location":"api/WatchDogAPI/","text":"WatchDog API Version: 1.0.0 Status: WatchDog interface for Thunder framework. (Defined with IWatchDog in IWatchDog.h ) Table of Contents Introduction Description Methods Introduction Scope This document describes purpose and functionality of the WatchDog interface (version 1.0.0). It includes detailed specification about its methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description WatchDog JSON-RPC interface. Methods The following methods are provided by the WatchDog interface: WatchDog interface methods: Method Description touch Touch the watchdog as a sign of life touch method Touch the watchdog as a sign of life. Parameters Name Type Description params object ... params.callsign string In case a specific watchdog needs to be padded pass the name of the callsign for which we want to touch Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WatchDog.1.touch\", \"params\": { \"callsign\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"WatchDog API"},{"location":"api/WatchDogAPI/#watchdog-api","text":"Version: 1.0.0 Status: WatchDog interface for Thunder framework. (Defined with IWatchDog in IWatchDog.h )","title":"WatchDog API"},{"location":"api/WatchDogAPI/#table-of-contents","text":"Introduction Description Methods","title":"Table of Contents"},{"location":"api/WatchDogAPI/#introduction","text":"","title":"Introduction"},{"location":"api/WatchDogAPI/#scope","text":"This document describes purpose and functionality of the WatchDog interface (version 1.0.0). It includes detailed specification about its methods provided.","title":"Scope"},{"location":"api/WatchDogAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/WatchDogAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/WatchDogAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/WatchDogAPI/#description","text":"WatchDog JSON-RPC interface.","title":"Description"},{"location":"api/WatchDogAPI/#methods","text":"The following methods are provided by the WatchDog interface: WatchDog interface methods: Method Description touch Touch the watchdog as a sign of life","title":"Methods"},{"location":"api/WatchDogAPI/#touch-method","text":"Touch the watchdog as a sign of life.","title":"touch method"},{"location":"api/WatchDogAPI/#parameters","text":"Name Type Description params object ... params.callsign string In case a specific watchdog needs to be padded pass the name of the callsign for which we want to touch","title":"Parameters"},{"location":"api/WatchDogAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/WatchDogAPI/#example","text":"","title":"Example"},{"location":"api/WatchDogAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WatchDog.1.touch\", \"params\": { \"callsign\": \"...\" } }","title":"Request"},{"location":"api/WatchDogAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/WebBrowserAPI/","text":"WebBrowser API Version: 1.0.0 Status: WebBrowser interface for Thunder framework. (Defined with IWebBrowser in IBrowser.h ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the WebBrowser interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description WebBrowser JSON-RPC interface. Methods The following methods are provided by the WebBrowser interface: WebBrowser interface methods: Method Description collectgarbage Initiate garbage collection collectgarbage method Initiate garbage collection. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.collectgarbage\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the WebBrowser interface: WebBrowser interface properties: Property Description url Page loaded in the browser visibility Browser window visibility state fps (read-only) Current framerate the browser is rendering at useragent UserAgent string used by the browser localstorageenabled Controls the local storage availability httpcookieacceptpolicy HTTP cookies accept policy bridgereply (write-only) Response for legacy $badger bridgeevent (write-only) Send legacy $badger event url property Provides access to the page loaded in the browser. Value Name Type Description (property) string Page loaded in the browser Result Name Type Description result string Loaded URL Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://example.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.url\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the browser window visibility state. Value Name Type Description (property) string Browser window visibility state (must be one of the following: hidden, visible ) Result Name Type Description result string Visiblity state (must be one of the following: hidden, visible ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"hidden\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.visibility\", \"params\": \"hidden\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current framerate the browser is rendering at. This property is read-only . Value Result Name Type Description result integer Current FPS Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } useragent property Provides access to the userAgent string used by the browser. Value Name Type Description (property) string UserAgent string used by the browser Result Name Type Description result string UserAgent value Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.useragent\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Mozilla/5.0 (Linux; x86_64 GNU/Linux) AppleWebKit/601.1 (KHTML, like Gecko) Version/8.0 Safari/601.1 WP\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.useragent\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } localstorageenabled property Provides access to the controls the local storage availability. Value Name Type Description (property) boolean Controls the local storage availability Result Name Type Description result boolean Controls the local storage availability Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.localstorageenabled\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.localstorageenabled\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } httpcookieacceptpolicy property Provides access to the HTTP cookies accept policy. Value Name Type Description (property) string HTTP cookies accept policy (must be one of the following: always, exclusivelyfrommaindocumentdomain, never, onlyfrommaindocumentdomain ) Result Name Type Description result string HTTP Cookie Accept Policy Type (must be one of the following: always, exclusivelyfrommaindocumentdomain, never, onlyfrommaindocumentdomain ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.httpcookieacceptpolicy\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"always\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.httpcookieacceptpolicy\", \"params\": \"always\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } bridgereply property Provides access to the response for legacy $badger. This property is write-only . Value Name Type Description (property) string Base64 encoded JSON string response to be delivered to $badger.callback Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.bridgereply\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } bridgeevent property Provides access to the send legacy $badger event. This property is write-only . Value Name Type Description (property) string Base64 encoded JSON string response to be delivered to window.$badger.event Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.bridgeevent\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WebBrowser interface: WebBrowser interface events: Notification Description loadfinished Initial HTML document has been completely loaded and parsed loadfailed Browser failed to load page urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser pageclosure Notifies that the web page requests to close its window loadfinished notification Initial HTML document has been completely loaded and parsed. Parameters Name Type Description params object ... params.url string The URL that has been loaded params.httpstatus integer The response code of main resource request Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.register\", \"params\": { \"event\": \"loadfinished\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.loadfinished\", \"params\": { \"url\": \"https://example.com\", \"httpstatus\": 200 } } loadfailed notification Browser failed to load page. Parameters Name Type Description params object ... params.url string The URL that has been failed to load Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.register\", \"params\": { \"event\": \"loadfailed\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.loadfailed\", \"params\": { \"url\": \"https://example.com\" } } urlchange notification Signals a URL change in the browser. Parameters Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Loaded (true) or not (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://example.com\", \"loaded\": false } } visibilitychange notification Signals a visibility change of the browser. Parameters Name Type Description params object ... params.hidden boolean Hidden (true) or Visible (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } } pageclosure notification Notifies that the web page requests to close its window. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.register\", \"params\": { \"event\": \"pageclosure\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.pageclosure\" }","title":"WebBrowser API"},{"location":"api/WebBrowserAPI/#webbrowser-api","text":"Version: 1.0.0 Status: WebBrowser interface for Thunder framework. (Defined with IWebBrowser in IBrowser.h )","title":"WebBrowser API"},{"location":"api/WebBrowserAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/WebBrowserAPI/#introduction","text":"","title":"Introduction"},{"location":"api/WebBrowserAPI/#scope","text":"This document describes purpose and functionality of the WebBrowser interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/WebBrowserAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/WebBrowserAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/WebBrowserAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/WebBrowserAPI/#description","text":"WebBrowser JSON-RPC interface.","title":"Description"},{"location":"api/WebBrowserAPI/#methods","text":"The following methods are provided by the WebBrowser interface: WebBrowser interface methods: Method Description collectgarbage Initiate garbage collection","title":"Methods"},{"location":"api/WebBrowserAPI/#collectgarbage-method","text":"Initiate garbage collection.","title":"collectgarbage method"},{"location":"api/WebBrowserAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/WebBrowserAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/WebBrowserAPI/#example","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.collectgarbage\" }","title":"Request"},{"location":"api/WebBrowserAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/WebBrowserAPI/#properties","text":"The following properties are provided by the WebBrowser interface: WebBrowser interface properties: Property Description url Page loaded in the browser visibility Browser window visibility state fps (read-only) Current framerate the browser is rendering at useragent UserAgent string used by the browser localstorageenabled Controls the local storage availability httpcookieacceptpolicy HTTP cookies accept policy bridgereply (write-only) Response for legacy $badger bridgeevent (write-only) Send legacy $badger event","title":"Properties"},{"location":"api/WebBrowserAPI/#url-property","text":"Provides access to the page loaded in the browser.","title":"url property"},{"location":"api/WebBrowserAPI/#value","text":"Name Type Description (property) string Page loaded in the browser","title":"Value"},{"location":"api/WebBrowserAPI/#result_1","text":"Name Type Description result string Loaded URL","title":"Result"},{"location":"api/WebBrowserAPI/#example_1","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.url\" }","title":"Get Request"},{"location":"api/WebBrowserAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://example.com\" }","title":"Get Response"},{"location":"api/WebBrowserAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.url\", \"params\": \"...\" }","title":"Set Request"},{"location":"api/WebBrowserAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WebBrowserAPI/#visibility-property","text":"Provides access to the browser window visibility state.","title":"visibility property"},{"location":"api/WebBrowserAPI/#value_1","text":"Name Type Description (property) string Browser window visibility state (must be one of the following: hidden, visible )","title":"Value"},{"location":"api/WebBrowserAPI/#result_2","text":"Name Type Description result string Visiblity state (must be one of the following: hidden, visible )","title":"Result"},{"location":"api/WebBrowserAPI/#example_2","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.visibility\" }","title":"Get Request"},{"location":"api/WebBrowserAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"hidden\" }","title":"Get Response"},{"location":"api/WebBrowserAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.visibility\", \"params\": \"hidden\" }","title":"Set Request"},{"location":"api/WebBrowserAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WebBrowserAPI/#fps-property","text":"Provides access to the current framerate the browser is rendering at. This property is read-only .","title":"fps property"},{"location":"api/WebBrowserAPI/#value_2","text":"","title":"Value"},{"location":"api/WebBrowserAPI/#result_3","text":"Name Type Description result integer Current FPS","title":"Result"},{"location":"api/WebBrowserAPI/#example_3","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.fps\" }","title":"Get Request"},{"location":"api/WebBrowserAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"api/WebBrowserAPI/#useragent-property","text":"Provides access to the userAgent string used by the browser.","title":"useragent property"},{"location":"api/WebBrowserAPI/#value_3","text":"Name Type Description (property) string UserAgent string used by the browser","title":"Value"},{"location":"api/WebBrowserAPI/#result_4","text":"Name Type Description result string UserAgent value","title":"Result"},{"location":"api/WebBrowserAPI/#example_4","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.useragent\" }","title":"Get Request"},{"location":"api/WebBrowserAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Mozilla/5.0 (Linux; x86_64 GNU/Linux) AppleWebKit/601.1 (KHTML, like Gecko) Version/8.0 Safari/601.1 WP\" }","title":"Get Response"},{"location":"api/WebBrowserAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.useragent\", \"params\": \"...\" }","title":"Set Request"},{"location":"api/WebBrowserAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WebBrowserAPI/#localstorageenabled-property","text":"Provides access to the controls the local storage availability.","title":"localstorageenabled property"},{"location":"api/WebBrowserAPI/#value_4","text":"Name Type Description (property) boolean Controls the local storage availability","title":"Value"},{"location":"api/WebBrowserAPI/#result_5","text":"Name Type Description result boolean Controls the local storage availability","title":"Result"},{"location":"api/WebBrowserAPI/#example_5","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.localstorageenabled\" }","title":"Get Request"},{"location":"api/WebBrowserAPI/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"api/WebBrowserAPI/#set-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.localstorageenabled\", \"params\": false }","title":"Set Request"},{"location":"api/WebBrowserAPI/#set-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WebBrowserAPI/#httpcookieacceptpolicy-property","text":"Provides access to the HTTP cookies accept policy.","title":"httpcookieacceptpolicy property"},{"location":"api/WebBrowserAPI/#value_5","text":"Name Type Description (property) string HTTP cookies accept policy (must be one of the following: always, exclusivelyfrommaindocumentdomain, never, onlyfrommaindocumentdomain )","title":"Value"},{"location":"api/WebBrowserAPI/#result_6","text":"Name Type Description result string HTTP Cookie Accept Policy Type (must be one of the following: always, exclusivelyfrommaindocumentdomain, never, onlyfrommaindocumentdomain )","title":"Result"},{"location":"api/WebBrowserAPI/#example_6","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.httpcookieacceptpolicy\" }","title":"Get Request"},{"location":"api/WebBrowserAPI/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"always\" }","title":"Get Response"},{"location":"api/WebBrowserAPI/#set-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.httpcookieacceptpolicy\", \"params\": \"always\" }","title":"Set Request"},{"location":"api/WebBrowserAPI/#set-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WebBrowserAPI/#bridgereply-property","text":"Provides access to the response for legacy $badger. This property is write-only .","title":"bridgereply property"},{"location":"api/WebBrowserAPI/#value_6","text":"Name Type Description (property) string Base64 encoded JSON string response to be delivered to $badger.callback","title":"Value"},{"location":"api/WebBrowserAPI/#example_7","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#set-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.bridgereply\", \"params\": \"...\" }","title":"Set Request"},{"location":"api/WebBrowserAPI/#set-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WebBrowserAPI/#bridgeevent-property","text":"Provides access to the send legacy $badger event. This property is write-only .","title":"bridgeevent property"},{"location":"api/WebBrowserAPI/#value_7","text":"Name Type Description (property) string Base64 encoded JSON string response to be delivered to window.$badger.event","title":"Value"},{"location":"api/WebBrowserAPI/#example_8","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#set-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.bridgeevent\", \"params\": \"...\" }","title":"Set Request"},{"location":"api/WebBrowserAPI/#set-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WebBrowserAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WebBrowser interface: WebBrowser interface events: Notification Description loadfinished Initial HTML document has been completely loaded and parsed loadfailed Browser failed to load page urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser pageclosure Notifies that the web page requests to close its window","title":"Notifications"},{"location":"api/WebBrowserAPI/#loadfinished-notification","text":"Initial HTML document has been completely loaded and parsed.","title":"loadfinished notification"},{"location":"api/WebBrowserAPI/#parameters_1","text":"Name Type Description params object ... params.url string The URL that has been loaded params.httpstatus integer The response code of main resource request","title":"Parameters"},{"location":"api/WebBrowserAPI/#example_9","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.register\", \"params\": { \"event\": \"loadfinished\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/WebBrowserAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.loadfinished\", \"params\": { \"url\": \"https://example.com\", \"httpstatus\": 200 } }","title":"Message"},{"location":"api/WebBrowserAPI/#loadfailed-notification","text":"Browser failed to load page.","title":"loadfailed notification"},{"location":"api/WebBrowserAPI/#parameters_2","text":"Name Type Description params object ... params.url string The URL that has been failed to load","title":"Parameters"},{"location":"api/WebBrowserAPI/#example_10","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.register\", \"params\": { \"event\": \"loadfailed\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/WebBrowserAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.loadfailed\", \"params\": { \"url\": \"https://example.com\" } }","title":"Message"},{"location":"api/WebBrowserAPI/#urlchange-notification","text":"Signals a URL change in the browser.","title":"urlchange notification"},{"location":"api/WebBrowserAPI/#parameters_3","text":"Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Loaded (true) or not (false)","title":"Parameters"},{"location":"api/WebBrowserAPI/#example_11","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/WebBrowserAPI/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://example.com\", \"loaded\": false } }","title":"Message"},{"location":"api/WebBrowserAPI/#visibilitychange-notification","text":"Signals a visibility change of the browser.","title":"visibilitychange notification"},{"location":"api/WebBrowserAPI/#parameters_4","text":"Name Type Description params object ... params.hidden boolean Hidden (true) or Visible (false)","title":"Parameters"},{"location":"api/WebBrowserAPI/#example_12","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#registration_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/WebBrowserAPI/#message_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Message"},{"location":"api/WebBrowserAPI/#pageclosure-notification","text":"Notifies that the web page requests to close its window.","title":"pageclosure notification"},{"location":"api/WebBrowserAPI/#parameters_5","text":"This notification carries no parameters.","title":"Parameters"},{"location":"api/WebBrowserAPI/#example_13","text":"","title":"Example"},{"location":"api/WebBrowserAPI/#registration_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebBrowser.1.register\", \"params\": { \"event\": \"pageclosure\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/WebBrowserAPI/#message_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.pageclosure\" }","title":"Message"},{"location":"api/WebKitBrowserAPI/","text":"WebKit Browser API Version: 1.0.0 Status: WebKitBrowser interface for Thunder framework. (Defined by WebKitBrowser.json ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the WebKitBrowser interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description WebKitBrowser JSON-RPC interface. Methods The following methods are provided by the WebKitBrowser interface: WebKitBrowser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the WebKitBrowser interface: WebKitBrowser interface properties: Property Description languages User preferred languages headers Headers to send on all requests that the browser makes StateControl interface properties: Property Description state Running state of the service languages property Provides access to the user preferred languages. Value Name Type Description (property) array User preferred languages (property)[#] string ... Result Name Type Description result array User preferred languages result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"en-US\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\", \"params\": [ \"en-US\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } headers property Provides access to the headers to send on all requests that the browser makes. Value Name Type Description (property) array Headers to send on all requests that the browser makes (property)[#] object ... (property)[#]?.name string (optional) Header name (property)[#]?.value string (optional) Header value Result Name Type Description result array Headers to send on all requests that the browser makes result[#] object ... result[#]?.name string (optional) Header name result[#]?.value string (optional) Header value Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\", \"params\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service Result Name Type Description result string Running state of the service Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WebKitBrowser interface: WebKitBrowser interface events: Notification Description bridgequery obsolete A Base64 encoded JSON message from legacy $badger bridge StateControl interface events: Notification Description statechange Signals a state change of the service bridgequery notification A Base64 encoded JSON message from legacy $badger bridge. bridgequery is an alternative name for this notification. This name is obsolete . It is not recommended for use in new implementations. Parameters Name Type Description params string ... Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"bridgequery\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.bridgequery\", \"params\": \"...\" } statechange notification Signals a state change of the service. Parameters Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"WebKit Browser API"},{"location":"api/WebKitBrowserAPI/#webkit-browser-api","text":"Version: 1.0.0 Status: WebKitBrowser interface for Thunder framework. (Defined by WebKitBrowser.json )","title":"WebKit Browser API"},{"location":"api/WebKitBrowserAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/WebKitBrowserAPI/#introduction","text":"","title":"Introduction"},{"location":"api/WebKitBrowserAPI/#scope","text":"This document describes purpose and functionality of the WebKitBrowser interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/WebKitBrowserAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/WebKitBrowserAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/WebKitBrowserAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/WebKitBrowserAPI/#description","text":"WebKitBrowser JSON-RPC interface.","title":"Description"},{"location":"api/WebKitBrowserAPI/#methods","text":"The following methods are provided by the WebKitBrowser interface: WebKitBrowser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"api/WebKitBrowserAPI/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"api/WebKitBrowserAPI/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"api/WebKitBrowserAPI/#parameters","text":"Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"api/WebKitBrowserAPI/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"api/WebKitBrowserAPI/#errors","text":"Message Description ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"api/WebKitBrowserAPI/#example","text":"","title":"Example"},{"location":"api/WebKitBrowserAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"api/WebKitBrowserAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/WebKitBrowserAPI/#properties","text":"The following properties are provided by the WebKitBrowser interface: WebKitBrowser interface properties: Property Description languages User preferred languages headers Headers to send on all requests that the browser makes StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"api/WebKitBrowserAPI/#languages-property","text":"Provides access to the user preferred languages.","title":"languages property"},{"location":"api/WebKitBrowserAPI/#value","text":"Name Type Description (property) array User preferred languages (property)[#] string ...","title":"Value"},{"location":"api/WebKitBrowserAPI/#result_1","text":"Name Type Description result array User preferred languages result[#] string ...","title":"Result"},{"location":"api/WebKitBrowserAPI/#example_1","text":"","title":"Example"},{"location":"api/WebKitBrowserAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\" }","title":"Get Request"},{"location":"api/WebKitBrowserAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"en-US\" ] }","title":"Get Response"},{"location":"api/WebKitBrowserAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\", \"params\": [ \"en-US\" ] }","title":"Set Request"},{"location":"api/WebKitBrowserAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WebKitBrowserAPI/#headers-property","text":"Provides access to the headers to send on all requests that the browser makes.","title":"headers property"},{"location":"api/WebKitBrowserAPI/#value_1","text":"Name Type Description (property) array Headers to send on all requests that the browser makes (property)[#] object ... (property)[#]?.name string (optional) Header name (property)[#]?.value string (optional) Header value","title":"Value"},{"location":"api/WebKitBrowserAPI/#result_2","text":"Name Type Description result array Headers to send on all requests that the browser makes result[#] object ... result[#]?.name string (optional) Header name result[#]?.value string (optional) Header value","title":"Result"},{"location":"api/WebKitBrowserAPI/#example_2","text":"","title":"Example"},{"location":"api/WebKitBrowserAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\" }","title":"Get Request"},{"location":"api/WebKitBrowserAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] }","title":"Get Response"},{"location":"api/WebKitBrowserAPI/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\", \"params\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] }","title":"Set Request"},{"location":"api/WebKitBrowserAPI/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WebKitBrowserAPI/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"api/WebKitBrowserAPI/#value_2","text":"Name Type Description (property) string Running state of the service","title":"Value"},{"location":"api/WebKitBrowserAPI/#result_3","text":"Name Type Description result string Running state of the service","title":"Result"},{"location":"api/WebKitBrowserAPI/#example_3","text":"","title":"Example"},{"location":"api/WebKitBrowserAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\" }","title":"Get Request"},{"location":"api/WebKitBrowserAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"api/WebKitBrowserAPI/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"api/WebKitBrowserAPI/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WebKitBrowserAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WebKitBrowser interface: WebKitBrowser interface events: Notification Description bridgequery obsolete A Base64 encoded JSON message from legacy $badger bridge StateControl interface events: Notification Description statechange Signals a state change of the service","title":"Notifications"},{"location":"api/WebKitBrowserAPI/#bridgequery-notification","text":"A Base64 encoded JSON message from legacy $badger bridge. bridgequery is an alternative name for this notification. This name is obsolete . It is not recommended for use in new implementations.","title":"bridgequery notification"},{"location":"api/WebKitBrowserAPI/#parameters_1","text":"Name Type Description params string ...","title":"Parameters"},{"location":"api/WebKitBrowserAPI/#example_4","text":"","title":"Example"},{"location":"api/WebKitBrowserAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"bridgequery\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/WebKitBrowserAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.bridgequery\", \"params\": \"...\" }","title":"Message"},{"location":"api/WebKitBrowserAPI/#statechange-notification","text":"Signals a state change of the service.","title":"statechange notification"},{"location":"api/WebKitBrowserAPI/#parameters_2","text":"Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"api/WebKitBrowserAPI/#example_5","text":"","title":"Example"},{"location":"api/WebKitBrowserAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/WebKitBrowserAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Message"},{"location":"api/WifiControlAPI/","text":"WifiControl API Version: 1.0.0 Status: WifiControl interface for Thunder framework. (Defined with IWifiControl in IWifiControl.h ) Table of Contents Introduction Description Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the WifiControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description WifiControl JSON-RPC interface. Methods The following methods are provided by the WifiControl interface: WifiControl interface methods: Method Description scan Trigger Scanning abortscan Abort Currentlt running scan connect Connect device to requested SSID disconnect Disconnect device from requested SSID status Status of current device, like which SSID is connected and it is in scanning state or not scan method Trigger Scanning. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.scan\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } abortscan method Abort Currentlt running scan. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.abortscan\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } connect method Connect device to requested SSID. Parameters Name Type Description params object ... params.configssid string SSID to be connected Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.connect\", \"params\": { \"configssid\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } disconnect method Disconnect device from requested SSID. Parameters Name Type Description params object ... params.configssid string SSID to be disconnected Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.disconnect\", \"params\": { \"configssid\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } status method Status of current device, like which SSID is connected and it is in scanning state or not. Parameters This method takes no parameters. Result Name Type Description result object ... result.connectedssid string SSID of connected router/ap result.isscanning boolean Scanning is in progress or not Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.status\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"connectedssid\": \"...\", \"isscanning\": false } } Properties The following properties are provided by the WifiControl interface: WifiControl interface properties: Property Description networks (read-only) Provides available networks information securities (read-only) Provides security method of requested SSID configs (read-only) Provides configs list config Provide config details for requested SSID networks property Provides access to the provides available networks information. This property is read-only . Value Result Name Type Description result array Provides available networks information result[#] object ... result[#].ssid string SSID of the network result[#].bssid integer BSSID of the network result[#].frequency integer Frequency used result[#].signal integer Signal strength result[#].security array Security method result[#].security[#] string ... (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.networks\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"...\", \"bssid\": 0, \"frequency\": 0, \"signal\": 0, \"security\": [ \"Open\" ] } ] } securities property Provides access to the provides security method of requested SSID. This property is read-only . Value The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.securities@<ssid> . Result Name Type Description result array Provides security method of requested SSID result[#] object ... result[#].method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) result[#].keys array Security Keys result[#].keys[#] string ... (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.securities@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"method\": \"Open\", \"keys\": [ \"PSK\" ] } ] } configs property Provides access to the provides configs list. This property is read-only . Value Result Name Type Description result array Provides configs list result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.configs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } config property Provides access to the provide config details for requested SSID. Value Name Type Description (property) object Provide config details for requested SSID (property).value object ... (property).value.hidden boolean Visibility of the router (hidden or visible) (property).value.accesspoint boolean Accesspoint or not (property).value.ssid string SSID of the router/ap (property).value.secret string Secret key used (property).value.identity string Identity (property).value.method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) (property).value.key string Security Info: method and keys (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP ) The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.config@<ssid> . Result Name Type Description result object Details about requested SSID result.hidden boolean Visibility of the router (hidden or visible) result.accesspoint boolean Accesspoint or not result.ssid string SSID of the router/ap result.secret string Secret key used result.identity string Identity result.method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) result.key string Security Info: method and keys (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hidden\": false, \"accesspoint\": false, \"ssid\": \"...\", \"secret\": \"...\", \"identity\": \"...\", \"method\": \"Open\", \"key\": \"PSK\" } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@xyz\", \"params\": { \"value\": { \"hidden\": false, \"accesspoint\": false, \"ssid\": \"...\", \"secret\": \"...\", \"identity\": \"...\", \"method\": \"Open\", \"key\": \"PSK\" } } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WifiControl interface: WifiControl interface events: Notification Description networkchange Notifies that Network were added, removed or modified connectionchange Notifies that wifi connection changes networkchange notification Notifies that Network were added, removed or modified. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.register\", \"params\": { \"event\": \"networkchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.networkchange\" } connectionchange notification Notifies that wifi connection changes. Parameters Name Type Description params object ... params.ssid string SSID of connection changed network Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.register\", \"params\": { \"event\": \"connectionchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.connectionchange\", \"params\": { \"ssid\": \"...\" } }","title":"WifiControl API"},{"location":"api/WifiControlAPI/#wificontrol-api","text":"Version: 1.0.0 Status: WifiControl interface for Thunder framework. (Defined with IWifiControl in IWifiControl.h )","title":"WifiControl API"},{"location":"api/WifiControlAPI/#table-of-contents","text":"Introduction Description Methods Properties Notifications","title":"Table of Contents"},{"location":"api/WifiControlAPI/#introduction","text":"","title":"Introduction"},{"location":"api/WifiControlAPI/#scope","text":"This document describes purpose and functionality of the WifiControl interface (version 1.0.0). It includes detailed specification about its methods and properties as well as sent notifications.","title":"Scope"},{"location":"api/WifiControlAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/WifiControlAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/WifiControlAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/WifiControlAPI/#description","text":"WifiControl JSON-RPC interface.","title":"Description"},{"location":"api/WifiControlAPI/#methods","text":"The following methods are provided by the WifiControl interface: WifiControl interface methods: Method Description scan Trigger Scanning abortscan Abort Currentlt running scan connect Connect device to requested SSID disconnect Disconnect device from requested SSID status Status of current device, like which SSID is connected and it is in scanning state or not","title":"Methods"},{"location":"api/WifiControlAPI/#scan-method","text":"Trigger Scanning.","title":"scan method"},{"location":"api/WifiControlAPI/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/WifiControlAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/WifiControlAPI/#example","text":"","title":"Example"},{"location":"api/WifiControlAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.scan\" }","title":"Request"},{"location":"api/WifiControlAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/WifiControlAPI/#abortscan-method","text":"Abort Currentlt running scan.","title":"abortscan method"},{"location":"api/WifiControlAPI/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/WifiControlAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/WifiControlAPI/#example_1","text":"","title":"Example"},{"location":"api/WifiControlAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.abortscan\" }","title":"Request"},{"location":"api/WifiControlAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/WifiControlAPI/#connect-method","text":"Connect device to requested SSID.","title":"connect method"},{"location":"api/WifiControlAPI/#parameters_2","text":"Name Type Description params object ... params.configssid string SSID to be connected","title":"Parameters"},{"location":"api/WifiControlAPI/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/WifiControlAPI/#example_2","text":"","title":"Example"},{"location":"api/WifiControlAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.connect\", \"params\": { \"configssid\": \"...\" } }","title":"Request"},{"location":"api/WifiControlAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/WifiControlAPI/#disconnect-method","text":"Disconnect device from requested SSID.","title":"disconnect method"},{"location":"api/WifiControlAPI/#parameters_3","text":"Name Type Description params object ... params.configssid string SSID to be disconnected","title":"Parameters"},{"location":"api/WifiControlAPI/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/WifiControlAPI/#example_3","text":"","title":"Example"},{"location":"api/WifiControlAPI/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.disconnect\", \"params\": { \"configssid\": \"...\" } }","title":"Request"},{"location":"api/WifiControlAPI/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/WifiControlAPI/#status-method","text":"Status of current device, like which SSID is connected and it is in scanning state or not.","title":"status method"},{"location":"api/WifiControlAPI/#parameters_4","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/WifiControlAPI/#result_4","text":"Name Type Description result object ... result.connectedssid string SSID of connected router/ap result.isscanning boolean Scanning is in progress or not","title":"Result"},{"location":"api/WifiControlAPI/#example_4","text":"","title":"Example"},{"location":"api/WifiControlAPI/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.status\" }","title":"Request"},{"location":"api/WifiControlAPI/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"connectedssid\": \"...\", \"isscanning\": false } }","title":"Response"},{"location":"api/WifiControlAPI/#properties","text":"The following properties are provided by the WifiControl interface: WifiControl interface properties: Property Description networks (read-only) Provides available networks information securities (read-only) Provides security method of requested SSID configs (read-only) Provides configs list config Provide config details for requested SSID","title":"Properties"},{"location":"api/WifiControlAPI/#networks-property","text":"Provides access to the provides available networks information. This property is read-only .","title":"networks property"},{"location":"api/WifiControlAPI/#value","text":"","title":"Value"},{"location":"api/WifiControlAPI/#result_5","text":"Name Type Description result array Provides available networks information result[#] object ... result[#].ssid string SSID of the network result[#].bssid integer BSSID of the network result[#].frequency integer Frequency used result[#].signal integer Signal strength result[#].security array Security method result[#].security[#] string ... (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS )","title":"Result"},{"location":"api/WifiControlAPI/#example_5","text":"","title":"Example"},{"location":"api/WifiControlAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.networks\" }","title":"Get Request"},{"location":"api/WifiControlAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"...\", \"bssid\": 0, \"frequency\": 0, \"signal\": 0, \"security\": [ \"Open\" ] } ] }","title":"Get Response"},{"location":"api/WifiControlAPI/#securities-property","text":"Provides access to the provides security method of requested SSID. This property is read-only .","title":"securities property"},{"location":"api/WifiControlAPI/#value_1","text":"The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.securities@<ssid> .","title":"Value"},{"location":"api/WifiControlAPI/#result_6","text":"Name Type Description result array Provides security method of requested SSID result[#] object ... result[#].method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) result[#].keys array Security Keys result[#].keys[#] string ... (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP )","title":"Result"},{"location":"api/WifiControlAPI/#example_6","text":"","title":"Example"},{"location":"api/WifiControlAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.securities@xyz\" }","title":"Get Request"},{"location":"api/WifiControlAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"method\": \"Open\", \"keys\": [ \"PSK\" ] } ] }","title":"Get Response"},{"location":"api/WifiControlAPI/#configs-property","text":"Provides access to the provides configs list. This property is read-only .","title":"configs property"},{"location":"api/WifiControlAPI/#value_2","text":"","title":"Value"},{"location":"api/WifiControlAPI/#result_7","text":"Name Type Description result array Provides configs list result[#] string ...","title":"Result"},{"location":"api/WifiControlAPI/#example_7","text":"","title":"Example"},{"location":"api/WifiControlAPI/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.configs\" }","title":"Get Request"},{"location":"api/WifiControlAPI/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"api/WifiControlAPI/#config-property","text":"Provides access to the provide config details for requested SSID.","title":"config property"},{"location":"api/WifiControlAPI/#value_3","text":"Name Type Description (property) object Provide config details for requested SSID (property).value object ... (property).value.hidden boolean Visibility of the router (hidden or visible) (property).value.accesspoint boolean Accesspoint or not (property).value.ssid string SSID of the router/ap (property).value.secret string Secret key used (property).value.identity string Identity (property).value.method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) (property).value.key string Security Info: method and keys (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP ) The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.config@<ssid> .","title":"Value"},{"location":"api/WifiControlAPI/#result_8","text":"Name Type Description result object Details about requested SSID result.hidden boolean Visibility of the router (hidden or visible) result.accesspoint boolean Accesspoint or not result.ssid string SSID of the router/ap result.secret string Secret key used result.identity string Identity result.method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) result.key string Security Info: method and keys (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP )","title":"Result"},{"location":"api/WifiControlAPI/#example_8","text":"","title":"Example"},{"location":"api/WifiControlAPI/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@xyz\" }","title":"Get Request"},{"location":"api/WifiControlAPI/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hidden\": false, \"accesspoint\": false, \"ssid\": \"...\", \"secret\": \"...\", \"identity\": \"...\", \"method\": \"Open\", \"key\": \"PSK\" } }","title":"Get Response"},{"location":"api/WifiControlAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@xyz\", \"params\": { \"value\": { \"hidden\": false, \"accesspoint\": false, \"ssid\": \"...\", \"secret\": \"...\", \"identity\": \"...\", \"method\": \"Open\", \"key\": \"PSK\" } } }","title":"Set Request"},{"location":"api/WifiControlAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/WifiControlAPI/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WifiControl interface: WifiControl interface events: Notification Description networkchange Notifies that Network were added, removed or modified connectionchange Notifies that wifi connection changes","title":"Notifications"},{"location":"api/WifiControlAPI/#networkchange-notification","text":"Notifies that Network were added, removed or modified.","title":"networkchange notification"},{"location":"api/WifiControlAPI/#parameters_5","text":"This notification carries no parameters.","title":"Parameters"},{"location":"api/WifiControlAPI/#example_9","text":"","title":"Example"},{"location":"api/WifiControlAPI/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.register\", \"params\": { \"event\": \"networkchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/WifiControlAPI/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.networkchange\" }","title":"Message"},{"location":"api/WifiControlAPI/#connectionchange-notification","text":"Notifies that wifi connection changes.","title":"connectionchange notification"},{"location":"api/WifiControlAPI/#parameters_6","text":"Name Type Description params object ... params.ssid string SSID of connection changed network","title":"Parameters"},{"location":"api/WifiControlAPI/#example_10","text":"","title":"Example"},{"location":"api/WifiControlAPI/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.register\", \"params\": { \"event\": \"connectionchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"api/WifiControlAPI/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.connectionchange\", \"params\": { \"ssid\": \"...\" } }","title":"Message"},{"location":"api/ZigWaveAPI/","text":"ZigWave API Version: 1.0.0 Status: ZigWave interface for Thunder framework. (Defined with IZigWave in IZigWave.h ) Table of Contents Introduction Description Methods Properties Introduction Scope This document describes purpose and functionality of the ZigWave interface (version 1.0.0). It includes detailed specification about its methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description ZigWave JSON-RPC interface. Methods The following methods are provided by the ZigWave interface: ZigWave interface methods: Method Description bind Bind the out from the soure to the in of the destination unbind Unbind the out from the soure to the in of the destination metadata Return the Metadata associated with the controller for this instance bind method Bind the out from the soure to the in of the destination. Parameters Name Type Description params object ... params.source integer Source to be bound params.destination integer Destination to be bound Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.bind\", \"params\": { \"source\": 0, \"destination\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } unbind method Unbind the out from the soure to the in of the destination. Parameters Name Type Description params object ... params.source integer Source to be unbound params.destination integer Destination to be unbound Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.unbind\", \"params\": { \"source\": 0, \"destination\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } metadata method Return the Metadata associated with the controller for this instance. Parameters This method takes no parameters. Result Name Type Description result object ... result.permutable boolean Permutable or not result.port string Port number result.id integer Controller Id result.major integer Major number result.minor integer Minor number result.nodes integer Number of Nodes Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.metadata\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"permutable\": false, \"port\": \"...\", \"id\": 0, \"major\": 0, \"minor\": 0, \"nodes\": 0 } } Properties The following properties are provided by the ZigWave interface: ZigWave interface properties: Property Description permutable / accept To allow new devices to the network, the controller should be placed into an accepting mode devices (read-only) Get the information of available devices permutable property Provides access to the to allow new devices to the network, the controller should be placed into an accepting mode. By enabling this mode, the controller can accept new devices. accept is an alternative name for this property. Value Name Type Description (property) object To allow new devices to the network, the controller should be placed into an accepting mode. By enabling this mode, the controller can accept new devices (property).value boolean ... The address argument shall be passed as the index to the property, e.g. ZigWave.1.permutable@<address> . Result Name Type Description result boolean Enabled (true) or Disable (false) the accepting mode Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.permutable@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.permutable@0\", \"params\": { \"value\": false } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } devices property Provides access to the get the information of available devices. An id of 0xFFFFFFFF means all devices available by this plugin. This property is read-only . Value The id argument shall be passed as the index to the property, e.g. ZigWave.1.devices@<id> . Result Name Type Description result array Get the information of available devices. An id of 0xFFFFFFFF means all devices available by this plugin result[#] object ... result[#].parent integer Address of the Parent result[#].address integer Address of the device result[#].type string Type of the device (must be one of the following: Controller, EndDevice, Router ) result[#].manufacturer integer Manufactured of this device result[#].metadata string Metadata associated with this device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.devices@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"parent\": 0, \"address\": 0, \"type\": \"EndDevice\", \"manufacturer\": 0, \"metadata\": \"...\" } ] }","title":"ZigWave API"},{"location":"api/ZigWaveAPI/#zigwave-api","text":"Version: 1.0.0 Status: ZigWave interface for Thunder framework. (Defined with IZigWave in IZigWave.h )","title":"ZigWave API"},{"location":"api/ZigWaveAPI/#table-of-contents","text":"Introduction Description Methods Properties","title":"Table of Contents"},{"location":"api/ZigWaveAPI/#introduction","text":"","title":"Introduction"},{"location":"api/ZigWaveAPI/#scope","text":"This document describes purpose and functionality of the ZigWave interface (version 1.0.0). It includes detailed specification about its methods and properties provided.","title":"Scope"},{"location":"api/ZigWaveAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"api/ZigWaveAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"api/ZigWaveAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"api/ZigWaveAPI/#description","text":"ZigWave JSON-RPC interface.","title":"Description"},{"location":"api/ZigWaveAPI/#methods","text":"The following methods are provided by the ZigWave interface: ZigWave interface methods: Method Description bind Bind the out from the soure to the in of the destination unbind Unbind the out from the soure to the in of the destination metadata Return the Metadata associated with the controller for this instance","title":"Methods"},{"location":"api/ZigWaveAPI/#bind-method","text":"Bind the out from the soure to the in of the destination.","title":"bind method"},{"location":"api/ZigWaveAPI/#parameters","text":"Name Type Description params object ... params.source integer Source to be bound params.destination integer Destination to be bound","title":"Parameters"},{"location":"api/ZigWaveAPI/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/ZigWaveAPI/#example","text":"","title":"Example"},{"location":"api/ZigWaveAPI/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.bind\", \"params\": { \"source\": 0, \"destination\": 0 } }","title":"Request"},{"location":"api/ZigWaveAPI/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/ZigWaveAPI/#unbind-method","text":"Unbind the out from the soure to the in of the destination.","title":"unbind method"},{"location":"api/ZigWaveAPI/#parameters_1","text":"Name Type Description params object ... params.source integer Source to be unbound params.destination integer Destination to be unbound","title":"Parameters"},{"location":"api/ZigWaveAPI/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"api/ZigWaveAPI/#example_1","text":"","title":"Example"},{"location":"api/ZigWaveAPI/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.unbind\", \"params\": { \"source\": 0, \"destination\": 0 } }","title":"Request"},{"location":"api/ZigWaveAPI/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"api/ZigWaveAPI/#metadata-method","text":"Return the Metadata associated with the controller for this instance.","title":"metadata method"},{"location":"api/ZigWaveAPI/#parameters_2","text":"This method takes no parameters.","title":"Parameters"},{"location":"api/ZigWaveAPI/#result_2","text":"Name Type Description result object ... result.permutable boolean Permutable or not result.port string Port number result.id integer Controller Id result.major integer Major number result.minor integer Minor number result.nodes integer Number of Nodes","title":"Result"},{"location":"api/ZigWaveAPI/#example_2","text":"","title":"Example"},{"location":"api/ZigWaveAPI/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.metadata\" }","title":"Request"},{"location":"api/ZigWaveAPI/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"permutable\": false, \"port\": \"...\", \"id\": 0, \"major\": 0, \"minor\": 0, \"nodes\": 0 } }","title":"Response"},{"location":"api/ZigWaveAPI/#properties","text":"The following properties are provided by the ZigWave interface: ZigWave interface properties: Property Description permutable / accept To allow new devices to the network, the controller should be placed into an accepting mode devices (read-only) Get the information of available devices","title":"Properties"},{"location":"api/ZigWaveAPI/#permutable-property","text":"Provides access to the to allow new devices to the network, the controller should be placed into an accepting mode. By enabling this mode, the controller can accept new devices. accept is an alternative name for this property.","title":"permutable property"},{"location":"api/ZigWaveAPI/#value","text":"Name Type Description (property) object To allow new devices to the network, the controller should be placed into an accepting mode. By enabling this mode, the controller can accept new devices (property).value boolean ... The address argument shall be passed as the index to the property, e.g. ZigWave.1.permutable@<address> .","title":"Value"},{"location":"api/ZigWaveAPI/#result_3","text":"Name Type Description result boolean Enabled (true) or Disable (false) the accepting mode","title":"Result"},{"location":"api/ZigWaveAPI/#example_3","text":"","title":"Example"},{"location":"api/ZigWaveAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.permutable@0\" }","title":"Get Request"},{"location":"api/ZigWaveAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"api/ZigWaveAPI/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.permutable@0\", \"params\": { \"value\": false } }","title":"Set Request"},{"location":"api/ZigWaveAPI/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"api/ZigWaveAPI/#devices-property","text":"Provides access to the get the information of available devices. An id of 0xFFFFFFFF means all devices available by this plugin. This property is read-only .","title":"devices property"},{"location":"api/ZigWaveAPI/#value_1","text":"The id argument shall be passed as the index to the property, e.g. ZigWave.1.devices@<id> .","title":"Value"},{"location":"api/ZigWaveAPI/#result_4","text":"Name Type Description result array Get the information of available devices. An id of 0xFFFFFFFF means all devices available by this plugin result[#] object ... result[#].parent integer Address of the Parent result[#].address integer Address of the device result[#].type string Type of the device (must be one of the following: Controller, EndDevice, Router ) result[#].manufacturer integer Manufactured of this device result[#].metadata string Metadata associated with this device","title":"Result"},{"location":"api/ZigWaveAPI/#example_4","text":"","title":"Example"},{"location":"api/ZigWaveAPI/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"ZigWave.1.devices@0\" }","title":"Get Request"},{"location":"api/ZigWaveAPI/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"parent\": 0, \"address\": 0, \"type\": \"EndDevice\", \"manufacturer\": 0, \"metadata\": \"...\" } ] }","title":"Get Response"},{"location":"plugins/AVSPlugin/","text":"AVS Plugin Version: 1.0 Status: AVS plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Notifications Introduction Scope This document describes purpose and functionality of the AVS plugin. It includes detailed specification about its configuration, methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Alexa Voice Service Headless Client serves as a personal assistant. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: AVS ) classname string Class name: AVS locator string Library name: libThunderAVS.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration.alexaclientconfig string The path to the AlexaClientSDKConfig.json (e.g /usr/share/Thunder/AVS/AlexaClientSDKConfig.json) configuration?.smartscreenconfig string (optional) The path to the SmartScreenSDKConfig.json (e.g /usr/share/Thunder/AVS/SmartScreenSDKConfig.json). This config will be used only when SmartScreen functionality is enabled configuration?.kwdmodelspath string (optional) Path to the Keyword Detection models (e.g /usr/share/Thunder/AVS/models). The path mus contain the localeToModels.json file configuration?.loglevel string (optional) Capitalized log level of the AVS components. Possible values: NONE, CRITICAL, ERROR, WARN, INFO. Debug log levels start from DEBUG0 up to DEBUG0 configuration.audiosource string The callsign of the plugin that provides the voice audio input or PORTAUDIO, when the portaudio library should be used. (e.g BluetoothRemoteControll, PORTAUDIO) configuration?.enablesmartscreen boolean (optional) Enable the SmartScreen support in the runtime. The SmartScreen functionality must be compiled in configuration?.enablekwd boolean (optional) Enable the Keyword Detection engine in the runtime. The KWD functionality must be compiled in Interfaces This plugin implements the following interfaces: IAVSController ( IAVSClient.h ) (version 1.0.0) (uncompliant-collapsed format) Methods The following methods are provided by the AVS plugin: AVSController interface methods: Method Description mute Mutes the audio output of AVS record Starts or stops the voice recording, skipping keyword detection mute method Mutes the audio output of AVS. Parameters Name Type Description params boolean ... Result Name Type Description result null Always null Errors Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVS.1.mute\", \"params\": false } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } record method Starts or stops the voice recording, skipping keyword detection. Parameters Name Type Description params boolean ... Result Name Type Description result null Always null Errors Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVS.1.record\", \"params\": false } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the AVS plugin: AVSController interface events: Notification Description dialoguestatechange Notifies about dialogue state changes dialoguestatechange notification Notifies about dialogue state changes. Parameters Name Type Description params string The new state (must be one of the following: Expecting, Idle, Listening, Speaking, Thinking ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVS.1.register\", \"params\": { \"event\": \"dialoguestatechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.dialoguestatechange\", \"params\": \"SPEAKING\" }","title":"AVS Plugin"},{"location":"plugins/AVSPlugin/#avs-plugin","text":"Version: 1.0 Status: AVS plugin for Thunder framework.","title":"AVS Plugin"},{"location":"plugins/AVSPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Notifications","title":"Table of Contents"},{"location":"plugins/AVSPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/AVSPlugin/#scope","text":"This document describes purpose and functionality of the AVS plugin. It includes detailed specification about its configuration, methods provided and notifications sent.","title":"Scope"},{"location":"plugins/AVSPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/AVSPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/AVSPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/AVSPlugin/#description","text":"The Alexa Voice Service Headless Client serves as a personal assistant. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/AVSPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: AVS ) classname string Class name: AVS locator string Library name: libThunderAVS.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration.alexaclientconfig string The path to the AlexaClientSDKConfig.json (e.g /usr/share/Thunder/AVS/AlexaClientSDKConfig.json) configuration?.smartscreenconfig string (optional) The path to the SmartScreenSDKConfig.json (e.g /usr/share/Thunder/AVS/SmartScreenSDKConfig.json). This config will be used only when SmartScreen functionality is enabled configuration?.kwdmodelspath string (optional) Path to the Keyword Detection models (e.g /usr/share/Thunder/AVS/models). The path mus contain the localeToModels.json file configuration?.loglevel string (optional) Capitalized log level of the AVS components. Possible values: NONE, CRITICAL, ERROR, WARN, INFO. Debug log levels start from DEBUG0 up to DEBUG0 configuration.audiosource string The callsign of the plugin that provides the voice audio input or PORTAUDIO, when the portaudio library should be used. (e.g BluetoothRemoteControll, PORTAUDIO) configuration?.enablesmartscreen boolean (optional) Enable the SmartScreen support in the runtime. The SmartScreen functionality must be compiled in configuration?.enablekwd boolean (optional) Enable the Keyword Detection engine in the runtime. The KWD functionality must be compiled in","title":"Configuration"},{"location":"plugins/AVSPlugin/#interfaces","text":"This plugin implements the following interfaces: IAVSController ( IAVSClient.h ) (version 1.0.0) (uncompliant-collapsed format)","title":"Interfaces"},{"location":"plugins/AVSPlugin/#methods","text":"The following methods are provided by the AVS plugin: AVSController interface methods: Method Description mute Mutes the audio output of AVS record Starts or stops the voice recording, skipping keyword detection","title":"Methods"},{"location":"plugins/AVSPlugin/#mute-method","text":"Mutes the audio output of AVS.","title":"mute method"},{"location":"plugins/AVSPlugin/#parameters","text":"Name Type Description params boolean ...","title":"Parameters"},{"location":"plugins/AVSPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/AVSPlugin/#errors","text":"Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible","title":"Errors"},{"location":"plugins/AVSPlugin/#example","text":"","title":"Example"},{"location":"plugins/AVSPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVS.1.mute\", \"params\": false }","title":"Request"},{"location":"plugins/AVSPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/AVSPlugin/#record-method","text":"Starts or stops the voice recording, skipping keyword detection.","title":"record method"},{"location":"plugins/AVSPlugin/#parameters_1","text":"Name Type Description params boolean ...","title":"Parameters"},{"location":"plugins/AVSPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/AVSPlugin/#errors_1","text":"Message Description ERROR_GENERAL when there is a fatal error or authorisation is not possible","title":"Errors"},{"location":"plugins/AVSPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/AVSPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVS.1.record\", \"params\": false }","title":"Request"},{"location":"plugins/AVSPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/AVSPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the AVS plugin: AVSController interface events: Notification Description dialoguestatechange Notifies about dialogue state changes","title":"Notifications"},{"location":"plugins/AVSPlugin/#dialoguestatechange-notification","text":"Notifies about dialogue state changes.","title":"dialoguestatechange notification"},{"location":"plugins/AVSPlugin/#parameters_2","text":"Name Type Description params string The new state (must be one of the following: Expecting, Idle, Listening, Speaking, Thinking )","title":"Parameters"},{"location":"plugins/AVSPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/AVSPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"AVS.1.register\", \"params\": { \"event\": \"dialoguestatechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/AVSPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.dialoguestatechange\", \"params\": \"SPEAKING\" }","title":"Message"},{"location":"plugins/BackOfficePlugin/","text":"BackOffice Plugin Version: 1.0 Status: BackOffice plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the BackOffice plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The BackOffice plugin responsible for monitoring lifecycle of observables and passing this info to the server. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BackOffice ) classname string Class name: BackOffice locator string Library name: libThunderBackOffice.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object ... configuration.server_address string Back office server address configuration.server_port integer Back office server port configuration.customer string Customer name configuration.platform string Platform name configuration.country string Country code configuration?.type string (optional) Type configuration?.session integer (optional) Session number configuration.callsign_mapping string Mapping on how to map callsigns to server accepted names configuration.state_mapping string Mapping on how to map state to server accepted states","title":"BackOffice Plugin"},{"location":"plugins/BackOfficePlugin/#backoffice-plugin","text":"Version: 1.0 Status: BackOffice plugin for Thunder framework.","title":"BackOffice Plugin"},{"location":"plugins/BackOfficePlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"plugins/BackOfficePlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/BackOfficePlugin/#scope","text":"This document describes purpose and functionality of the BackOffice plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"plugins/BackOfficePlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/BackOfficePlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/BackOfficePlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/BackOfficePlugin/#description","text":"The BackOffice plugin responsible for monitoring lifecycle of observables and passing this info to the server. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/BackOfficePlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BackOffice ) classname string Class name: BackOffice locator string Library name: libThunderBackOffice.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object ... configuration.server_address string Back office server address configuration.server_port integer Back office server port configuration.customer string Customer name configuration.platform string Platform name configuration.country string Country code configuration?.type string (optional) Type configuration?.session integer (optional) Session number configuration.callsign_mapping string Mapping on how to map callsigns to server accepted names configuration.state_mapping string Mapping on how to map state to server accepted states","title":"Configuration"},{"location":"plugins/BluetoothAudioPlugin/","text":"Bluetooth Audio Plugin Version: 1.0 Status: BluetoothAudio plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the BluetoothAudio plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface BR/EDR Basic Rate/Enhanced Data Rate HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON LC-SBC Low-Complexity SubBand Coding The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description bitpool A parameter to the LC-SBC codec that changes the encoding bitrate; the higher it is the higher the bitrate and thus the audio quality callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Bluetooth Audio Sink plugin enables audio streaming to Bluetooth audio sink devices. The plugin is sink a from the host device stack perspective; in Bluetooth topology the host device becomes in fact an audio source. The plugin requires a Bluetooth controller service that will provide Bluetooth BR/EDR scanning, pairing and connection functionality; typically this is fulfiled by the BluetoothControl plugin. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothAudio ) classname string Class name: BluetoothAudio locator string Library name: libThunderBluetoothAudio.so startmode string Determines in which state the plugin should be moved to at startup of the framework controller string (optional) Callsign of the Bluetooth controller service (typically BluetoothControl ) server object (optional) BluetoothAudio server configuration server?.interface integer (optional) Bluetooth interface to listen to for incomming connections server?.inactivitytimeout integer (optional) Timeout to drop inactive connections (in ms) server?.psm integer (optional) Port to listen to for incomming conections (typically 25) sink object (optional) BluetoothAudio sink configuration sink.codecs object Codec settings sink.codecs.LC-SBC object Settings for the LC-SBC codec sink.codecs.LC-SBC?.preset string (optional) Predefined audio quality setting sink.codecs.LC-SBC?.bitpool integer (optional) Custom audio quality based on bitpool value (used when preset is not specified) sink.codecs.LC-SBC?.channelmode string (optional) Channel mode for custom audio quality (used when preset is not specified) source object (optional) BluetoothAudio source configuration source.codecs object Codec settings source.codecs?.LC-SBC object (optional) Settings for the LC-SBC codec source.codecs?.LC-SBC.maxbitpool integer Maximum accepted bitpool value Interfaces This plugin implements the following interfaces: IBluetoothAudio::ISink ( IBluetoothAudio.h ) (version 1.0.0) (compliant format) IBluetoothAudio::ISource ( IBluetoothAudio.h ) (version 1.0.0) (compliant format) Methods The following methods are provided by the BluetoothAudio plugin: BluetoothAudio Sink interface methods: Method Description sink::assign Assigns a Bluetooth sink device for audio playback sink::revoke Revokes a Bluetooth sink device from audio playback sink::assign method Assigns a Bluetooth sink device for audio playback. Parameters Name Type Description params object ... params.address string Address of the bluetooth device to assign Result Name Type Description result null Always null Errors Message Description ERROR_BAD_REQUEST Device address value is invalid ERROR_ALREADY_CONNECTED A sink device is already assigned Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::assign\", \"params\": { \"address\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } sink::revoke method Revokes a Bluetooth sink device from audio playback. Parameters This method takes no parameters. Result Name Type Description result null Always null Errors Message Description ERROR_ALREADY_RELEASED No device is currently assigned as sink Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::revoke\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the BluetoothAudio plugin: BluetoothAudio Sink interface properties: Property Description sink::state (read-only) Current state o the audio sink device sink::device (read-only) Bluetooth address of the audio sink device sink::type (read-only) Type of the audio sink device sink::latency Latency of the audio sink device sink::supportedcodecs (read-only) Audio codecs supported by the audio sink device sink::supporteddrms (read-only) DRM schemes supported by the audio sink device sink::codec (read-only) Properites of the currently used audio codec sink::drm (read-only) Properites of the currently used DRM scheme sink::stream (read-only) Properties of the currently transmitted audio stream BluetoothAudio Source interface properties: Property Description source::state (read-only) Current state of the source device source::device (read-only) Bluetooth address of the source device source::type (read-only) Type of the audio source device source::codec (read-only) Properites of the currently used codec source::drm (read-only) Properties of the currently used DRM scheme source::stream (read-only) Properites of the currently transmitted audio stream sink::state property Provides access to the current state o the audio sink device. This property is read-only . Value Result Name Type Description result string Current state o the audio sink device (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unassigned\" } sink::device property Provides access to the bluetooth address of the audio sink device. This property is read-only . Value Result Name Type Description result string Bluetooth address of the audio sink device Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not assigned Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::device\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } sink::type property Provides access to the type of the audio sink device. This property is read-only . Value Result Name Type Description result string Type of the audio sink device (must be one of the following: Amplifier, Headphone, Recorder, Speaker, Unknown ) Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::type\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" } sink::latency property Provides access to the latency of the audio sink device. Value Name Type Description (property) object Latency of the audio sink device (property).value integer Audio latency in milliseconds Result Name Type Description result integer Latency of the audio sink device Errors Message Description ERROR_BAD_REQUEST Latency value is invalid Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::latency\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::latency\", \"params\": { \"value\": 20 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } sink::supportedcodecs property Provides access to the audio codecs supported by the audio sink device. This property is read-only . Value Result Name Type Description result array Audio codecs supported by the audio sink device result[#] string ... (must be one of the following: LC-SBC ) Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::supportedcodecs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"LC-SBC\" ] } sink::supporteddrms property Provides access to the DRM schemes supported by the audio sink device. This property is read-only . Value Result Name Type Description result array DRM schemes supported by the audio sink device result[#] string ... (must be one of the following: DTCP, SCMS-T ) Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::supporteddrms\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"DTCP\" ] } sink::codec property Provides access to the properites of the currently used audio codec. This property is read-only . Value Result Name Type Description result object Properites of the currently used audio codec result.codec string Audio codec used (must be one of the following: LC-SBC ) result.settings opaque object Codec-specific audio quality preset, compression profile, etc Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::codec\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"LC-SBC\", \"settings\": {} } } sink::drm property Provides access to the properites of the currently used DRM scheme. This property is read-only . Value Result Name Type Description result object Properites of the currently used DRM scheme result.drm string Content protection scheme used (must be one of the following: DTCP, SCMS-T ) result.settings opaque object DRM-specific content protection level, encoding rules, etc Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected or not yet configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::drm\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"drm\": \"DTCP\", \"settings\": {} } } sink::stream property Provides access to the properties of the currently transmitted audio stream. This property is read-only . Value Result Name Type Description result object Properties of the currently transmitted audio stream result.samplerate integer Sample rate in Hz result.bitrate integer Target bitrate in bits per second (eg. 320000) result.channels integer Number of audio channels result.resolution integer Sampling resolution in bits per sample result.isresampled boolean Indicates if the source stream is being resampled by the stack to match sink capabilities Errors Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected or not yet configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::stream\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"samplerate\": 44100, \"bitrate\": 0, \"channels\": 2, \"resolution\": 16, \"isresampled\": false } } source::state property Provides access to the current state of the source device. This property is read-only . Value Result Name Type Description result string Current state of the source device (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unassigned\" } source::device property Provides access to the bluetooth address of the source device. This property is read-only . Value Result Name Type Description result string Bluetooth address of the source device Errors Message Description ERROR_ILLEGAL_STATE No source device is currently connected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::device\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } source::type property Provides access to the type of the audio source device. This property is read-only . Value Result Name Type Description result string Type of the audio source device (must be one of the following: Microphone, Mixer, Player, Tuner, Unknown ) Errors Message Description ERROR_ILLEGAL_STATE No source device is currently connected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::type\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" } source::codec property Provides access to the properites of the currently used codec. This property is read-only . Value Result Name Type Description result object Properites of the currently used codec result.codec string Audio codec used (must be one of the following: LC-SBC ) result.settings opaque object Codec-specific audio quality preset, compression profile, etc Errors Message Description ERROR_ILLEGAL_STATE No source device is not connected or sink is not yet configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::codec\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"LC-SBC\", \"settings\": {} } } source::drm property Provides access to the properties of the currently used DRM scheme. This property is read-only . Value Result Name Type Description result object Properties of the currently used DRM scheme result.drm string Content protection scheme used (must be one of the following: DTCP, SCMS-T ) result.settings opaque object DRM-specific content protection level, encoding rules, etc Errors Message Description ERROR_ILLEGAL_STATE No source device is connected or sink is not yet configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::drm\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"drm\": \"DTCP\", \"settings\": {} } } source::stream property Provides access to the properites of the currently transmitted audio stream. This property is read-only . Value Result Name Type Description result object Properites of the currently transmitted audio stream result.samplerate integer Sample rate in Hz result.bitrate integer Target bitrate in bits per second (eg. 320000) result.channels integer Number of audio channels result.resolution integer Sampling resolution in bits per sample result.isresampled boolean Indicates if the source stream is being resampled by the stack to match sink capabilities Errors Message Description ERROR_ILLEGAL_STATE No source device is connected or sink is not yet configured Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::stream\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"samplerate\": 44100, \"bitrate\": 0, \"channels\": 2, \"resolution\": 16, \"isresampled\": false } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothAudio plugin: BluetoothAudio Sink interface events: Notification Description sink::statechanged Signals audio sink state change BluetoothAudio Source interface events: Notification Description source::statechanged Signals audio source state change sink::statechanged notification Signals audio sink state change. Parameters Name Type Description params object ... params.state string Changed BluetoothAudio State (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.register\", \"params\": { \"event\": \"sink::statechanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.sink::statechanged\", \"params\": { \"state\": \"Unassigned\" } } source::statechanged notification Signals audio source state change. Parameters Name Type Description params object ... params.state string Changed BluetoothAudio State (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.register\", \"params\": { \"event\": \"source::statechanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.source::statechanged\", \"params\": { \"state\": \"Unassigned\" } }","title":"Bluetooth Audio Plugin"},{"location":"plugins/BluetoothAudioPlugin/#bluetooth-audio-plugin","text":"Version: 1.0 Status: BluetoothAudio plugin for Thunder framework.","title":"Bluetooth Audio Plugin"},{"location":"plugins/BluetoothAudioPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/BluetoothAudioPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/BluetoothAudioPlugin/#scope","text":"This document describes purpose and functionality of the BluetoothAudio plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/BluetoothAudioPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/BluetoothAudioPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface BR/EDR Basic Rate/Enhanced Data Rate HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON LC-SBC Low-Complexity SubBand Coding The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description bitpool A parameter to the LC-SBC codec that changes the encoding bitrate; the higher it is the higher the bitrate and thus the audio quality callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/BluetoothAudioPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/BluetoothAudioPlugin/#description","text":"The Bluetooth Audio Sink plugin enables audio streaming to Bluetooth audio sink devices. The plugin is sink a from the host device stack perspective; in Bluetooth topology the host device becomes in fact an audio source. The plugin requires a Bluetooth controller service that will provide Bluetooth BR/EDR scanning, pairing and connection functionality; typically this is fulfiled by the BluetoothControl plugin. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/BluetoothAudioPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothAudio ) classname string Class name: BluetoothAudio locator string Library name: libThunderBluetoothAudio.so startmode string Determines in which state the plugin should be moved to at startup of the framework controller string (optional) Callsign of the Bluetooth controller service (typically BluetoothControl ) server object (optional) BluetoothAudio server configuration server?.interface integer (optional) Bluetooth interface to listen to for incomming connections server?.inactivitytimeout integer (optional) Timeout to drop inactive connections (in ms) server?.psm integer (optional) Port to listen to for incomming conections (typically 25) sink object (optional) BluetoothAudio sink configuration sink.codecs object Codec settings sink.codecs.LC-SBC object Settings for the LC-SBC codec sink.codecs.LC-SBC?.preset string (optional) Predefined audio quality setting sink.codecs.LC-SBC?.bitpool integer (optional) Custom audio quality based on bitpool value (used when preset is not specified) sink.codecs.LC-SBC?.channelmode string (optional) Channel mode for custom audio quality (used when preset is not specified) source object (optional) BluetoothAudio source configuration source.codecs object Codec settings source.codecs?.LC-SBC object (optional) Settings for the LC-SBC codec source.codecs?.LC-SBC.maxbitpool integer Maximum accepted bitpool value","title":"Configuration"},{"location":"plugins/BluetoothAudioPlugin/#interfaces","text":"This plugin implements the following interfaces: IBluetoothAudio::ISink ( IBluetoothAudio.h ) (version 1.0.0) (compliant format) IBluetoothAudio::ISource ( IBluetoothAudio.h ) (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/BluetoothAudioPlugin/#methods","text":"The following methods are provided by the BluetoothAudio plugin: BluetoothAudio Sink interface methods: Method Description sink::assign Assigns a Bluetooth sink device for audio playback sink::revoke Revokes a Bluetooth sink device from audio playback","title":"Methods"},{"location":"plugins/BluetoothAudioPlugin/#sinkassign-method","text":"Assigns a Bluetooth sink device for audio playback.","title":"sink::assign method"},{"location":"plugins/BluetoothAudioPlugin/#parameters","text":"Name Type Description params object ... params.address string Address of the bluetooth device to assign","title":"Parameters"},{"location":"plugins/BluetoothAudioPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors","text":"Message Description ERROR_BAD_REQUEST Device address value is invalid ERROR_ALREADY_CONNECTED A sink device is already assigned","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::assign\", \"params\": { \"address\": \"...\" } }","title":"Request"},{"location":"plugins/BluetoothAudioPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothAudioPlugin/#sinkrevoke-method","text":"Revokes a Bluetooth sink device from audio playback.","title":"sink::revoke method"},{"location":"plugins/BluetoothAudioPlugin/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/BluetoothAudioPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_1","text":"Message Description ERROR_ALREADY_RELEASED No device is currently assigned as sink","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::revoke\" }","title":"Request"},{"location":"plugins/BluetoothAudioPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothAudioPlugin/#properties","text":"The following properties are provided by the BluetoothAudio plugin: BluetoothAudio Sink interface properties: Property Description sink::state (read-only) Current state o the audio sink device sink::device (read-only) Bluetooth address of the audio sink device sink::type (read-only) Type of the audio sink device sink::latency Latency of the audio sink device sink::supportedcodecs (read-only) Audio codecs supported by the audio sink device sink::supporteddrms (read-only) DRM schemes supported by the audio sink device sink::codec (read-only) Properites of the currently used audio codec sink::drm (read-only) Properites of the currently used DRM scheme sink::stream (read-only) Properties of the currently transmitted audio stream BluetoothAudio Source interface properties: Property Description source::state (read-only) Current state of the source device source::device (read-only) Bluetooth address of the source device source::type (read-only) Type of the audio source device source::codec (read-only) Properites of the currently used codec source::drm (read-only) Properties of the currently used DRM scheme source::stream (read-only) Properites of the currently transmitted audio stream","title":"Properties"},{"location":"plugins/BluetoothAudioPlugin/#sinkstate-property","text":"Provides access to the current state o the audio sink device. This property is read-only .","title":"sink::state property"},{"location":"plugins/BluetoothAudioPlugin/#value","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_2","text":"Name Type Description result string Current state o the audio sink device (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned )","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::state\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unassigned\" }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sinkdevice-property","text":"Provides access to the bluetooth address of the audio sink device. This property is read-only .","title":"sink::device property"},{"location":"plugins/BluetoothAudioPlugin/#value_1","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_3","text":"Name Type Description result string Bluetooth address of the audio sink device","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_2","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not assigned","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::device\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sinktype-property","text":"Provides access to the type of the audio sink device. This property is read-only .","title":"sink::type property"},{"location":"plugins/BluetoothAudioPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_4","text":"Name Type Description result string Type of the audio sink device (must be one of the following: Amplifier, Headphone, Recorder, Speaker, Unknown )","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_3","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::type\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sinklatency-property","text":"Provides access to the latency of the audio sink device.","title":"sink::latency property"},{"location":"plugins/BluetoothAudioPlugin/#value_3","text":"Name Type Description (property) object Latency of the audio sink device (property).value integer Audio latency in milliseconds","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_5","text":"Name Type Description result integer Latency of the audio sink device","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_4","text":"Message Description ERROR_BAD_REQUEST Latency value is invalid","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::latency\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::latency\", \"params\": { \"value\": 20 } }","title":"Set Request"},{"location":"plugins/BluetoothAudioPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/BluetoothAudioPlugin/#sinksupportedcodecs-property","text":"Provides access to the audio codecs supported by the audio sink device. This property is read-only .","title":"sink::supportedcodecs property"},{"location":"plugins/BluetoothAudioPlugin/#value_4","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_6","text":"Name Type Description result array Audio codecs supported by the audio sink device result[#] string ... (must be one of the following: LC-SBC )","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_5","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::supportedcodecs\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"LC-SBC\" ] }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sinksupporteddrms-property","text":"Provides access to the DRM schemes supported by the audio sink device. This property is read-only .","title":"sink::supporteddrms property"},{"location":"plugins/BluetoothAudioPlugin/#value_5","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_7","text":"Name Type Description result array DRM schemes supported by the audio sink device result[#] string ... (must be one of the following: DTCP, SCMS-T )","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_6","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::supporteddrms\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"DTCP\" ] }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sinkcodec-property","text":"Provides access to the properites of the currently used audio codec. This property is read-only .","title":"sink::codec property"},{"location":"plugins/BluetoothAudioPlugin/#value_6","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_8","text":"Name Type Description result object Properites of the currently used audio codec result.codec string Audio codec used (must be one of the following: LC-SBC ) result.settings opaque object Codec-specific audio quality preset, compression profile, etc","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_7","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not configured","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::codec\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"LC-SBC\", \"settings\": {} } }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sinkdrm-property","text":"Provides access to the properites of the currently used DRM scheme. This property is read-only .","title":"sink::drm property"},{"location":"plugins/BluetoothAudioPlugin/#value_7","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_9","text":"Name Type Description result object Properites of the currently used DRM scheme result.drm string Content protection scheme used (must be one of the following: DTCP, SCMS-T ) result.settings opaque object DRM-specific content protection level, encoding rules, etc","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_8","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected or not yet configured","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_9","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::drm\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"drm\": \"DTCP\", \"settings\": {} } }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sinkstream-property","text":"Provides access to the properties of the currently transmitted audio stream. This property is read-only .","title":"sink::stream property"},{"location":"plugins/BluetoothAudioPlugin/#value_8","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_10","text":"Name Type Description result object Properties of the currently transmitted audio stream result.samplerate integer Sample rate in Hz result.bitrate integer Target bitrate in bits per second (eg. 320000) result.channels integer Number of audio channels result.resolution integer Sampling resolution in bits per sample result.isresampled boolean Indicates if the source stream is being resampled by the stack to match sink capabilities","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_9","text":"Message Description ERROR_ILLEGAL_STATE The sink device currently is not connected or not yet configured","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_10","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.sink::stream\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"samplerate\": 44100, \"bitrate\": 0, \"channels\": 2, \"resolution\": 16, \"isresampled\": false } }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sourcestate-property","text":"Provides access to the current state of the source device. This property is read-only .","title":"source::state property"},{"location":"plugins/BluetoothAudioPlugin/#value_9","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_11","text":"Name Type Description result string Current state of the source device (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned )","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#example_11","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::state\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unassigned\" }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sourcedevice-property","text":"Provides access to the bluetooth address of the source device. This property is read-only .","title":"source::device property"},{"location":"plugins/BluetoothAudioPlugin/#value_10","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_12","text":"Name Type Description result string Bluetooth address of the source device","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_10","text":"Message Description ERROR_ILLEGAL_STATE No source device is currently connected","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_12","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::device\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sourcetype-property","text":"Provides access to the type of the audio source device. This property is read-only .","title":"source::type property"},{"location":"plugins/BluetoothAudioPlugin/#value_11","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_13","text":"Name Type Description result string Type of the audio source device (must be one of the following: Microphone, Mixer, Player, Tuner, Unknown )","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_11","text":"Message Description ERROR_ILLEGAL_STATE No source device is currently connected","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_13","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::type\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sourcecodec-property","text":"Provides access to the properites of the currently used codec. This property is read-only .","title":"source::codec property"},{"location":"plugins/BluetoothAudioPlugin/#value_12","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_14","text":"Name Type Description result object Properites of the currently used codec result.codec string Audio codec used (must be one of the following: LC-SBC ) result.settings opaque object Codec-specific audio quality preset, compression profile, etc","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_12","text":"Message Description ERROR_ILLEGAL_STATE No source device is not connected or sink is not yet configured","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_14","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::codec\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"LC-SBC\", \"settings\": {} } }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sourcedrm-property","text":"Provides access to the properties of the currently used DRM scheme. This property is read-only .","title":"source::drm property"},{"location":"plugins/BluetoothAudioPlugin/#value_13","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_15","text":"Name Type Description result object Properties of the currently used DRM scheme result.drm string Content protection scheme used (must be one of the following: DTCP, SCMS-T ) result.settings opaque object DRM-specific content protection level, encoding rules, etc","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_13","text":"Message Description ERROR_ILLEGAL_STATE No source device is connected or sink is not yet configured","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_15","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::drm\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"drm\": \"DTCP\", \"settings\": {} } }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#sourcestream-property","text":"Provides access to the properites of the currently transmitted audio stream. This property is read-only .","title":"source::stream property"},{"location":"plugins/BluetoothAudioPlugin/#value_14","text":"","title":"Value"},{"location":"plugins/BluetoothAudioPlugin/#result_16","text":"Name Type Description result object Properites of the currently transmitted audio stream result.samplerate integer Sample rate in Hz result.bitrate integer Target bitrate in bits per second (eg. 320000) result.channels integer Number of audio channels result.resolution integer Sampling resolution in bits per sample result.isresampled boolean Indicates if the source stream is being resampled by the stack to match sink capabilities","title":"Result"},{"location":"plugins/BluetoothAudioPlugin/#errors_14","text":"Message Description ERROR_ILLEGAL_STATE No source device is connected or sink is not yet configured","title":"Errors"},{"location":"plugins/BluetoothAudioPlugin/#example_16","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#get-request_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.source::stream\" }","title":"Get Request"},{"location":"plugins/BluetoothAudioPlugin/#get-response_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"samplerate\": 44100, \"bitrate\": 0, \"channels\": 2, \"resolution\": 16, \"isresampled\": false } }","title":"Get Response"},{"location":"plugins/BluetoothAudioPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothAudio plugin: BluetoothAudio Sink interface events: Notification Description sink::statechanged Signals audio sink state change BluetoothAudio Source interface events: Notification Description source::statechanged Signals audio source state change","title":"Notifications"},{"location":"plugins/BluetoothAudioPlugin/#sinkstatechanged-notification","text":"Signals audio sink state change.","title":"sink::statechanged notification"},{"location":"plugins/BluetoothAudioPlugin/#parameters_2","text":"Name Type Description params object ... params.state string Changed BluetoothAudio State (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned )","title":"Parameters"},{"location":"plugins/BluetoothAudioPlugin/#example_17","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.register\", \"params\": { \"event\": \"sink::statechanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothAudioPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.sink::statechanged\", \"params\": { \"state\": \"Unassigned\" } }","title":"Message"},{"location":"plugins/BluetoothAudioPlugin/#sourcestatechanged-notification","text":"Signals audio source state change.","title":"source::statechanged notification"},{"location":"plugins/BluetoothAudioPlugin/#parameters_3","text":"Name Type Description params object ... params.state string Changed BluetoothAudio State (must be one of the following: Connected, ConnectedBad, ConnectedRestricted, Connecting, Disconnected, Ready, Streaming, Unassigned )","title":"Parameters"},{"location":"plugins/BluetoothAudioPlugin/#example_18","text":"","title":"Example"},{"location":"plugins/BluetoothAudioPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothAudio.1.register\", \"params\": { \"event\": \"source::statechanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothAudioPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.source::statechanged\", \"params\": { \"state\": \"Unassigned\" } }","title":"Message"},{"location":"plugins/BluetoothControlPlugin/","text":"Bluetooth Control Plugin Version: 1.0 Status: BluetoothControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the BluetoothControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Bluetooth Control plugin allows Bluetooth device administration. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothControl ) classname string Class name: BluetoothControl locator string Library name: libThunderBluetoothControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.interface integer (optional) ID of the local Bluetooth interface configuration?.autopasskeyconfirm boolean (optional) Enable automatic passkey confirmation (may pose a security risk) configuration?.persistmac boolean (optional) Enable persistent Bluetooth address configuration?.name String (optional) Name of the local Bluetooth interface configuration?.shortname String (optional) Shortened name of the local Bluetooth interface configuration?.class integer (optional) Class of device value of the local Bluetooth interface configuration?.uuids array (optional) UUIDs to include in the outbound EIR/AD blocks configuration?.uuids[#] object (optional) (UUID entry) configuration?.uuids[#]?.callsign string (optional) Callsign of the plugin providing the service configuration?.uuids[#]?.uuid string (optional) UUID value (short or long) configuration?.uuids[#]?.service integer (optional) Corresponding service bit in Class of Device value Interfaces This plugin implements the following interfaces: BluetoothControl.json (version 1.0.0) (compliant format) Methods The following methods are provided by the BluetoothControl plugin: BluetoothControl interface methods: Method Description setdiscoverable Starts advertising (or inquiry scanning), making the local interface visible by nearby Bluetooth devices stopdiscoverable Stops advertising (or inquiry scanning) operation scan Starts active discovery (or inquiry) of nearby Bluetooth devices stopscanning Stops discovery (or inquiry) operation connect Connects to a Bluetooth device disconnect Disconnects from a connected Bluetooth device pair Pairs a Bluetooth device unpair Unpairs a paired Bluetooth device abortpairing Aborts pairing operation providepincode Provides a PIN-code for authentication during a legacy pairing process providepasskey Provides a passkey for authentication during a pairing process confirmpasskey Confirms a passkey for authentication during a pairing process forget Forgets a known Bluetooth device getdevicelist Retrieves a list of known remote Bluetooth devices getdeviceinfo Retrieves detailed information about a known Bluetooth device setdiscoverable method Starts advertising (or inquiry scanning), making the local interface visible by nearby Bluetooth devices. Description Please note that discoverable state in Limited mode for Bluetooth Classic is bounded to 30 seconds only. Also see: discoverablestarted , discoverablecomplete Parameters Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) params?.mode string (optional) Discoverable mode (default: General ) params?.connectable boolean (optional) Selects connectable advertising (true, LowEnergy only) (default: False ) params?.duration integer (optional) Duration of the discoverable operation (in seconds) (default: 30 ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed set discoverable state ERROR_INPROGRESS Discoverable state of selected type is already in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.setdiscoverable\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"connectable\": false, \"duration\": 30 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } stopdiscoverable method Stops advertising (or inquiry scanning) operation. Also see: discoverablecomplete Parameters Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to top scanning ERROR_ILLEGAL_STATE Adapter is in not discoverable state of selected type Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopdiscoverable\", \"params\": { \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } scan method Starts active discovery (or inquiry) of nearby Bluetooth devices. Also see: scanstarted , scancomplete Parameters Name Type Description params object ... params.type string Scan type (default: LowEnergy ) params?.mode string (optional) Scan mode (default: General ) params?.timeout integer (deprecated) (optional) Duration of the scan (in seconds) (default: 10 ) params?.duration integer (optional) Duration of the scan (in seconds) (default: 10 ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to scan ERROR_INPROGRESS Scan of selected type is already in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.scan\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"duration\": 60 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } stopscanning method Stops discovery (or inquiry) operation. Also see: scancomplete Parameters Name Type Description params object ... params?.type string (optional) Scan type (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to top scanning ERROR_ILLEGAL_STATE Scan of selected type is not in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopscanning\", \"params\": { \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } connect method Connects to a Bluetooth device. Description This call also enables automatic reconnection of the device. If the device is currently not available it will be automatically connected as soon it becomes available. Also see: devicestatechange Parameters Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not paired ERROR_ALREADY_CONNECTED Device already connected ERROR_GENERAL Failed to connect the device ERROR_REQUEST_SUBMITTED Device has not been connected but will be automatically connected when available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.connect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } disconnect method Disconnects from a connected Bluetooth device. Description This call also disables automatic reconnection. If the device is currently not connected it will not be reconnected when it becomes available. Also see: devicestatechange Parameters Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_RELEASED Device not connected ERROR_REQUEST_SUBMITTED Device is currently not connected but it's autoconnection mode has been disabled Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.disconnect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } pair method Pairs a Bluetooth device. Description PIN-code or passkey requests may appear during the pairing process. The process can be cancelled any time by calling the abortpairing method. Also see: devicestatechange , pincoderequest , passkeyrequest , passkeyconfirmrequest Parameters Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) params?.capabilities string (optional) Pairing capabilities (must be one of the following: DisplayOnly, DisplayYesNo, KeyboardDisplay, KeyboardOnly, NoInputNoOutput ) (default: NoInputNoOutput ) params?.timeout integer (optional) Maximum time allowed for the pairing process to complete (in seconds) (default: 20 ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_CONNECTED Device already paired ERROR_GENERAL Failed to pair the device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\", \"capabilities\": \"NoInputNoOutput\", \"timeout\": 60 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } unpair method Unpairs a paired Bluetooth device. Also see: devicestatechange Parameters Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_RELEASED Device not paired Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.unpair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } abortpairing method Aborts pairing operation. Also see: devicestatechange Parameters Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.abortpairing\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } providepincode method Provides a PIN-code for authentication during a legacy pairing process. Description This method should be called upon receiving a pincoderequest event during a legacy pairing process. If the specified PIN-code is incorrect the pairing process will be aborted. Also see: devicestatechange , pincoderequest Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret string A PIN-code string typically consisting of (but not limited to) four decimal digits Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing or PIN code has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.providepincode\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": \"0000\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } providepasskey method Provides a passkey for authentication during a pairing process. Description This method should be called upon receiving a passkeyrequest event during pairing process. If the specified passkey is incorrect or empty the pairing process will be aborted. Also see: devicestatechange , passkeyrequest Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret integer A six-digit decimal number passkey Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing or a passkey has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.providepasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": 123456 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } confirmpasskey method Confirms a passkey for authentication during a pairing process. Description This method should be called upon receiving a passkeyconfirmationrequest event during a pairing process. If the confirmation is negative the pairing process will be aborted. Also see: devicestatechange , passkeyconfirmrequest Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.iscorrect boolean Specifies if the passkey sent in passkeyconfirmrequest event is correct (true) or incorrect (false) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device is currently not pairing or passkey confirmation has not been requested Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.confirmpasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"iscorrect\": true } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } forget method Forgets a known Bluetooth device. Description The device will no longer be listed and its status tracked. If the device is connected and/or paired it will be disconnected and unpaired. Also see: devicestatechange Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.forget\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } getdevicelist method Retrieves a list of known remote Bluetooth devices. Parameters This method takes no parameters. Result Name Type Description result array List of devices result[#] object (device entry) result[#].address string Bluetooth address result[#].type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.getdevicelist\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } ] } getdeviceinfo method Retrieves detailed information about a known Bluetooth device. Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Result Name Type Description result object ... result.address string Bluetooth address result.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) result?.name string (optional) Name of the device result?.class integer (optional) Class of device result?.appearance integer (optional) Appearance value result?.services array (optional) List of supported services result?.services[#] string (optional) Service UUID result.connected boolean Indicates if the device is currently connected result.paired boolean Indicates if the device is currently paired Errors Message Description ERROR_UNKNOWN_KEY Unknown device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.getdeviceinfo\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"name\": \"Thunder Bluetooth Speaker\", \"class\": 2360324, \"appearance\": 2113, \"services\": [ \"110a\" ], \"connected\": true, \"paired\": true } } Properties The following properties are provided by the BluetoothControl plugin: BluetoothControl interface properties: Property Description adapters (read-only) List of local Bluetooth adapters adapter (read-only) Local Bluetooth adapter information devices deprecated (read-only) List of known remote Bluetooth devices device deprecated (read-only) Remote Bluetooth device information adapters property Provides access to the list of local Bluetooth adapters. This property is read-only . Value Result Name Type Description result array List of local Bluetooth adapters result[#] integer Adapter ID Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapters\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0 ] } adapter property Provides access to the local Bluetooth adapter information. This property is read-only . Value The adapter id argument shall be passed as the index to the property, e.g. BluetoothControl.1.adapter@<adapter id> . Result Name Type Description result object Local Bluetooth adapter information result.id integer Interface ID number result.interface string Interface name result.address string Bluetooth address result.type string Adapter type (default: Dual ) result.version integer Version result?.manufacturer integer (optional) Manufacturer company identifer result?.class integer (optional) Class of device result?.name string (optional) Name result?.shortname string (optional) Short name Errors Message Description ERROR_UNKNOWN_KEY Unknown adapter device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapter@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": 0, \"interface\": \"hci0\", \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Dual\", \"version\": 8, \"manufacturer\": 15, \"class\": 1060, \"name\": \"Thunder Bluetooth Controller\", \"shortname\": \"Thunder\" } } devices property Provides access to the list of known remote Bluetooth devices. This property is read-only . devices is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Result Name Type Description result array List of known remote Bluetooth devices result[#] string Bluetooth address Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.devices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"81:6F:B0:91:9B:FE\" ] } device property Provides access to the remote Bluetooth device information. This property is read-only . device is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value The device address argument shall be passed as the index to the property, e.g. BluetoothControl.1.device@<device address> . Result Name Type Description result object Remote Bluetooth device information result.address string Bluetooth address result.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) result?.name string (optional) Name of the device result?.class integer (optional) Class of device result?.appearance integer (optional) Appearance value result?.services array (optional) List of supported services result?.services[#] string (optional) Service UUID result.connected boolean Indicates if the device is currently connected result.paired boolean Indicates if the device is currently paired Errors Message Description ERROR_UNKNOWN_KEY Unknown device Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.device@81:6F:B0:91:9B:FE\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"name\": \"Thunder Bluetooth Speaker\", \"class\": 2360324, \"appearance\": 2113, \"services\": [ \"110a\" ], \"connected\": true, \"paired\": true } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothControl plugin: BluetoothControl interface events: Notification Description discoverablestarted Notifies of entering the discoverable state discoverablecomplete Notifies of leaving the discoverable state scanstarted Notifies of scan start scancomplete Notifies of scan completion devicestatechange Notifies of device state changes pincoderequest Notifies of a PIN code request passkeyrequest Notifies of a passkey request passkeyconfirmrequest Notifies of a passkey confirmation request discoverablestarted notification Notifies of entering the discoverable state. Description Register to this event to be notified about entering the discoverable state If applicable, this notification may be sent out during registration, reflecting the current status. Parameters Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) params.mode string Discoverable mode (default: General ) params?.connectable boolean (optional) Indicates connectable advertising (true, LowEnergy only) (default: False ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"discoverablestarted\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.discoverablestarted\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"connectable\": false } } discoverablecomplete notification Notifies of leaving the discoverable state. Description Register to this event to be notified about leaving the discoverable state Parameters Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"discoverablecomplete\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.discoverablecomplete\", \"params\": { \"type\": \"LowEnergy\" } } scanstarted notification Notifies of scan start. Description Register to this event to be notified about device scan start If applicable, this notification may be sent out during registration, reflecting the current status. Parameters Name Type Description params object ... params.type string Scan type (default: LowEnergy ) params?.mode string (optional) Scan mode (default: General ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"scanstarted\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.scanstarted\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\" } } scancomplete notification Notifies of scan completion. Description Register to this event to be notified about device scan completion Parameters Name Type Description params object ... params.type string Scan type (default: LowEnergy ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"scancomplete\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.scancomplete\", \"params\": { \"type\": \"LowEnergy\" } } devicestatechange notification Notifies of device state changes. Description Register to this event to be notified about device state changes If applicable, this notification may be sent out during registration, reflecting the current status. Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) params.state string Device state params?.disconnectreason string (optional) Disconnection reason in case of Disconnected event The device type argument will be passed within the designator, e.g. LowEnergy.client.devicestatechange . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"devicestatechange\", \"id\": \"LowEnergy.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"LowEnergy.client.devicestatechange\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\", \"state\": \"Disconnected\", \"disconnectreason\": \"ConnectionTimeout\" } } pincoderequest notification Notifies of a PIN code request. Description Register to this event to be notified about PIN code requests during a legacy pairing process. Upon receiving this event the client is required to respond with a providepincode call in order to complete the pairing procedure. The PIN code value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Note that this event will never be send for a Bluetooth LowEnergy device Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"pincoderequest\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.pincoderequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\" } } passkeyrequest notification Notifies of a passkey request. Description Register to this event to be notified about passkey requests that may be required during a pairing process. Upon receiving this event the client is required to respond with a providepasskey call in order to complete the pairing procedure. The passkey value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"passkeyrequest\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.passkeyrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\" } } passkeyconfirmrequest notification Notifies of a passkey confirmation request. Description Register to this event to be notified about passkey confirmation requests that may required during a pairing process. Upon receiving this event the client is required to respond with a passkeyconfirm call in order to complete the pairing procedure. The passkey confirmation would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted Parameters Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret integer A six-digit decimal number passkey sent by the remote device for confirmation; may be 0 for a simple accept/forbid paring request Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"passkeyconfirmrequest\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.passkeyconfirmrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": 123456 } }","title":"Bluetooth Control Plugin"},{"location":"plugins/BluetoothControlPlugin/#bluetooth-control-plugin","text":"Version: 1.0 Status: BluetoothControl plugin for Thunder framework.","title":"Bluetooth Control Plugin"},{"location":"plugins/BluetoothControlPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/BluetoothControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/BluetoothControlPlugin/#scope","text":"This document describes purpose and functionality of the BluetoothControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/BluetoothControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/BluetoothControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/BluetoothControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/BluetoothControlPlugin/#description","text":"The Bluetooth Control plugin allows Bluetooth device administration. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothControl ) classname string Class name: BluetoothControl locator string Library name: libThunderBluetoothControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.interface integer (optional) ID of the local Bluetooth interface configuration?.autopasskeyconfirm boolean (optional) Enable automatic passkey confirmation (may pose a security risk) configuration?.persistmac boolean (optional) Enable persistent Bluetooth address configuration?.name String (optional) Name of the local Bluetooth interface configuration?.shortname String (optional) Shortened name of the local Bluetooth interface configuration?.class integer (optional) Class of device value of the local Bluetooth interface configuration?.uuids array (optional) UUIDs to include in the outbound EIR/AD blocks configuration?.uuids[#] object (optional) (UUID entry) configuration?.uuids[#]?.callsign string (optional) Callsign of the plugin providing the service configuration?.uuids[#]?.uuid string (optional) UUID value (short or long) configuration?.uuids[#]?.service integer (optional) Corresponding service bit in Class of Device value","title":"Configuration"},{"location":"plugins/BluetoothControlPlugin/#interfaces","text":"This plugin implements the following interfaces: BluetoothControl.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/BluetoothControlPlugin/#methods","text":"The following methods are provided by the BluetoothControl plugin: BluetoothControl interface methods: Method Description setdiscoverable Starts advertising (or inquiry scanning), making the local interface visible by nearby Bluetooth devices stopdiscoverable Stops advertising (or inquiry scanning) operation scan Starts active discovery (or inquiry) of nearby Bluetooth devices stopscanning Stops discovery (or inquiry) operation connect Connects to a Bluetooth device disconnect Disconnects from a connected Bluetooth device pair Pairs a Bluetooth device unpair Unpairs a paired Bluetooth device abortpairing Aborts pairing operation providepincode Provides a PIN-code for authentication during a legacy pairing process providepasskey Provides a passkey for authentication during a pairing process confirmpasskey Confirms a passkey for authentication during a pairing process forget Forgets a known Bluetooth device getdevicelist Retrieves a list of known remote Bluetooth devices getdeviceinfo Retrieves detailed information about a known Bluetooth device","title":"Methods"},{"location":"plugins/BluetoothControlPlugin/#setdiscoverable-method","text":"Starts advertising (or inquiry scanning), making the local interface visible by nearby Bluetooth devices.","title":"setdiscoverable method"},{"location":"plugins/BluetoothControlPlugin/#description_1","text":"Please note that discoverable state in Limited mode for Bluetooth Classic is bounded to 30 seconds only. Also see: discoverablestarted , discoverablecomplete","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters","text":"Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) params?.mode string (optional) Discoverable mode (default: General ) params?.connectable boolean (optional) Selects connectable advertising (true, LowEnergy only) (default: False ) params?.duration integer (optional) Duration of the discoverable operation (in seconds) (default: 30 )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors","text":"Message Description ERROR_GENERAL Failed set discoverable state ERROR_INPROGRESS Discoverable state of selected type is already in progress","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.setdiscoverable\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"connectable\": false, \"duration\": 30 } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#stopdiscoverable-method","text":"Stops advertising (or inquiry scanning) operation. Also see: discoverablecomplete","title":"stopdiscoverable method"},{"location":"plugins/BluetoothControlPlugin/#parameters_1","text":"Name Type Description params object ... params.type string Discoverable type (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_1","text":"Message Description ERROR_GENERAL Failed to top scanning ERROR_ILLEGAL_STATE Adapter is in not discoverable state of selected type","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopdiscoverable\", \"params\": { \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#scan-method","text":"Starts active discovery (or inquiry) of nearby Bluetooth devices. Also see: scanstarted , scancomplete","title":"scan method"},{"location":"plugins/BluetoothControlPlugin/#parameters_2","text":"Name Type Description params object ... params.type string Scan type (default: LowEnergy ) params?.mode string (optional) Scan mode (default: General ) params?.timeout integer (deprecated) (optional) Duration of the scan (in seconds) (default: 10 ) params?.duration integer (optional) Duration of the scan (in seconds) (default: 10 )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_2","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_2","text":"Message Description ERROR_GENERAL Failed to scan ERROR_INPROGRESS Scan of selected type is already in progress","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.scan\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"duration\": 60 } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#stopscanning-method","text":"Stops discovery (or inquiry) operation. Also see: scancomplete","title":"stopscanning method"},{"location":"plugins/BluetoothControlPlugin/#parameters_3","text":"Name Type Description params object ... params?.type string (optional) Scan type (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_3","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_3","text":"Message Description ERROR_GENERAL Failed to top scanning ERROR_ILLEGAL_STATE Scan of selected type is not in progress","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.stopscanning\", \"params\": { \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#connect-method","text":"Connects to a Bluetooth device.","title":"connect method"},{"location":"plugins/BluetoothControlPlugin/#description_2","text":"This call also enables automatic reconnection of the device. If the device is currently not available it will be automatically connected as soon it becomes available. Also see: devicestatechange","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_4","text":"Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_4","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_4","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not paired ERROR_ALREADY_CONNECTED Device already connected ERROR_GENERAL Failed to connect the device ERROR_REQUEST_SUBMITTED Device has not been connected but will be automatically connected when available","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.connect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#disconnect-method","text":"Disconnects from a connected Bluetooth device.","title":"disconnect method"},{"location":"plugins/BluetoothControlPlugin/#description_3","text":"This call also disables automatic reconnection. If the device is currently not connected it will not be reconnected when it becomes available. Also see: devicestatechange","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_5","text":"Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_5","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_5","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_RELEASED Device not connected ERROR_REQUEST_SUBMITTED Device is currently not connected but it's autoconnection mode has been disabled","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.disconnect\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#pair-method","text":"Pairs a Bluetooth device.","title":"pair method"},{"location":"plugins/BluetoothControlPlugin/#description_4","text":"PIN-code or passkey requests may appear during the pairing process. The process can be cancelled any time by calling the abortpairing method. Also see: devicestatechange , pincoderequest , passkeyrequest , passkeyconfirmrequest","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_6","text":"Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) params?.capabilities string (optional) Pairing capabilities (must be one of the following: DisplayOnly, DisplayYesNo, KeyboardDisplay, KeyboardOnly, NoInputNoOutput ) (default: NoInputNoOutput ) params?.timeout integer (optional) Maximum time allowed for the pairing process to complete (in seconds) (default: 20 )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_6","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_6","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_CONNECTED Device already paired ERROR_GENERAL Failed to pair the device","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.pair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\", \"capabilities\": \"NoInputNoOutput\", \"timeout\": 60 } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#unpair-method","text":"Unpairs a paired Bluetooth device. Also see: devicestatechange","title":"unpair method"},{"location":"plugins/BluetoothControlPlugin/#parameters_7","text":"Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_7","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_7","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ALREADY_RELEASED Device not paired","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.unpair\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#abortpairing-method","text":"Aborts pairing operation. Also see: devicestatechange","title":"abortpairing method"},{"location":"plugins/BluetoothControlPlugin/#parameters_8","text":"Name Type Description params object ... params.address string Bluetooth address params?.type string (optional) Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_8","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_8","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.abortpairing\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#providepincode-method","text":"Provides a PIN-code for authentication during a legacy pairing process.","title":"providepincode method"},{"location":"plugins/BluetoothControlPlugin/#description_5","text":"This method should be called upon receiving a pincoderequest event during a legacy pairing process. If the specified PIN-code is incorrect the pairing process will be aborted. Also see: devicestatechange , pincoderequest","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_9","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret string A PIN-code string typically consisting of (but not limited to) four decimal digits","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_9","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_9","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing or PIN code has not been requested","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_9","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.providepincode\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": \"0000\" } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#providepasskey-method","text":"Provides a passkey for authentication during a pairing process.","title":"providepasskey method"},{"location":"plugins/BluetoothControlPlugin/#description_6","text":"This method should be called upon receiving a passkeyrequest event during pairing process. If the specified passkey is incorrect or empty the pairing process will be aborted. Also see: devicestatechange , passkeyrequest","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_10","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret integer A six-digit decimal number passkey","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_10","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_10","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device not currently pairing or a passkey has not been requested","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_10","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.providepasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": 123456 } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#confirmpasskey-method","text":"Confirms a passkey for authentication during a pairing process.","title":"confirmpasskey method"},{"location":"plugins/BluetoothControlPlugin/#description_7","text":"This method should be called upon receiving a passkeyconfirmationrequest event during a pairing process. If the confirmation is negative the pairing process will be aborted. Also see: devicestatechange , passkeyconfirmrequest","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_11","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.iscorrect boolean Specifies if the passkey sent in passkeyconfirmrequest event is correct (true) or incorrect (false)","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_11","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_11","text":"Message Description ERROR_UNKNOWN_KEY Unknown device ERROR_ILLEGAL_STATE Device is currently not pairing or passkey confirmation has not been requested","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_11","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.confirmpasskey\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"iscorrect\": true } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#forget-method","text":"Forgets a known Bluetooth device.","title":"forget method"},{"location":"plugins/BluetoothControlPlugin/#description_8","text":"The device will no longer be listed and its status tracked. If the device is connected and/or paired it will be disconnected and unpaired. Also see: devicestatechange","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_12","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_12","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_12","text":"Message Description ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_12","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.forget\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#getdevicelist-method","text":"Retrieves a list of known remote Bluetooth devices.","title":"getdevicelist method"},{"location":"plugins/BluetoothControlPlugin/#parameters_13","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_13","text":"Name Type Description result array List of devices result[#] object (device entry) result[#].address string Bluetooth address result[#].type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#example_13","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.getdevicelist\" }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } ] }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#getdeviceinfo-method","text":"Retrieves detailed information about a known Bluetooth device.","title":"getdeviceinfo method"},{"location":"plugins/BluetoothControlPlugin/#parameters_14","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#result_14","text":"Name Type Description result object ... result.address string Bluetooth address result.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) result?.name string (optional) Name of the device result?.class integer (optional) Class of device result?.appearance integer (optional) Appearance value result?.services array (optional) List of supported services result?.services[#] string (optional) Service UUID result.connected boolean Indicates if the device is currently connected result.paired boolean Indicates if the device is currently paired","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_13","text":"Message Description ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_14","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#request_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.getdeviceinfo\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\" } }","title":"Request"},{"location":"plugins/BluetoothControlPlugin/#response_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"name\": \"Thunder Bluetooth Speaker\", \"class\": 2360324, \"appearance\": 2113, \"services\": [ \"110a\" ], \"connected\": true, \"paired\": true } }","title":"Response"},{"location":"plugins/BluetoothControlPlugin/#properties","text":"The following properties are provided by the BluetoothControl plugin: BluetoothControl interface properties: Property Description adapters (read-only) List of local Bluetooth adapters adapter (read-only) Local Bluetooth adapter information devices deprecated (read-only) List of known remote Bluetooth devices device deprecated (read-only) Remote Bluetooth device information","title":"Properties"},{"location":"plugins/BluetoothControlPlugin/#adapters-property","text":"Provides access to the list of local Bluetooth adapters. This property is read-only .","title":"adapters property"},{"location":"plugins/BluetoothControlPlugin/#value","text":"","title":"Value"},{"location":"plugins/BluetoothControlPlugin/#result_15","text":"Name Type Description result array List of local Bluetooth adapters result[#] integer Adapter ID","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#example_15","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapters\" }","title":"Get Request"},{"location":"plugins/BluetoothControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0 ] }","title":"Get Response"},{"location":"plugins/BluetoothControlPlugin/#adapter-property","text":"Provides access to the local Bluetooth adapter information. This property is read-only .","title":"adapter property"},{"location":"plugins/BluetoothControlPlugin/#value_1","text":"The adapter id argument shall be passed as the index to the property, e.g. BluetoothControl.1.adapter@<adapter id> .","title":"Value"},{"location":"plugins/BluetoothControlPlugin/#result_16","text":"Name Type Description result object Local Bluetooth adapter information result.id integer Interface ID number result.interface string Interface name result.address string Bluetooth address result.type string Adapter type (default: Dual ) result.version integer Version result?.manufacturer integer (optional) Manufacturer company identifer result?.class integer (optional) Class of device result?.name string (optional) Name result?.shortname string (optional) Short name","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_14","text":"Message Description ERROR_UNKNOWN_KEY Unknown adapter device","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_16","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.adapter@0\" }","title":"Get Request"},{"location":"plugins/BluetoothControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"id\": 0, \"interface\": \"hci0\", \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Dual\", \"version\": 8, \"manufacturer\": 15, \"class\": 1060, \"name\": \"Thunder Bluetooth Controller\", \"shortname\": \"Thunder\" } }","title":"Get Response"},{"location":"plugins/BluetoothControlPlugin/#devices-property","text":"Provides access to the list of known remote Bluetooth devices. This property is read-only . devices is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"devices property"},{"location":"plugins/BluetoothControlPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/BluetoothControlPlugin/#result_17","text":"Name Type Description result array List of known remote Bluetooth devices result[#] string Bluetooth address","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#example_17","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.devices\" }","title":"Get Request"},{"location":"plugins/BluetoothControlPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"81:6F:B0:91:9B:FE\" ] }","title":"Get Response"},{"location":"plugins/BluetoothControlPlugin/#device-property","text":"Provides access to the remote Bluetooth device information. This property is read-only . device is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"device property"},{"location":"plugins/BluetoothControlPlugin/#value_3","text":"The device address argument shall be passed as the index to the property, e.g. BluetoothControl.1.device@<device address> .","title":"Value"},{"location":"plugins/BluetoothControlPlugin/#result_18","text":"Name Type Description result object Remote Bluetooth device information result.address string Bluetooth address result.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) result?.name string (optional) Name of the device result?.class integer (optional) Class of device result?.appearance integer (optional) Appearance value result?.services array (optional) List of supported services result?.services[#] string (optional) Service UUID result.connected boolean Indicates if the device is currently connected result.paired boolean Indicates if the device is currently paired","title":"Result"},{"location":"plugins/BluetoothControlPlugin/#errors_15","text":"Message Description ERROR_UNKNOWN_KEY Unknown device","title":"Errors"},{"location":"plugins/BluetoothControlPlugin/#example_18","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.device@81:6F:B0:91:9B:FE\" }","title":"Get Request"},{"location":"plugins/BluetoothControlPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"name\": \"Thunder Bluetooth Speaker\", \"class\": 2360324, \"appearance\": 2113, \"services\": [ \"110a\" ], \"connected\": true, \"paired\": true } }","title":"Get Response"},{"location":"plugins/BluetoothControlPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothControl plugin: BluetoothControl interface events: Notification Description discoverablestarted Notifies of entering the discoverable state discoverablecomplete Notifies of leaving the discoverable state scanstarted Notifies of scan start scancomplete Notifies of scan completion devicestatechange Notifies of device state changes pincoderequest Notifies of a PIN code request passkeyrequest Notifies of a passkey request passkeyconfirmrequest Notifies of a passkey confirmation request","title":"Notifications"},{"location":"plugins/BluetoothControlPlugin/#discoverablestarted-notification","text":"Notifies of entering the discoverable state.","title":"discoverablestarted notification"},{"location":"plugins/BluetoothControlPlugin/#description_9","text":"Register to this event to be notified about entering the discoverable state If applicable, this notification may be sent out during registration, reflecting the current status.","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_15","text":"Name Type Description params object ... params.type string Discoverable type (default: LowEnergy ) params.mode string Discoverable mode (default: General ) params?.connectable boolean (optional) Indicates connectable advertising (true, LowEnergy only) (default: False )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#example_19","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"discoverablestarted\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothControlPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.discoverablestarted\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\", \"connectable\": false } }","title":"Message"},{"location":"plugins/BluetoothControlPlugin/#discoverablecomplete-notification","text":"Notifies of leaving the discoverable state.","title":"discoverablecomplete notification"},{"location":"plugins/BluetoothControlPlugin/#description_10","text":"Register to this event to be notified about leaving the discoverable state","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_16","text":"Name Type Description params object ... params.type string Discoverable type (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#example_20","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"discoverablecomplete\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothControlPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.discoverablecomplete\", \"params\": { \"type\": \"LowEnergy\" } }","title":"Message"},{"location":"plugins/BluetoothControlPlugin/#scanstarted-notification","text":"Notifies of scan start.","title":"scanstarted notification"},{"location":"plugins/BluetoothControlPlugin/#description_11","text":"Register to this event to be notified about device scan start If applicable, this notification may be sent out during registration, reflecting the current status.","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_17","text":"Name Type Description params object ... params.type string Scan type (default: LowEnergy ) params?.mode string (optional) Scan mode (default: General )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#example_21","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"scanstarted\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothControlPlugin/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.scanstarted\", \"params\": { \"type\": \"LowEnergy\", \"mode\": \"General\" } }","title":"Message"},{"location":"plugins/BluetoothControlPlugin/#scancomplete-notification","text":"Notifies of scan completion.","title":"scancomplete notification"},{"location":"plugins/BluetoothControlPlugin/#description_12","text":"Register to this event to be notified about device scan completion","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_18","text":"Name Type Description params object ... params.type string Scan type (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#example_22","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#registration_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"scancomplete\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothControlPlugin/#message_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.scancomplete\", \"params\": { \"type\": \"LowEnergy\" } }","title":"Message"},{"location":"plugins/BluetoothControlPlugin/#devicestatechange-notification","text":"Notifies of device state changes.","title":"devicestatechange notification"},{"location":"plugins/BluetoothControlPlugin/#description_13","text":"Register to this event to be notified about device state changes If applicable, this notification may be sent out during registration, reflecting the current status.","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_19","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy ) params.state string Device state params?.disconnectreason string (optional) Disconnection reason in case of Disconnected event The device type argument will be passed within the designator, e.g. LowEnergy.client.devicestatechange .","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#example_23","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#registration_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"devicestatechange\", \"id\": \"LowEnergy.client\" } }","title":"Registration"},{"location":"plugins/BluetoothControlPlugin/#message_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"LowEnergy.client.devicestatechange\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"LowEnergy\", \"state\": \"Disconnected\", \"disconnectreason\": \"ConnectionTimeout\" } }","title":"Message"},{"location":"plugins/BluetoothControlPlugin/#pincoderequest-notification","text":"Notifies of a PIN code request.","title":"pincoderequest notification"},{"location":"plugins/BluetoothControlPlugin/#description_14","text":"Register to this event to be notified about PIN code requests during a legacy pairing process. Upon receiving this event the client is required to respond with a providepincode call in order to complete the pairing procedure. The PIN code value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted. Note that this event will never be send for a Bluetooth LowEnergy device","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_20","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#example_24","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#registration_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"pincoderequest\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothControlPlugin/#message_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.pincoderequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\" } }","title":"Message"},{"location":"plugins/BluetoothControlPlugin/#passkeyrequest-notification","text":"Notifies of a passkey request.","title":"passkeyrequest notification"},{"location":"plugins/BluetoothControlPlugin/#description_15","text":"Register to this event to be notified about passkey requests that may be required during a pairing process. Upon receiving this event the client is required to respond with a providepasskey call in order to complete the pairing procedure. The passkey value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_21","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: LowEnergy )","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#example_25","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#registration_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"passkeyrequest\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothControlPlugin/#message_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.passkeyrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\" } }","title":"Message"},{"location":"plugins/BluetoothControlPlugin/#passkeyconfirmrequest-notification","text":"Notifies of a passkey confirmation request.","title":"passkeyconfirmrequest notification"},{"location":"plugins/BluetoothControlPlugin/#description_16","text":"Register to this event to be notified about passkey confirmation requests that may required during a pairing process. Upon receiving this event the client is required to respond with a passkeyconfirm call in order to complete the pairing procedure. The passkey confirmation would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted","title":"Description"},{"location":"plugins/BluetoothControlPlugin/#parameters_22","text":"Name Type Description params object ... params.address string Bluetooth address params.type string Device type (must be one of the following: Classic, LowEnergy, LowEnergyRandom ) (default: Classic ) params.secret integer A six-digit decimal number passkey sent by the remote device for confirmation; may be 0 for a simple accept/forbid paring request","title":"Parameters"},{"location":"plugins/BluetoothControlPlugin/#example_26","text":"","title":"Example"},{"location":"plugins/BluetoothControlPlugin/#registration_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothControl.1.register\", \"params\": { \"event\": \"passkeyconfirmrequest\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothControlPlugin/#message_7","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.passkeyconfirmrequest\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\", \"type\": \"Classic\", \"secret\": 123456 } }","title":"Message"},{"location":"plugins/BluetoothRemoteControlPlugin/","text":"Bluetooth Remote Control Plugin Version: 1.0 Status: BluetoothRemoteControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the BluetoothRemoteControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Bluetooth Remote Control plugin allows configuring and enabling Bluetooth remote control units. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothRemoteControl ) classname string Class name: BluetoothRemoteControl locator string Library name: libThunderBluetoothRemoteControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.controller string (optional) Controller configuration?.keymap string (optional) Keymap configuration?.keyingest boolean (optional) Enable keyingest configuration?.recorder enum (optional) Recorder Interfaces This plugin implements the following interfaces: BluetoothRemoteControl.json (version 1.0.0) (uncompliant-extended format) Methods The following methods are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface methods: Method Description assign Assigns a bluetooth device as a remote control unit revoke Revokes the current remote control assignment assign method Assigns a bluetooth device as a remote control unit. Parameters Name Type Description params object ... params.address string Bluetooth address Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Bluetooth unavailable ERROR_UNKNOWN_KEY Device unknown ERROR_GENERAL Failed to assign the device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.assign\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } revoke method Revokes the current remote control assignment. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_ILLEGAL_STATE Remote not assigned Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.revoke\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface properties: Property Description name (read-only) Unit name address (read-only) Bluetooth address of the unit info (read-only) Unit auxiliary information batterylevel (read-only) Battery level voice Enable or Disable the flow of Voice data fragments from the remote audioprofile (read-only) Audio profile details name property Provides access to the unit name. This property is read-only . Value Result Name Type Description result string Name of the remote control unit Errors Message Description ERROR_ILLEGAL_STATE No remote has been assigned Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.name\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Acme Bluetooth RCU\" } address property Provides access to the bluetooth address of the unit. This property is read-only . Value Result Name Type Description result string Bluetooth address Errors Message Description ERROR_ILLEGAL_STATE No remote has been assigned Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.address\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"81:6F:B0:91:9B:FE\" } info property Provides access to the unit auxiliary information. This property is read-only . Value Result Name Type Description result object Unit auxiliary information result?.model string (optional) Unit model name or number result?.serial string (optional) Unit serial number result?.firmware string (optional) Unit firmware revision result?.software string (optional) Unit software revision result?.manufacturer string (optional) Unit manufacturer name Errors Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_GENERAL Failed to retrieve information Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.info\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Acme 1500 Plus\", \"serial\": \"1234567890\", \"firmware\": \"1.0\", \"software\": \"1.0\", \"manufacturer\": \"Acme Inc.\" } } batterylevel property Provides access to the battery level. This property is read-only . Value Result Name Type Description result integer Remote control unit's battery level in percentage Errors Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_GENERAL Failed to retrieve battery level Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.batterylevel\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 50 } voice property Provides access to the enable or Disable the flow of Voice data fragments from the remote. Value Name Type Description (property) boolean Enable (true) or Disable (false) flow of voice data Result Name Type Description result boolean Enable (true) or Disable (false) flow of voice data Errors Message Description ERROR_GENERAL Failed to set the voice flow Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } audioprofile property Provides access to the audio profile details. This property is read-only . Value Result Name Type Description result object Audio profile details result.codec string Name of the audio codec ( pcm for uncompressed audio) result.channels integer Number of audio channels (1: mono, 2: stereo, etc.) result.rate integer Sample rate (in Hz) result.resolution integer Sample resolution (in bits per sample) Errors Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_UNKNOWN_KEY The supplied audio profile is unknown Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.audioprofile\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"ADPCM\", \"channels\": 1, \"rate\": 16000, \"resolution\": 16 } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface events: Notification Description audiotransmission Notifies about audio data transmission audioframe Notifies about new audio data available batterylevelchange Notifies about battery level changes audiotransmission notification Notifies about audio data transmission. Description Register to this event to be notified about audio transmission status Parameters Name Type Description params object ... params?.profile string (optional) Type of audio profile, marking start of transmission; empty in case of end of transmission Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"audiotransmission\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.audiotransmission\", \"params\": { \"profile\": \"pcm\" } } audioframe notification Notifies about new audio data available. Description Register to this event to be notified about audio data Parameters Name Type Description params object ... params?.seq integer (optional) Sequence number of the audio frame within current audio transmission params.data string Base64 representation of the binary data of the audio frame; format of the data is specified by the audio profile denoted by the most recent audiotransmission notification Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"audioframe\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.audioframe\", \"params\": { \"seq\": 1, \"data\": \"yKMHiYh6qJiDspB6S7ihlKOAbivApYEQDCgY0aECCQhpkAqZogP1ECk9GbHGEAkwG8Ax8wArgaAtEMjGQIoYCKKgGCuzBSA/iuWkKEwamLKzOKoCeR2hwQQZKqgBKKqELoGQwQ==\" } } batterylevelchange notification Notifies about battery level changes. Description Register to this event to be notified about battery level drops Parameters Name Type Description params object ... params.level integer Battery level (in percentage) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"batterylevelchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.batterylevelchange\", \"params\": { \"level\": 50 } }","title":"Bluetooth Remote Control Plugin"},{"location":"plugins/BluetoothRemoteControlPlugin/#bluetooth-remote-control-plugin","text":"Version: 1.0 Status: BluetoothRemoteControl plugin for Thunder framework.","title":"Bluetooth Remote Control Plugin"},{"location":"plugins/BluetoothRemoteControlPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/BluetoothRemoteControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/BluetoothRemoteControlPlugin/#scope","text":"This document describes purpose and functionality of the BluetoothRemoteControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/BluetoothRemoteControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/BluetoothRemoteControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/BluetoothRemoteControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/BluetoothRemoteControlPlugin/#description","text":"The Bluetooth Remote Control plugin allows configuring and enabling Bluetooth remote control units. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/BluetoothRemoteControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothRemoteControl ) classname string Class name: BluetoothRemoteControl locator string Library name: libThunderBluetoothRemoteControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.controller string (optional) Controller configuration?.keymap string (optional) Keymap configuration?.keyingest boolean (optional) Enable keyingest configuration?.recorder enum (optional) Recorder","title":"Configuration"},{"location":"plugins/BluetoothRemoteControlPlugin/#interfaces","text":"This plugin implements the following interfaces: BluetoothRemoteControl.json (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/BluetoothRemoteControlPlugin/#methods","text":"The following methods are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface methods: Method Description assign Assigns a bluetooth device as a remote control unit revoke Revokes the current remote control assignment","title":"Methods"},{"location":"plugins/BluetoothRemoteControlPlugin/#assign-method","text":"Assigns a bluetooth device as a remote control unit.","title":"assign method"},{"location":"plugins/BluetoothRemoteControlPlugin/#parameters","text":"Name Type Description params object ... params.address string Bluetooth address","title":"Parameters"},{"location":"plugins/BluetoothRemoteControlPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothRemoteControlPlugin/#errors","text":"Message Description ERROR_UNAVAILABLE Bluetooth unavailable ERROR_UNKNOWN_KEY Device unknown ERROR_GENERAL Failed to assign the device","title":"Errors"},{"location":"plugins/BluetoothRemoteControlPlugin/#example","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.assign\", \"params\": { \"address\": \"81:6F:B0:91:9B:FE\" } }","title":"Request"},{"location":"plugins/BluetoothRemoteControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothRemoteControlPlugin/#revoke-method","text":"Revokes the current remote control assignment.","title":"revoke method"},{"location":"plugins/BluetoothRemoteControlPlugin/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/BluetoothRemoteControlPlugin/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/BluetoothRemoteControlPlugin/#errors_1","text":"Message Description ERROR_ILLEGAL_STATE Remote not assigned","title":"Errors"},{"location":"plugins/BluetoothRemoteControlPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.revoke\" }","title":"Request"},{"location":"plugins/BluetoothRemoteControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/BluetoothRemoteControlPlugin/#properties","text":"The following properties are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface properties: Property Description name (read-only) Unit name address (read-only) Bluetooth address of the unit info (read-only) Unit auxiliary information batterylevel (read-only) Battery level voice Enable or Disable the flow of Voice data fragments from the remote audioprofile (read-only) Audio profile details","title":"Properties"},{"location":"plugins/BluetoothRemoteControlPlugin/#name-property","text":"Provides access to the unit name. This property is read-only .","title":"name property"},{"location":"plugins/BluetoothRemoteControlPlugin/#value","text":"","title":"Value"},{"location":"plugins/BluetoothRemoteControlPlugin/#result_2","text":"Name Type Description result string Name of the remote control unit","title":"Result"},{"location":"plugins/BluetoothRemoteControlPlugin/#errors_2","text":"Message Description ERROR_ILLEGAL_STATE No remote has been assigned","title":"Errors"},{"location":"plugins/BluetoothRemoteControlPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.name\" }","title":"Get Request"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Acme Bluetooth RCU\" }","title":"Get Response"},{"location":"plugins/BluetoothRemoteControlPlugin/#address-property","text":"Provides access to the bluetooth address of the unit. This property is read-only .","title":"address property"},{"location":"plugins/BluetoothRemoteControlPlugin/#value_1","text":"","title":"Value"},{"location":"plugins/BluetoothRemoteControlPlugin/#result_3","text":"Name Type Description result string Bluetooth address","title":"Result"},{"location":"plugins/BluetoothRemoteControlPlugin/#errors_3","text":"Message Description ERROR_ILLEGAL_STATE No remote has been assigned","title":"Errors"},{"location":"plugins/BluetoothRemoteControlPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.address\" }","title":"Get Request"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"81:6F:B0:91:9B:FE\" }","title":"Get Response"},{"location":"plugins/BluetoothRemoteControlPlugin/#info-property","text":"Provides access to the unit auxiliary information. This property is read-only .","title":"info property"},{"location":"plugins/BluetoothRemoteControlPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/BluetoothRemoteControlPlugin/#result_4","text":"Name Type Description result object Unit auxiliary information result?.model string (optional) Unit model name or number result?.serial string (optional) Unit serial number result?.firmware string (optional) Unit firmware revision result?.software string (optional) Unit software revision result?.manufacturer string (optional) Unit manufacturer name","title":"Result"},{"location":"plugins/BluetoothRemoteControlPlugin/#errors_4","text":"Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_GENERAL Failed to retrieve information","title":"Errors"},{"location":"plugins/BluetoothRemoteControlPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.info\" }","title":"Get Request"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Acme 1500 Plus\", \"serial\": \"1234567890\", \"firmware\": \"1.0\", \"software\": \"1.0\", \"manufacturer\": \"Acme Inc.\" } }","title":"Get Response"},{"location":"plugins/BluetoothRemoteControlPlugin/#batterylevel-property","text":"Provides access to the battery level. This property is read-only .","title":"batterylevel property"},{"location":"plugins/BluetoothRemoteControlPlugin/#value_3","text":"","title":"Value"},{"location":"plugins/BluetoothRemoteControlPlugin/#result_5","text":"Name Type Description result integer Remote control unit's battery level in percentage","title":"Result"},{"location":"plugins/BluetoothRemoteControlPlugin/#errors_5","text":"Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_GENERAL Failed to retrieve battery level","title":"Errors"},{"location":"plugins/BluetoothRemoteControlPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.batterylevel\" }","title":"Get Request"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 50 }","title":"Get Response"},{"location":"plugins/BluetoothRemoteControlPlugin/#voice-property","text":"Provides access to the enable or Disable the flow of Voice data fragments from the remote.","title":"voice property"},{"location":"plugins/BluetoothRemoteControlPlugin/#value_4","text":"Name Type Description (property) boolean Enable (true) or Disable (false) flow of voice data","title":"Value"},{"location":"plugins/BluetoothRemoteControlPlugin/#result_6","text":"Name Type Description result boolean Enable (true) or Disable (false) flow of voice data","title":"Result"},{"location":"plugins/BluetoothRemoteControlPlugin/#errors_6","text":"Message Description ERROR_GENERAL Failed to set the voice flow","title":"Errors"},{"location":"plugins/BluetoothRemoteControlPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\" }","title":"Get Request"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"plugins/BluetoothRemoteControlPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.voice\", \"params\": false }","title":"Set Request"},{"location":"plugins/BluetoothRemoteControlPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/BluetoothRemoteControlPlugin/#audioprofile-property","text":"Provides access to the audio profile details. This property is read-only .","title":"audioprofile property"},{"location":"plugins/BluetoothRemoteControlPlugin/#value_5","text":"","title":"Value"},{"location":"plugins/BluetoothRemoteControlPlugin/#result_7","text":"Name Type Description result object Audio profile details result.codec string Name of the audio codec ( pcm for uncompressed audio) result.channels integer Number of audio channels (1: mono, 2: stereo, etc.) result.rate integer Sample rate (in Hz) result.resolution integer Sample resolution (in bits per sample)","title":"Result"},{"location":"plugins/BluetoothRemoteControlPlugin/#errors_7","text":"Message Description ERROR_ILLEGAL_STATE No remote has been assigned ERROR_UNKNOWN_KEY The supplied audio profile is unknown","title":"Errors"},{"location":"plugins/BluetoothRemoteControlPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.audioprofile\" }","title":"Get Request"},{"location":"plugins/BluetoothRemoteControlPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"codec\": \"ADPCM\", \"channels\": 1, \"rate\": 16000, \"resolution\": 16 } }","title":"Get Response"},{"location":"plugins/BluetoothRemoteControlPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the BluetoothRemoteControl plugin: BluetoothRemoteControl interface events: Notification Description audiotransmission Notifies about audio data transmission audioframe Notifies about new audio data available batterylevelchange Notifies about battery level changes","title":"Notifications"},{"location":"plugins/BluetoothRemoteControlPlugin/#audiotransmission-notification","text":"Notifies about audio data transmission.","title":"audiotransmission notification"},{"location":"plugins/BluetoothRemoteControlPlugin/#description_1","text":"Register to this event to be notified about audio transmission status","title":"Description"},{"location":"plugins/BluetoothRemoteControlPlugin/#parameters_2","text":"Name Type Description params object ... params?.profile string (optional) Type of audio profile, marking start of transmission; empty in case of end of transmission","title":"Parameters"},{"location":"plugins/BluetoothRemoteControlPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"audiotransmission\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothRemoteControlPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.audiotransmission\", \"params\": { \"profile\": \"pcm\" } }","title":"Message"},{"location":"plugins/BluetoothRemoteControlPlugin/#audioframe-notification","text":"Notifies about new audio data available.","title":"audioframe notification"},{"location":"plugins/BluetoothRemoteControlPlugin/#description_2","text":"Register to this event to be notified about audio data","title":"Description"},{"location":"plugins/BluetoothRemoteControlPlugin/#parameters_3","text":"Name Type Description params object ... params?.seq integer (optional) Sequence number of the audio frame within current audio transmission params.data string Base64 representation of the binary data of the audio frame; format of the data is specified by the audio profile denoted by the most recent audiotransmission notification","title":"Parameters"},{"location":"plugins/BluetoothRemoteControlPlugin/#example_9","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"audioframe\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothRemoteControlPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.audioframe\", \"params\": { \"seq\": 1, \"data\": \"yKMHiYh6qJiDspB6S7ihlKOAbivApYEQDCgY0aECCQhpkAqZogP1ECk9GbHGEAkwG8Ax8wArgaAtEMjGQIoYCKKgGCuzBSA/iuWkKEwamLKzOKoCeR2hwQQZKqgBKKqELoGQwQ==\" } }","title":"Message"},{"location":"plugins/BluetoothRemoteControlPlugin/#batterylevelchange-notification","text":"Notifies about battery level changes.","title":"batterylevelchange notification"},{"location":"plugins/BluetoothRemoteControlPlugin/#description_3","text":"Register to this event to be notified about battery level drops","title":"Description"},{"location":"plugins/BluetoothRemoteControlPlugin/#parameters_4","text":"Name Type Description params object ... params.level integer Battery level (in percentage)","title":"Parameters"},{"location":"plugins/BluetoothRemoteControlPlugin/#example_10","text":"","title":"Example"},{"location":"plugins/BluetoothRemoteControlPlugin/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"BluetoothRemoteControl.1.register\", \"params\": { \"event\": \"batterylevelchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/BluetoothRemoteControlPlugin/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.batterylevelchange\", \"params\": { \"level\": 50 } }","title":"Message"},{"location":"plugins/BluetoothSDPServerPlugin/","text":"Bluetooth SDP Server Plugin Version: 1.0 Status: BluetoothSDPServer plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the BluetoothSDPServer plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON SDP Service Discovery Protocol The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Bluetooth SDP Server runs a service discovery server for Bluetooth devices. The SDP server may be required for some audio source devices and is mandatory for discovery by nearby audio sink devices. . The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothSDPServer ) classname string Class name: BluetoothSDPServer locator string Library name: libThunderBluetoothSDPServer.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object ... configuration.controller string Callsign of the Bluetooth controller service (typically BluetoothControl ) configuration?.provider string (optional) Name of the service provider (e.g. device manufacturer) configuration?.services array (optional) ... configuration?.services[#] object (optional) Service settings configuration?.services[#]?.class string (optional) Class of the Bluetooth service configuration?.services[#].callsign string Callsign of the service providing the functionality configuration?.services[#]?.name string (optional) Name of the service advertised over SDP configuration?.services[#]?.description string (optional) Description of the service advertised over SDP configuration?.services[#]?.public boolean (optional) Indicates if the service is listed in SDP PublicBrowseRoot group configuration?.services[#]?.parameters object (optional) Service-specific configuration parameters","title":"Bluetooth SDP Server Plugin"},{"location":"plugins/BluetoothSDPServerPlugin/#bluetooth-sdp-server-plugin","text":"Version: 1.0 Status: BluetoothSDPServer plugin for Thunder framework.","title":"Bluetooth SDP Server Plugin"},{"location":"plugins/BluetoothSDPServerPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"plugins/BluetoothSDPServerPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/BluetoothSDPServerPlugin/#scope","text":"This document describes purpose and functionality of the BluetoothSDPServer plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"plugins/BluetoothSDPServerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/BluetoothSDPServerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON SDP Service Discovery Protocol The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/BluetoothSDPServerPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/BluetoothSDPServerPlugin/#description","text":"The Bluetooth SDP Server runs a service discovery server for Bluetooth devices. The SDP server may be required for some audio source devices and is mandatory for discovery by nearby audio sink devices. . The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/BluetoothSDPServerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: BluetoothSDPServer ) classname string Class name: BluetoothSDPServer locator string Library name: libThunderBluetoothSDPServer.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object ... configuration.controller string Callsign of the Bluetooth controller service (typically BluetoothControl ) configuration?.provider string (optional) Name of the service provider (e.g. device manufacturer) configuration?.services array (optional) ... configuration?.services[#] object (optional) Service settings configuration?.services[#]?.class string (optional) Class of the Bluetooth service configuration?.services[#].callsign string Callsign of the service providing the functionality configuration?.services[#]?.name string (optional) Name of the service advertised over SDP configuration?.services[#]?.description string (optional) Description of the service advertised over SDP configuration?.services[#]?.public boolean (optional) Indicates if the service is listed in SDP PublicBrowseRoot group configuration?.services[#]?.parameters object (optional) Service-specific configuration parameters","title":"Configuration"},{"location":"plugins/CobaltPlugin/","text":"Cobalt Plugin Version: 1.0 Status: Cobalt plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Cobalt plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Cobalt plugin provides web browsing functionality based on the Cobalt engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Cobalt ) classname string Class name: Cobalt locator string Library name: libThunderCobalt.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.url string (optional) The URL that is loaded upon starting the browser configuration?.width integer (optional) The width in pixels of the surface to be used by the application configuration?.height integer (optional) The height in pixels of the surface to be used by the application configuration?.repeatstart integer (optional) The number of milliseconds a key should be pressed to start reapeating (set max to adhere to Thunder) configuration?.repeatinterval integer (optional) The number of milliseconds the repeated key is send after it started repeating (set max to adhere to Thunder) configuration?.clientidentifier string (optional) An identifier, used during the surface creation as additional information configuration?.operatorname string (optional) The name of the operator that owns the infrastructure on which this device is running configuration?.language string (optional) The language to be used to for user interaction configuration?.connection string (optional) The type of connection that is used for internet connectivity configuration?.playbackrates boolean (optional) If enabled, Cobalt supports different rates, otherwise, it supports only 0 and 1 (default: true) Interfaces This plugin implements the following interfaces: Cobalt.json (version 1.0.0) (uncompliant-extended format) Browser.json (version 1.0.0) (uncompliant-extended format) StateControl.json (version 1.0.0) (uncompliant-extended format) Methods The following methods are provided by the Cobalt plugin: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Cobalt plugin: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps (read-only) Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service url property Provides access to the URL loaded in the browser. Also see: urlchange Value Name Type Description (property) string URL loaded in the browser Result Name Type Description result string URL loaded in the browser Errors Message Description ERROR_INCORRECT_URL Incorrect URL given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\", \"params\": \"https://www.google.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the current browser visibility. Also see: visibilitychange Value Name Type Description (property) string Current browser visibility Result Name Type Description result string Current browser visibility Errors Message Description ERROR_UNAVAILABLE Returned when the operation is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current number of frames per second the browser is rendering. This property is read-only . Value Result Name Type Description result integer Current number of frames per second the browser is rendering Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service Result Name Type Description result string Running state of the service Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Cobalt plugin: Browser interface events: Notification Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Notification Description statechange Signals a state change of the service urlchange notification Signals a URL change in the browser. Parameters Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) (default: True ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } } visibilitychange notification Signals a visibility change of the browser. Parameters Name Type Description params object ... params.hidden boolean Determines if the browser has been hidden (true) or made visible (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } } statechange notification Signals a state change of the service. Parameters Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Cobalt Plugin"},{"location":"plugins/CobaltPlugin/#cobalt-plugin","text":"Version: 1.0 Status: Cobalt plugin for Thunder framework.","title":"Cobalt Plugin"},{"location":"plugins/CobaltPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/CobaltPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/CobaltPlugin/#scope","text":"This document describes purpose and functionality of the Cobalt plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/CobaltPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/CobaltPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/CobaltPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/CobaltPlugin/#description","text":"The Cobalt plugin provides web browsing functionality based on the Cobalt engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/CobaltPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Cobalt ) classname string Class name: Cobalt locator string Library name: libThunderCobalt.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.url string (optional) The URL that is loaded upon starting the browser configuration?.width integer (optional) The width in pixels of the surface to be used by the application configuration?.height integer (optional) The height in pixels of the surface to be used by the application configuration?.repeatstart integer (optional) The number of milliseconds a key should be pressed to start reapeating (set max to adhere to Thunder) configuration?.repeatinterval integer (optional) The number of milliseconds the repeated key is send after it started repeating (set max to adhere to Thunder) configuration?.clientidentifier string (optional) An identifier, used during the surface creation as additional information configuration?.operatorname string (optional) The name of the operator that owns the infrastructure on which this device is running configuration?.language string (optional) The language to be used to for user interaction configuration?.connection string (optional) The type of connection that is used for internet connectivity configuration?.playbackrates boolean (optional) If enabled, Cobalt supports different rates, otherwise, it supports only 0 and 1 (default: true)","title":"Configuration"},{"location":"plugins/CobaltPlugin/#interfaces","text":"This plugin implements the following interfaces: Cobalt.json (version 1.0.0) (uncompliant-extended format) Browser.json (version 1.0.0) (uncompliant-extended format) StateControl.json (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/CobaltPlugin/#methods","text":"The following methods are provided by the Cobalt plugin: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"plugins/CobaltPlugin/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"plugins/CobaltPlugin/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"plugins/CobaltPlugin/#parameters","text":"Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"plugins/CobaltPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/CobaltPlugin/#errors","text":"Message Description ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"plugins/CobaltPlugin/#example","text":"","title":"Example"},{"location":"plugins/CobaltPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"plugins/CobaltPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/CobaltPlugin/#properties","text":"The following properties are provided by the Cobalt plugin: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps (read-only) Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"plugins/CobaltPlugin/#url-property","text":"Provides access to the URL loaded in the browser. Also see: urlchange","title":"url property"},{"location":"plugins/CobaltPlugin/#value","text":"Name Type Description (property) string URL loaded in the browser","title":"Value"},{"location":"plugins/CobaltPlugin/#result_1","text":"Name Type Description result string URL loaded in the browser","title":"Result"},{"location":"plugins/CobaltPlugin/#errors_1","text":"Message Description ERROR_INCORRECT_URL Incorrect URL given","title":"Errors"},{"location":"plugins/CobaltPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/CobaltPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\" }","title":"Get Request"},{"location":"plugins/CobaltPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" }","title":"Get Response"},{"location":"plugins/CobaltPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.url\", \"params\": \"https://www.google.com\" }","title":"Set Request"},{"location":"plugins/CobaltPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/CobaltPlugin/#visibility-property","text":"Provides access to the current browser visibility. Also see: visibilitychange","title":"visibility property"},{"location":"plugins/CobaltPlugin/#value_1","text":"Name Type Description (property) string Current browser visibility","title":"Value"},{"location":"plugins/CobaltPlugin/#result_2","text":"Name Type Description result string Current browser visibility","title":"Result"},{"location":"plugins/CobaltPlugin/#errors_2","text":"Message Description ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"plugins/CobaltPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/CobaltPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\" }","title":"Get Request"},{"location":"plugins/CobaltPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" }","title":"Get Response"},{"location":"plugins/CobaltPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"plugins/CobaltPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/CobaltPlugin/#fps-property","text":"Provides access to the current number of frames per second the browser is rendering. This property is read-only .","title":"fps property"},{"location":"plugins/CobaltPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/CobaltPlugin/#result_3","text":"Name Type Description result integer Current number of frames per second the browser is rendering","title":"Result"},{"location":"plugins/CobaltPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/CobaltPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.fps\" }","title":"Get Request"},{"location":"plugins/CobaltPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 }","title":"Get Response"},{"location":"plugins/CobaltPlugin/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"plugins/CobaltPlugin/#value_3","text":"Name Type Description (property) string Running state of the service","title":"Value"},{"location":"plugins/CobaltPlugin/#result_4","text":"Name Type Description result string Running state of the service","title":"Result"},{"location":"plugins/CobaltPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/CobaltPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\" }","title":"Get Request"},{"location":"plugins/CobaltPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"plugins/CobaltPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"plugins/CobaltPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/CobaltPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Cobalt plugin: Browser interface events: Notification Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Notification Description statechange Signals a state change of the service","title":"Notifications"},{"location":"plugins/CobaltPlugin/#urlchange-notification","text":"Signals a URL change in the browser.","title":"urlchange notification"},{"location":"plugins/CobaltPlugin/#parameters_1","text":"Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) (default: True )","title":"Parameters"},{"location":"plugins/CobaltPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/CobaltPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/CobaltPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } }","title":"Message"},{"location":"plugins/CobaltPlugin/#visibilitychange-notification","text":"Signals a visibility change of the browser.","title":"visibilitychange notification"},{"location":"plugins/CobaltPlugin/#parameters_2","text":"Name Type Description params object ... params.hidden boolean Determines if the browser has been hidden (true) or made visible (false)","title":"Parameters"},{"location":"plugins/CobaltPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/CobaltPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/CobaltPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Message"},{"location":"plugins/CobaltPlugin/#statechange-notification","text":"Signals a state change of the service.","title":"statechange notification"},{"location":"plugins/CobaltPlugin/#parameters_3","text":"Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"plugins/CobaltPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/CobaltPlugin/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Cobalt.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/CobaltPlugin/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Message"},{"location":"plugins/CommanderPlugin/","text":"Commander Plugin Version: 1.0 Status: Commander plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the Commander plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Commander plugin provides web browsing functionality based on the Commander engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Commander ) classname string Class name: Commander locator string Library name: libThunderCommander.so startmode string Determines in which state the plugin should be moved to at startup of the framework sequencers array (optional) List of sequencers sequencers[#] string (optional) ...","title":"Commander Plugin"},{"location":"plugins/CommanderPlugin/#commander-plugin","text":"Version: 1.0 Status: Commander plugin for Thunder framework.","title":"Commander Plugin"},{"location":"plugins/CommanderPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"plugins/CommanderPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/CommanderPlugin/#scope","text":"This document describes purpose and functionality of the Commander plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"plugins/CommanderPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/CommanderPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/CommanderPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/CommanderPlugin/#description","text":"The Commander plugin provides web browsing functionality based on the Commander engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/CommanderPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Commander ) classname string Class name: Commander locator string Library name: libThunderCommander.so startmode string Determines in which state the plugin should be moved to at startup of the framework sequencers array (optional) List of sequencers sequencers[#] string (optional) ...","title":"Configuration"},{"location":"plugins/CompositorPlugin/","text":"Compositor Plugin Version: 1.0 Status: Compositor plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Introduction Scope This document describes purpose and functionality of the Compositor plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Compositor gives you control over what is displayed on screen. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Compositor ) classname string Class name: Compositor locator string Library name: libThunderCompositor.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.hardwareready integer (optional) Hardware delay (Nexus) configuration?.resolution string (optional) Screen resolution (Nexus) configuration?.allowedclients array (optional) List of allowed clients (Nexus) configuration?.allowedclients[#] string (optional) ... configuration?.connector enum (optional) Resolution (Wayland) configuration?.join boolean (optional) Enable join (Wayland) configuration?.display string (optional) Display (Westeros) configuration?.renderer string (optional) Path of renderer (Westeros) configuration?.glname string (optional) Name of GL-library (Westeros) configuration?.width string (optional) Screen width (Westeros) configuration?.height string (optional) Screen height (Westeros) Interfaces This plugin implements the following interfaces: Compositor.json (version 1.0.0) (uncompliant-extended format) Methods The following methods are provided by the Compositor plugin: Compositor interface methods: Method Description putontop Puts client surface on top in z-order putbelow Puts client surface below another surface select Directs the input to the given client, disabling all the others putontop method Puts client surface on top in z-order. Description Use this method to get a client's surface to the top position. Parameters Name Type Description params object ... params.client string Client name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Client not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putontop\", \"params\": { \"client\": \"Netflix\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } putbelow method Puts client surface below another surface. Description Use this method to reorder client surfaces in the z-order list. Parameters Name Type Description params object ... params.client string Client name to change z-order position params.relative string Client to put the other surface below Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Client(s) not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putbelow\", \"params\": { \"client\": \"Netflix\", \"relative\": \"WebKitBrowser\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } select method Directs the input to the given client, disabling all the others. Description Use this method to direct all inputs to this client. The client that is receiving the inputs prior to this call will nolonger receive it anymore after this call. Parameters Name Type Description params object ... params.client string Client name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Client not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.select\", \"params\": { \"client\": \"Netflix\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Compositor plugin: Compositor interface properties: Property Description resolution Screen resolution zorder (read-only) List of compositor clients sorted by z-order brightness Brightness of SDR graphics in HDR display geometry Client surface geometry visiblity (write-only) Client surface visibility opacity (write-only) Client surface opacity resolution property Provides access to the screen resolution. Description Use this property to set or retrieve the current resolution of the screen. Value Name Type Description (property) string Screen resolution Result Name Type Description result string Screen resolution Errors Message Description ERROR_UNKNOWN_KEY Unknown resolution ERROR_UNAVAILABLE Set resolution is not supported or failed ERROR_GENERAL Failed to set resolution Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1080p24\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\", \"params\": \"1080p24\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } zorder property Provides access to the list of compositor clients sorted by z-order. This property is read-only . Description Use this property to retrieve the list of all clients in z-order. Each client has an z-order-value that determines its position with respect to the screen. The ordering is that the top position is closest to the screen, the next z-order-value first behind the top, and so on. Value Result Name Type Description result array List of compositor clients sorted by z-order result[#] string Client name Errors Message Description ERROR_GENERAL Failed to get z-order Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.zorder\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Netflix\" ] } brightness property Provides access to the brightness of SDR graphics in HDR display. Description Use this property to set or retrieve the brightness of the SDR graphics. Value Name Type Description (property) string Brightness of SDR graphics in HDR display Result Name Type Description result string Brightness of SDR graphics in HDR display Errors Message Description ERROR_UNKNOWN_KEY Unknown brightness ERROR_UNAVAILABLE Set brightness is not supported or failed ERROR_GENERAL Failed to set brightness Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"match_video\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\", \"params\": \"match_video\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } geometry property Provides access to the client surface geometry. Description Use this property to update or retrieve the geometry of a client's surface. Value Name Type Description (property) object Client surface geometry (property).x integer Horizontal coordinate of the surface (property).y integer Vertical coordinate of the surface (property).width integer Surface width (property).height integer Surface height The client argument shall be passed as the index to the property, e.g. Compositor.1.geometry@<client> . Result Name Type Description result object Client surface geometry result.x integer Horizontal coordinate of the surface result.y integer Vertical coordinate of the surface result.width integer Surface width result.height integer Surface height Errors Message Description ERROR_UNAVAILABLE Client not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visiblity property Provides access to the client surface visibility. This property is write-only . Description Use this property to set the client's surface visibility. Value Name Type Description (property) string Client surface visibility The client argument shall be passed as the index to the property, e.g. Compositor.1.visiblity@<client> . Errors Message Description ERROR_UNAVAILABLE Client not found Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.visiblity@Netflix\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } opacity property Provides access to the client surface opacity. This property is write-only . Description Use this property to set the client's surface opacity level. Value Name Type Description (property) integer Opacity level (0 to 255; 0: fully transparent, 255: fully opaque) The client argument shall be passed as the index to the property, e.g. Compositor.1.opacity@<client> . Errors Message Description ERROR_UNAVAILABLE Client not found Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.opacity@Netflix\", \"params\": 127 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Compositor Plugin"},{"location":"plugins/CompositorPlugin/#compositor-plugin","text":"Version: 1.0 Status: Compositor plugin for Thunder framework.","title":"Compositor Plugin"},{"location":"plugins/CompositorPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties","title":"Table of Contents"},{"location":"plugins/CompositorPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/CompositorPlugin/#scope","text":"This document describes purpose and functionality of the Compositor plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"plugins/CompositorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/CompositorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/CompositorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/CompositorPlugin/#description","text":"Compositor gives you control over what is displayed on screen. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/CompositorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Compositor ) classname string Class name: Compositor locator string Library name: libThunderCompositor.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.hardwareready integer (optional) Hardware delay (Nexus) configuration?.resolution string (optional) Screen resolution (Nexus) configuration?.allowedclients array (optional) List of allowed clients (Nexus) configuration?.allowedclients[#] string (optional) ... configuration?.connector enum (optional) Resolution (Wayland) configuration?.join boolean (optional) Enable join (Wayland) configuration?.display string (optional) Display (Westeros) configuration?.renderer string (optional) Path of renderer (Westeros) configuration?.glname string (optional) Name of GL-library (Westeros) configuration?.width string (optional) Screen width (Westeros) configuration?.height string (optional) Screen height (Westeros)","title":"Configuration"},{"location":"plugins/CompositorPlugin/#interfaces","text":"This plugin implements the following interfaces: Compositor.json (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/CompositorPlugin/#methods","text":"The following methods are provided by the Compositor plugin: Compositor interface methods: Method Description putontop Puts client surface on top in z-order putbelow Puts client surface below another surface select Directs the input to the given client, disabling all the others","title":"Methods"},{"location":"plugins/CompositorPlugin/#putontop-method","text":"Puts client surface on top in z-order.","title":"putontop method"},{"location":"plugins/CompositorPlugin/#description_1","text":"Use this method to get a client's surface to the top position.","title":"Description"},{"location":"plugins/CompositorPlugin/#parameters","text":"Name Type Description params object ... params.client string Client name","title":"Parameters"},{"location":"plugins/CompositorPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/CompositorPlugin/#errors","text":"Message Description ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"plugins/CompositorPlugin/#example","text":"","title":"Example"},{"location":"plugins/CompositorPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putontop\", \"params\": { \"client\": \"Netflix\" } }","title":"Request"},{"location":"plugins/CompositorPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/CompositorPlugin/#putbelow-method","text":"Puts client surface below another surface.","title":"putbelow method"},{"location":"plugins/CompositorPlugin/#description_2","text":"Use this method to reorder client surfaces in the z-order list.","title":"Description"},{"location":"plugins/CompositorPlugin/#parameters_1","text":"Name Type Description params object ... params.client string Client name to change z-order position params.relative string Client to put the other surface below","title":"Parameters"},{"location":"plugins/CompositorPlugin/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/CompositorPlugin/#errors_1","text":"Message Description ERROR_UNAVAILABLE Client(s) not found","title":"Errors"},{"location":"plugins/CompositorPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/CompositorPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.putbelow\", \"params\": { \"client\": \"Netflix\", \"relative\": \"WebKitBrowser\" } }","title":"Request"},{"location":"plugins/CompositorPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/CompositorPlugin/#select-method","text":"Directs the input to the given client, disabling all the others.","title":"select method"},{"location":"plugins/CompositorPlugin/#description_3","text":"Use this method to direct all inputs to this client. The client that is receiving the inputs prior to this call will nolonger receive it anymore after this call.","title":"Description"},{"location":"plugins/CompositorPlugin/#parameters_2","text":"Name Type Description params object ... params.client string Client name","title":"Parameters"},{"location":"plugins/CompositorPlugin/#result_2","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/CompositorPlugin/#errors_2","text":"Message Description ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"plugins/CompositorPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/CompositorPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.select\", \"params\": { \"client\": \"Netflix\" } }","title":"Request"},{"location":"plugins/CompositorPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/CompositorPlugin/#properties","text":"The following properties are provided by the Compositor plugin: Compositor interface properties: Property Description resolution Screen resolution zorder (read-only) List of compositor clients sorted by z-order brightness Brightness of SDR graphics in HDR display geometry Client surface geometry visiblity (write-only) Client surface visibility opacity (write-only) Client surface opacity","title":"Properties"},{"location":"plugins/CompositorPlugin/#resolution-property","text":"Provides access to the screen resolution.","title":"resolution property"},{"location":"plugins/CompositorPlugin/#description_4","text":"Use this property to set or retrieve the current resolution of the screen.","title":"Description"},{"location":"plugins/CompositorPlugin/#value","text":"Name Type Description (property) string Screen resolution","title":"Value"},{"location":"plugins/CompositorPlugin/#result_3","text":"Name Type Description result string Screen resolution","title":"Result"},{"location":"plugins/CompositorPlugin/#errors_3","text":"Message Description ERROR_UNKNOWN_KEY Unknown resolution ERROR_UNAVAILABLE Set resolution is not supported or failed ERROR_GENERAL Failed to set resolution","title":"Errors"},{"location":"plugins/CompositorPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/CompositorPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\" }","title":"Get Request"},{"location":"plugins/CompositorPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1080p24\" }","title":"Get Response"},{"location":"plugins/CompositorPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.resolution\", \"params\": \"1080p24\" }","title":"Set Request"},{"location":"plugins/CompositorPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/CompositorPlugin/#zorder-property","text":"Provides access to the list of compositor clients sorted by z-order. This property is read-only .","title":"zorder property"},{"location":"plugins/CompositorPlugin/#description_5","text":"Use this property to retrieve the list of all clients in z-order. Each client has an z-order-value that determines its position with respect to the screen. The ordering is that the top position is closest to the screen, the next z-order-value first behind the top, and so on.","title":"Description"},{"location":"plugins/CompositorPlugin/#value_1","text":"","title":"Value"},{"location":"plugins/CompositorPlugin/#result_4","text":"Name Type Description result array List of compositor clients sorted by z-order result[#] string Client name","title":"Result"},{"location":"plugins/CompositorPlugin/#errors_4","text":"Message Description ERROR_GENERAL Failed to get z-order","title":"Errors"},{"location":"plugins/CompositorPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/CompositorPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.zorder\" }","title":"Get Request"},{"location":"plugins/CompositorPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Netflix\" ] }","title":"Get Response"},{"location":"plugins/CompositorPlugin/#brightness-property","text":"Provides access to the brightness of SDR graphics in HDR display.","title":"brightness property"},{"location":"plugins/CompositorPlugin/#description_6","text":"Use this property to set or retrieve the brightness of the SDR graphics.","title":"Description"},{"location":"plugins/CompositorPlugin/#value_2","text":"Name Type Description (property) string Brightness of SDR graphics in HDR display","title":"Value"},{"location":"plugins/CompositorPlugin/#result_5","text":"Name Type Description result string Brightness of SDR graphics in HDR display","title":"Result"},{"location":"plugins/CompositorPlugin/#errors_5","text":"Message Description ERROR_UNKNOWN_KEY Unknown brightness ERROR_UNAVAILABLE Set brightness is not supported or failed ERROR_GENERAL Failed to set brightness","title":"Errors"},{"location":"plugins/CompositorPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/CompositorPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\" }","title":"Get Request"},{"location":"plugins/CompositorPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"match_video\" }","title":"Get Response"},{"location":"plugins/CompositorPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.brightness\", \"params\": \"match_video\" }","title":"Set Request"},{"location":"plugins/CompositorPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/CompositorPlugin/#geometry-property","text":"Provides access to the client surface geometry.","title":"geometry property"},{"location":"plugins/CompositorPlugin/#description_7","text":"Use this property to update or retrieve the geometry of a client's surface.","title":"Description"},{"location":"plugins/CompositorPlugin/#value_3","text":"Name Type Description (property) object Client surface geometry (property).x integer Horizontal coordinate of the surface (property).y integer Vertical coordinate of the surface (property).width integer Surface width (property).height integer Surface height The client argument shall be passed as the index to the property, e.g. Compositor.1.geometry@<client> .","title":"Value"},{"location":"plugins/CompositorPlugin/#result_6","text":"Name Type Description result object Client surface geometry result.x integer Horizontal coordinate of the surface result.y integer Vertical coordinate of the surface result.width integer Surface width result.height integer Surface height","title":"Result"},{"location":"plugins/CompositorPlugin/#errors_6","text":"Message Description ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"plugins/CompositorPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/CompositorPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\" }","title":"Get Request"},{"location":"plugins/CompositorPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } }","title":"Get Response"},{"location":"plugins/CompositorPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.geometry@Netflix\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1280, \"height\": 720 } }","title":"Set Request"},{"location":"plugins/CompositorPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/CompositorPlugin/#visiblity-property","text":"Provides access to the client surface visibility. This property is write-only .","title":"visiblity property"},{"location":"plugins/CompositorPlugin/#description_8","text":"Use this property to set the client's surface visibility.","title":"Description"},{"location":"plugins/CompositorPlugin/#value_4","text":"Name Type Description (property) string Client surface visibility The client argument shall be passed as the index to the property, e.g. Compositor.1.visiblity@<client> .","title":"Value"},{"location":"plugins/CompositorPlugin/#errors_7","text":"Message Description ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"plugins/CompositorPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/CompositorPlugin/#set-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.visiblity@Netflix\", \"params\": \"visible\" }","title":"Set Request"},{"location":"plugins/CompositorPlugin/#set-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/CompositorPlugin/#opacity-property","text":"Provides access to the client surface opacity. This property is write-only .","title":"opacity property"},{"location":"plugins/CompositorPlugin/#description_9","text":"Use this property to set the client's surface opacity level.","title":"Description"},{"location":"plugins/CompositorPlugin/#value_5","text":"Name Type Description (property) integer Opacity level (0 to 255; 0: fully transparent, 255: fully opaque) The client argument shall be passed as the index to the property, e.g. Compositor.1.opacity@<client> .","title":"Value"},{"location":"plugins/CompositorPlugin/#errors_8","text":"Message Description ERROR_UNAVAILABLE Client not found","title":"Errors"},{"location":"plugins/CompositorPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/CompositorPlugin/#set-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Compositor.1.opacity@Netflix\", \"params\": 127 }","title":"Set Request"},{"location":"plugins/CompositorPlugin/#set-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/ContainersPlugin/","text":"Containers Plugin Version: 1.0 Status: Containers plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Introduction Scope This document describes purpose and functionality of the Containers plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Containers plugin provides informations about process containers running on system. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Containers ) classname string Class name: Containers locator string Library name: libWPEContainers.so startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: Containers.json (version 1.0.0) (compliant format) Methods The following methods are provided by the Containers plugin: Containers interface methods: Method Description start Starts a new container stop Stops a container start method Starts a new container. Parameters Name Type Description params object ... params?.name string (optional) Name of container params?.command string (optional) Command that will be started in the container params?.parameters array (optional) List of parameters supplied to command params?.parameters[#] string (optional) ... Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Container not found ERROR_GENERAL Failed to start container Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.start\", \"params\": { \"name\": \"ContainerName\", \"command\": \"lsof\", \"parameters\": [ \"-i\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } stop method Stops a container. Parameters Name Type Description params object ... params.name string Name of container Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Container not found Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.stop\", \"params\": { \"name\": \"ContainerName\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Containers plugin: Containers interface properties: Property Description containers (read-only) List of active containers networks (read-only) List of network interfaces of the container memory (read-only) Memory taken by container cpu (read-only) CPU time containers property Provides access to the list of active containers. This property is read-only . Value Result Name Type Description result array List of names of all containers result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.containers\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ContainerName\" ] } networks property Provides access to the list of network interfaces of the container. This property is read-only . Value The name argument shall be passed as the index to the property, e.g. Containers.1.networks@<name> . Result Name Type Description result array List of all network interfaces related to the container result[#] object Returns networks associated with the container result[#]?.interface string (optional) Interface name result[#]?.ips array (optional) List of ip addresses result[#]?.ips[#] string (optional) IP address Errors Message Description ERROR_UNAVAILABLE Container not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.networks@ContainerName\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"veth3NF06K\", \"ips\": [ \"192.168.0.12\" ] } ] } memory property Provides access to the memory taken by container. This property is read-only . Value The name argument shall be passed as the index to the property, e.g. Containers.1.memory@<name> . Result Name Type Description result object Memory allocated by the container, in bytes result?.allocated integer (optional) Memory allocated by container result?.resident integer (optional) Resident memory of the container result?.shared integer (optional) Shared memory in the container Errors Message Description ERROR_UNAVAILABLE Container not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.memory@ContainerName\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"allocated\": 0, \"resident\": 0, \"shared\": 0 } } cpu property Provides access to the CPU time. This property is read-only . Value The name argument shall be passed as the index to the property, e.g. Containers.1.cpu@<name> . Result Name Type Description result object CPU time spent on running the container, in nanoseconds result?.total integer (optional) CPU-time spent on container, in nanoseconds result?.cores array (optional) Time spent on each cpu core, in nanoseconds result?.cores[#] integer (optional) ... Errors Message Description ERROR_UNAVAILABLE Container not found Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.cpu@ContainerName\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 2871287421, \"cores\": [ 2871287421 ] } }","title":"Containers Plugin"},{"location":"plugins/ContainersPlugin/#containers-plugin","text":"Version: 1.0 Status: Containers plugin for Thunder framework.","title":"Containers Plugin"},{"location":"plugins/ContainersPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties","title":"Table of Contents"},{"location":"plugins/ContainersPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/ContainersPlugin/#scope","text":"This document describes purpose and functionality of the Containers plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"plugins/ContainersPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/ContainersPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/ContainersPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/ContainersPlugin/#description","text":"The Containers plugin provides informations about process containers running on system. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/ContainersPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Containers ) classname string Class name: Containers locator string Library name: libWPEContainers.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/ContainersPlugin/#interfaces","text":"This plugin implements the following interfaces: Containers.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/ContainersPlugin/#methods","text":"The following methods are provided by the Containers plugin: Containers interface methods: Method Description start Starts a new container stop Stops a container","title":"Methods"},{"location":"plugins/ContainersPlugin/#start-method","text":"Starts a new container.","title":"start method"},{"location":"plugins/ContainersPlugin/#parameters","text":"Name Type Description params object ... params?.name string (optional) Name of container params?.command string (optional) Command that will be started in the container params?.parameters array (optional) List of parameters supplied to command params?.parameters[#] string (optional) ...","title":"Parameters"},{"location":"plugins/ContainersPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/ContainersPlugin/#errors","text":"Message Description ERROR_UNAVAILABLE Container not found ERROR_GENERAL Failed to start container","title":"Errors"},{"location":"plugins/ContainersPlugin/#example","text":"","title":"Example"},{"location":"plugins/ContainersPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.start\", \"params\": { \"name\": \"ContainerName\", \"command\": \"lsof\", \"parameters\": [ \"-i\" ] } }","title":"Request"},{"location":"plugins/ContainersPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/ContainersPlugin/#stop-method","text":"Stops a container.","title":"stop method"},{"location":"plugins/ContainersPlugin/#parameters_1","text":"Name Type Description params object ... params.name string Name of container","title":"Parameters"},{"location":"plugins/ContainersPlugin/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/ContainersPlugin/#errors_1","text":"Message Description ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"plugins/ContainersPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/ContainersPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.stop\", \"params\": { \"name\": \"ContainerName\" } }","title":"Request"},{"location":"plugins/ContainersPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/ContainersPlugin/#properties","text":"The following properties are provided by the Containers plugin: Containers interface properties: Property Description containers (read-only) List of active containers networks (read-only) List of network interfaces of the container memory (read-only) Memory taken by container cpu (read-only) CPU time","title":"Properties"},{"location":"plugins/ContainersPlugin/#containers-property","text":"Provides access to the list of active containers. This property is read-only .","title":"containers property"},{"location":"plugins/ContainersPlugin/#value","text":"","title":"Value"},{"location":"plugins/ContainersPlugin/#result_2","text":"Name Type Description result array List of names of all containers result[#] string ...","title":"Result"},{"location":"plugins/ContainersPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/ContainersPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.containers\" }","title":"Get Request"},{"location":"plugins/ContainersPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ContainerName\" ] }","title":"Get Response"},{"location":"plugins/ContainersPlugin/#networks-property","text":"Provides access to the list of network interfaces of the container. This property is read-only .","title":"networks property"},{"location":"plugins/ContainersPlugin/#value_1","text":"The name argument shall be passed as the index to the property, e.g. Containers.1.networks@<name> .","title":"Value"},{"location":"plugins/ContainersPlugin/#result_3","text":"Name Type Description result array List of all network interfaces related to the container result[#] object Returns networks associated with the container result[#]?.interface string (optional) Interface name result[#]?.ips array (optional) List of ip addresses result[#]?.ips[#] string (optional) IP address","title":"Result"},{"location":"plugins/ContainersPlugin/#errors_2","text":"Message Description ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"plugins/ContainersPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/ContainersPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.networks@ContainerName\" }","title":"Get Request"},{"location":"plugins/ContainersPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"veth3NF06K\", \"ips\": [ \"192.168.0.12\" ] } ] }","title":"Get Response"},{"location":"plugins/ContainersPlugin/#memory-property","text":"Provides access to the memory taken by container. This property is read-only .","title":"memory property"},{"location":"plugins/ContainersPlugin/#value_2","text":"The name argument shall be passed as the index to the property, e.g. Containers.1.memory@<name> .","title":"Value"},{"location":"plugins/ContainersPlugin/#result_4","text":"Name Type Description result object Memory allocated by the container, in bytes result?.allocated integer (optional) Memory allocated by container result?.resident integer (optional) Resident memory of the container result?.shared integer (optional) Shared memory in the container","title":"Result"},{"location":"plugins/ContainersPlugin/#errors_3","text":"Message Description ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"plugins/ContainersPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/ContainersPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.memory@ContainerName\" }","title":"Get Request"},{"location":"plugins/ContainersPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"allocated\": 0, \"resident\": 0, \"shared\": 0 } }","title":"Get Response"},{"location":"plugins/ContainersPlugin/#cpu-property","text":"Provides access to the CPU time. This property is read-only .","title":"cpu property"},{"location":"plugins/ContainersPlugin/#value_3","text":"The name argument shall be passed as the index to the property, e.g. Containers.1.cpu@<name> .","title":"Value"},{"location":"plugins/ContainersPlugin/#result_5","text":"Name Type Description result object CPU time spent on running the container, in nanoseconds result?.total integer (optional) CPU-time spent on container, in nanoseconds result?.cores array (optional) Time spent on each cpu core, in nanoseconds result?.cores[#] integer (optional) ...","title":"Result"},{"location":"plugins/ContainersPlugin/#errors_4","text":"Message Description ERROR_UNAVAILABLE Container not found","title":"Errors"},{"location":"plugins/ContainersPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/ContainersPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Containers.1.cpu@ContainerName\" }","title":"Get Request"},{"location":"plugins/ContainersPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 2871287421, \"cores\": [ 2871287421 ] } }","title":"Get Response"},{"location":"plugins/DHCPServerPlugin/","text":"DHCP Server Plugin Version: 1.0 Status: DHCPServer plugin for Thunder framework. Table of Contents Introduction Configuration Interfaces Methods Properties Introduction Scope This document describes purpose and functionality of the DHCPServer plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface DHCP Dynamic Host Configuration Protocol HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description DHCP DHCP protocol specification (RFC2131) HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DHCPServer ) classname string Class name: DHCPServer locator string Library name: libThunderDHCPServer.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object Server configuration configuration.name string Name of the server configuration.servers array List of configured DHCP servers configuration.servers[#] object Configuration of a server configuration.servers[#].interface string Name of the network interface to bind to configuration.servers[#].poolstart integer IP pool start number configuration.servers[#].poolsize integer IP pool size (in IP numbers) configuration.servers[#]?.router integer (optional) IP of router Interfaces This plugin implements the following interfaces: DHCPServer.json (version 1.0.0) (compliant format) Methods The following methods are provided by the DHCPServer plugin: DHCPServer interface methods: Method Description activate Activates a DHCP server deactivate Deactivates a DHCP server activate method Activates a DHCP server. Parameters Name Type Description params object ... params.interface string Network interface name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to activate server ERROR_UNKNOWN_KEY Invalid interface name given ERROR_ILLEGAL_STATE Server is already activated Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.activate\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } deactivate method Deactivates a DHCP server. Parameters Name Type Description params object ... params.interface string Network interface name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to deactivate server ERROR_UNKNOWN_KEY Invalid interface name given ERROR_ILLEGAL_STATE Server is not activated Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.deactivate\", \"params\": { \"interface\": \"eth0\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the DHCPServer plugin: DHCPServer interface properties: Property Description status (read-only) Server status status property Provides access to the server status. This property is read-only . Value The server argument shall be passed as the index to the property, e.g. DHCPServer.1.status@<server> . If omitted, status of all configured servers is returned. Result Name Type Description result array List of configured servers result[#] object ... result[#].interface string Network interface name result[#].active boolean Denotes if server is currently active result[#]?.begin string (optional) IP address pool start result[#]?.end string (optional) IP address pool end result[#]?.router string (optional) Router IP address result[#]?.leases array (optional) List of IP address leases result[#]?.leases[#] object (optional) Lease description result[#]?.leases[#].name string Client identifier (or client hardware address if identifier is absent) result[#]?.leases[#].ip string Client IP address result[#]?.leases[#]?.expires string (optional) Client IP expiration time (in ISO8601 format, empty: never expires) Errors Message Description ERROR_UNKNOWN_KEY Invalid server name given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.status@eth0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"active\": true, \"begin\": \"192.168.0.10\", \"end\": \"192.168.0.100\", \"router\": \"192.168.0.1\", \"leases\": [ { \"name\": \"00e04c326c56\", \"ip\": \"192.168.0.10\", \"expires\": \"2019-05-07T07:20:26Z\" } ] } ] }","title":"DHCP Server Plugin"},{"location":"plugins/DHCPServerPlugin/#dhcp-server-plugin","text":"Version: 1.0 Status: DHCPServer plugin for Thunder framework.","title":"DHCP Server Plugin"},{"location":"plugins/DHCPServerPlugin/#table-of-contents","text":"Introduction Configuration Interfaces Methods Properties","title":"Table of Contents"},{"location":"plugins/DHCPServerPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/DHCPServerPlugin/#scope","text":"This document describes purpose and functionality of the DHCPServer plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"plugins/DHCPServerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/DHCPServerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface DHCP Dynamic Host Configuration Protocol HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/DHCPServerPlugin/#references","text":"Ref ID Description DHCP DHCP protocol specification (RFC2131) HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/DHCPServerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DHCPServer ) classname string Class name: DHCPServer locator string Library name: libThunderDHCPServer.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object Server configuration configuration.name string Name of the server configuration.servers array List of configured DHCP servers configuration.servers[#] object Configuration of a server configuration.servers[#].interface string Name of the network interface to bind to configuration.servers[#].poolstart integer IP pool start number configuration.servers[#].poolsize integer IP pool size (in IP numbers) configuration.servers[#]?.router integer (optional) IP of router","title":"Configuration"},{"location":"plugins/DHCPServerPlugin/#interfaces","text":"This plugin implements the following interfaces: DHCPServer.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/DHCPServerPlugin/#methods","text":"The following methods are provided by the DHCPServer plugin: DHCPServer interface methods: Method Description activate Activates a DHCP server deactivate Deactivates a DHCP server","title":"Methods"},{"location":"plugins/DHCPServerPlugin/#activate-method","text":"Activates a DHCP server.","title":"activate method"},{"location":"plugins/DHCPServerPlugin/#parameters","text":"Name Type Description params object ... params.interface string Network interface name","title":"Parameters"},{"location":"plugins/DHCPServerPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/DHCPServerPlugin/#errors","text":"Message Description ERROR_GENERAL Failed to activate server ERROR_UNKNOWN_KEY Invalid interface name given ERROR_ILLEGAL_STATE Server is already activated","title":"Errors"},{"location":"plugins/DHCPServerPlugin/#example","text":"","title":"Example"},{"location":"plugins/DHCPServerPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.activate\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"plugins/DHCPServerPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/DHCPServerPlugin/#deactivate-method","text":"Deactivates a DHCP server.","title":"deactivate method"},{"location":"plugins/DHCPServerPlugin/#parameters_1","text":"Name Type Description params object ... params.interface string Network interface name","title":"Parameters"},{"location":"plugins/DHCPServerPlugin/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/DHCPServerPlugin/#errors_1","text":"Message Description ERROR_GENERAL Failed to deactivate server ERROR_UNKNOWN_KEY Invalid interface name given ERROR_ILLEGAL_STATE Server is not activated","title":"Errors"},{"location":"plugins/DHCPServerPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/DHCPServerPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.deactivate\", \"params\": { \"interface\": \"eth0\" } }","title":"Request"},{"location":"plugins/DHCPServerPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/DHCPServerPlugin/#properties","text":"The following properties are provided by the DHCPServer plugin: DHCPServer interface properties: Property Description status (read-only) Server status","title":"Properties"},{"location":"plugins/DHCPServerPlugin/#status-property","text":"Provides access to the server status. This property is read-only .","title":"status property"},{"location":"plugins/DHCPServerPlugin/#value","text":"The server argument shall be passed as the index to the property, e.g. DHCPServer.1.status@<server> . If omitted, status of all configured servers is returned.","title":"Value"},{"location":"plugins/DHCPServerPlugin/#result_2","text":"Name Type Description result array List of configured servers result[#] object ... result[#].interface string Network interface name result[#].active boolean Denotes if server is currently active result[#]?.begin string (optional) IP address pool start result[#]?.end string (optional) IP address pool end result[#]?.router string (optional) Router IP address result[#]?.leases array (optional) List of IP address leases result[#]?.leases[#] object (optional) Lease description result[#]?.leases[#].name string Client identifier (or client hardware address if identifier is absent) result[#]?.leases[#].ip string Client IP address result[#]?.leases[#]?.expires string (optional) Client IP expiration time (in ISO8601 format, empty: never expires)","title":"Result"},{"location":"plugins/DHCPServerPlugin/#errors_2","text":"Message Description ERROR_UNKNOWN_KEY Invalid server name given","title":"Errors"},{"location":"plugins/DHCPServerPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/DHCPServerPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DHCPServer.1.status@eth0\" }","title":"Get Request"},{"location":"plugins/DHCPServerPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": \"eth0\", \"active\": true, \"begin\": \"192.168.0.10\", \"end\": \"192.168.0.100\", \"router\": \"192.168.0.1\", \"leases\": [ { \"name\": \"00e04c326c56\", \"ip\": \"192.168.0.10\", \"expires\": \"2019-05-07T07:20:26Z\" } ] } ] }","title":"Get Response"},{"location":"plugins/DIALServerPlugin/","text":"DIAL Server Plugin Version: 1.0 Status: DIALServer plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Properties Notifications Introduction Scope This document describes purpose and functionality of the DIALServer plugin. It includes detailed specification about its configuration, properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface DIAL Discovery and Launch HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON REST Representational State Transfer SSDP Simple Service Discovery Protocol The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description Controller An internal plugin that allows activating and deactivating of services/plugins configured for use in the framework. callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description DIAL DIAL protocol specification HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The DIAL Server plugin implements the server side of the DIAL protocol, allowing second-screen devices discovering and launching applications on a first-screen device, utilizing SSDP protocol and RESTful API. For more invormation about the DIAL protocol please refer to [ DIAL ]. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DIALServer ) classname string Class name: DIALServer locator string Library name: libThunderDIALServer.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object Server configuration configuration.name string User-friendly name of the device configuration.model string Name of the device model configuration.description string Short description of the device configuration?.modelnumber string (optional) Device model number configuration?.modelurl string (optional) URL to device model website configuration.manufacturer string Name of the device manufacturer configuration?.manufacturerurl string (optional) URL to manufacturer website configuration?.serialnumber string (optional) Device serial number configuration?.upc string (optional) Device UPC barcode number (Universal Product Code) configuration?.interface string (optional) Server interface IP and port (default: SSDP multicast address and port) configuration?.webserver string (optional) Callsign of a service implementing the web server functionality (default: WebServer ) configuration?.switchboard string (optional) Callsign of a service implementing the switchboard functionality (default: SwitchBoard ). If defined and the service is available then start/stop requests will be relayed to the SwitchBoard rather than handled by the Controller directly. This is used only in non-passive mode configuration.apps array List of supported applications configuration.apps[#] object (an application definition) configuration.apps[#].name string Name of the application configuration.apps[#]?.handler string (optional) Name of the application handler. If not defined then name will be used instead configuration.apps[#]?.callsign string (optional) Callsign of the service implementing the application. If defined and the service is available then the Controller will be used to unconditionally start/stop the application by activating/deactivating its service directly (active mode), or by the SwitchBoard if selected and available (switchboard mode). If not defined then these operations will be handed over to JavaScript, by sending a notification and using handler (or name ) property to identify the application (passive mode) configuration.apps[#]?.url string (optional) A URL related to the application configuration.apps[#]?.allowstop boolean (optional) Denotes if the application can be stopped (true) or not (false, default) Interfaces This plugin implements the following interfaces: DIALServer.json (version 1.0.0) (uncompliant-extended format) Properties The following properties are provided by the DIALServer plugin: DIALServer interface properties: Property Description state Current application running state state property Provides access to the current application running state. Description This property can be used to update the running status of an un-managed application (i.e. running in passive mode ). For DIALServer-managed applications this property shall be considered read-only . Value Name Type Description (property) string Current application running state The application name argument shall be passed as the index to the property, e.g. DIALServer.1.state@<application name> . Result Name Type Description result string Current application running state Errors Message Description ERROR_UNKNOWN_KEY Specified application does not exist ERROR_ILLEGAL_STATE Specified application is running in active mode Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Stopped\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\", \"params\": \"Stopped\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DIALServer plugin: DIALServer interface events: Notification Description start Signals that application launch (or show if previously hidden) was requested over DIAL stop Signals that application stop was requested over DIAL hide Signals that application hide was requested over DIAL show deprecated Signals that application show was requested over DIAL change deprecated Signals that application URL change was requested over DIAL start notification Signals that application launch (or show if previously hidden) was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object ... params.application string Application name params?.parameters string (optional) Additional application-specific parameters params?.payload string (optional) Additional application-specific payload Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"start\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.start\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\", \"payload\": \"...\" } } stop notification Signals that application stop was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object ... params.application string Application name params?.parameters string (optional) Additional application-specific parameters Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"stop\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.stop\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\" } } hide notification Signals that application hide was requested over DIAL. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object ... params.application string Application name Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"hide\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.hide\", \"params\": { \"application\": \"YouTube\" } } show notification Signals that application show was requested over DIAL. show is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object ... params.application string Application name Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"show\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.show\", \"params\": { \"application\": \"YouTube\" } } change notification Signals that application URL change was requested over DIAL. change is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Description This event is sent out only for un-managed applications (i.e. in passive mode ). Parameters Name Type Description params object ... params.application string Application name Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"change\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.change\", \"params\": { \"application\": \"YouTube\" } }","title":"DIAL Server Plugin"},{"location":"plugins/DIALServerPlugin/#dial-server-plugin","text":"Version: 1.0 Status: DIALServer plugin for Thunder framework.","title":"DIAL Server Plugin"},{"location":"plugins/DIALServerPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Properties Notifications","title":"Table of Contents"},{"location":"plugins/DIALServerPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/DIALServerPlugin/#scope","text":"This document describes purpose and functionality of the DIALServer plugin. It includes detailed specification about its configuration, properties provided and notifications sent.","title":"Scope"},{"location":"plugins/DIALServerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/DIALServerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface DIAL Discovery and Launch HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON REST Representational State Transfer SSDP Simple Service Discovery Protocol The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description Controller An internal plugin that allows activating and deactivating of services/plugins configured for use in the framework. callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/DIALServerPlugin/#references","text":"Ref ID Description DIAL DIAL protocol specification HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/DIALServerPlugin/#description","text":"The DIAL Server plugin implements the server side of the DIAL protocol, allowing second-screen devices discovering and launching applications on a first-screen device, utilizing SSDP protocol and RESTful API. For more invormation about the DIAL protocol please refer to [ DIAL ]. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/DIALServerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DIALServer ) classname string Class name: DIALServer locator string Library name: libThunderDIALServer.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object Server configuration configuration.name string User-friendly name of the device configuration.model string Name of the device model configuration.description string Short description of the device configuration?.modelnumber string (optional) Device model number configuration?.modelurl string (optional) URL to device model website configuration.manufacturer string Name of the device manufacturer configuration?.manufacturerurl string (optional) URL to manufacturer website configuration?.serialnumber string (optional) Device serial number configuration?.upc string (optional) Device UPC barcode number (Universal Product Code) configuration?.interface string (optional) Server interface IP and port (default: SSDP multicast address and port) configuration?.webserver string (optional) Callsign of a service implementing the web server functionality (default: WebServer ) configuration?.switchboard string (optional) Callsign of a service implementing the switchboard functionality (default: SwitchBoard ). If defined and the service is available then start/stop requests will be relayed to the SwitchBoard rather than handled by the Controller directly. This is used only in non-passive mode configuration.apps array List of supported applications configuration.apps[#] object (an application definition) configuration.apps[#].name string Name of the application configuration.apps[#]?.handler string (optional) Name of the application handler. If not defined then name will be used instead configuration.apps[#]?.callsign string (optional) Callsign of the service implementing the application. If defined and the service is available then the Controller will be used to unconditionally start/stop the application by activating/deactivating its service directly (active mode), or by the SwitchBoard if selected and available (switchboard mode). If not defined then these operations will be handed over to JavaScript, by sending a notification and using handler (or name ) property to identify the application (passive mode) configuration.apps[#]?.url string (optional) A URL related to the application configuration.apps[#]?.allowstop boolean (optional) Denotes if the application can be stopped (true) or not (false, default)","title":"Configuration"},{"location":"plugins/DIALServerPlugin/#interfaces","text":"This plugin implements the following interfaces: DIALServer.json (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/DIALServerPlugin/#properties","text":"The following properties are provided by the DIALServer plugin: DIALServer interface properties: Property Description state Current application running state","title":"Properties"},{"location":"plugins/DIALServerPlugin/#state-property","text":"Provides access to the current application running state.","title":"state property"},{"location":"plugins/DIALServerPlugin/#description_1","text":"This property can be used to update the running status of an un-managed application (i.e. running in passive mode ). For DIALServer-managed applications this property shall be considered read-only .","title":"Description"},{"location":"plugins/DIALServerPlugin/#value","text":"Name Type Description (property) string Current application running state The application name argument shall be passed as the index to the property, e.g. DIALServer.1.state@<application name> .","title":"Value"},{"location":"plugins/DIALServerPlugin/#result","text":"Name Type Description result string Current application running state","title":"Result"},{"location":"plugins/DIALServerPlugin/#errors","text":"Message Description ERROR_UNKNOWN_KEY Specified application does not exist ERROR_ILLEGAL_STATE Specified application is running in active mode","title":"Errors"},{"location":"plugins/DIALServerPlugin/#example","text":"","title":"Example"},{"location":"plugins/DIALServerPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\" }","title":"Get Request"},{"location":"plugins/DIALServerPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Stopped\" }","title":"Get Response"},{"location":"plugins/DIALServerPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.state@YouTube\", \"params\": \"Stopped\" }","title":"Set Request"},{"location":"plugins/DIALServerPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/DIALServerPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DIALServer plugin: DIALServer interface events: Notification Description start Signals that application launch (or show if previously hidden) was requested over DIAL stop Signals that application stop was requested over DIAL hide Signals that application hide was requested over DIAL show deprecated Signals that application show was requested over DIAL change deprecated Signals that application URL change was requested over DIAL","title":"Notifications"},{"location":"plugins/DIALServerPlugin/#start-notification","text":"Signals that application launch (or show if previously hidden) was requested over DIAL.","title":"start notification"},{"location":"plugins/DIALServerPlugin/#description_2","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"plugins/DIALServerPlugin/#parameters","text":"Name Type Description params object ... params.application string Application name params?.parameters string (optional) Additional application-specific parameters params?.payload string (optional) Additional application-specific payload","title":"Parameters"},{"location":"plugins/DIALServerPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/DIALServerPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"start\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/DIALServerPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.start\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\", \"payload\": \"...\" } }","title":"Message"},{"location":"plugins/DIALServerPlugin/#stop-notification","text":"Signals that application stop was requested over DIAL.","title":"stop notification"},{"location":"plugins/DIALServerPlugin/#description_3","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"plugins/DIALServerPlugin/#parameters_1","text":"Name Type Description params object ... params.application string Application name params?.parameters string (optional) Additional application-specific parameters","title":"Parameters"},{"location":"plugins/DIALServerPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/DIALServerPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"stop\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/DIALServerPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.stop\", \"params\": { \"application\": \"YouTube\", \"parameters\": \"watch?v=zpp045FBbQY\" } }","title":"Message"},{"location":"plugins/DIALServerPlugin/#hide-notification","text":"Signals that application hide was requested over DIAL.","title":"hide notification"},{"location":"plugins/DIALServerPlugin/#description_4","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"plugins/DIALServerPlugin/#parameters_2","text":"Name Type Description params object ... params.application string Application name","title":"Parameters"},{"location":"plugins/DIALServerPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/DIALServerPlugin/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"hide\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/DIALServerPlugin/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.hide\", \"params\": { \"application\": \"YouTube\" } }","title":"Message"},{"location":"plugins/DIALServerPlugin/#show-notification","text":"Signals that application show was requested over DIAL. show is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"show notification"},{"location":"plugins/DIALServerPlugin/#description_5","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"plugins/DIALServerPlugin/#parameters_3","text":"Name Type Description params object ... params.application string Application name","title":"Parameters"},{"location":"plugins/DIALServerPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/DIALServerPlugin/#registration_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"show\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/DIALServerPlugin/#message_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.show\", \"params\": { \"application\": \"YouTube\" } }","title":"Message"},{"location":"plugins/DIALServerPlugin/#change-notification","text":"Signals that application URL change was requested over DIAL. change is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"change notification"},{"location":"plugins/DIALServerPlugin/#description_6","text":"This event is sent out only for un-managed applications (i.e. in passive mode ).","title":"Description"},{"location":"plugins/DIALServerPlugin/#parameters_4","text":"Name Type Description params object ... params.application string Application name","title":"Parameters"},{"location":"plugins/DIALServerPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/DIALServerPlugin/#registration_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DIALServer.1.register\", \"params\": { \"event\": \"change\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/DIALServerPlugin/#message_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.change\", \"params\": { \"application\": \"YouTube\" } }","title":"Message"},{"location":"plugins/DeviceIdentificationAPI/","text":"Device Identification API Version: 1.0.0 Status: DeviceIdentification interface for Thunder framework. (Defined by DeviceIdentification.json ) Table of Contents Introduction Description Properties Introduction Scope This document describes purpose and functionality of the DeviceIdentification interface (version 1.0.0). It includes detailed specification about its properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description DeviceIdentification JSON-RPC interface. Properties The following properties are provided by the DeviceIdentification interface: DeviceIdentification interface properties: Property Description deviceidentification (read-only) Device paltform specific information deviceidentification property Provides access to the device paltform specific information. This property is read-only . Value Result Name Type Description result object Device paltform specific information result.firmwareversion string Version of the device firmware result.chipset string Chipset used for this device result?.identifier string (optional) Device unique identifier Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceIdentification.1.deviceidentification\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"firmwareversion\": \"1.0.0\", \"chipset\": \"BCM2711\", \"identifier\": \"...\" } }","title":"Device Identification API"},{"location":"plugins/DeviceIdentificationAPI/#device-identification-api","text":"Version: 1.0.0 Status: DeviceIdentification interface for Thunder framework. (Defined by DeviceIdentification.json )","title":"Device Identification API"},{"location":"plugins/DeviceIdentificationAPI/#table-of-contents","text":"Introduction Description Properties","title":"Table of Contents"},{"location":"plugins/DeviceIdentificationAPI/#introduction","text":"","title":"Introduction"},{"location":"plugins/DeviceIdentificationAPI/#scope","text":"This document describes purpose and functionality of the DeviceIdentification interface (version 1.0.0). It includes detailed specification about its properties provided.","title":"Scope"},{"location":"plugins/DeviceIdentificationAPI/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/DeviceIdentificationAPI/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/DeviceIdentificationAPI/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/DeviceIdentificationAPI/#description","text":"DeviceIdentification JSON-RPC interface.","title":"Description"},{"location":"plugins/DeviceIdentificationAPI/#properties","text":"The following properties are provided by the DeviceIdentification interface: DeviceIdentification interface properties: Property Description deviceidentification (read-only) Device paltform specific information","title":"Properties"},{"location":"plugins/DeviceIdentificationAPI/#deviceidentification-property","text":"Provides access to the device paltform specific information. This property is read-only .","title":"deviceidentification property"},{"location":"plugins/DeviceIdentificationAPI/#value","text":"","title":"Value"},{"location":"plugins/DeviceIdentificationAPI/#result","text":"Name Type Description result object Device paltform specific information result.firmwareversion string Version of the device firmware result.chipset string Chipset used for this device result?.identifier string (optional) Device unique identifier","title":"Result"},{"location":"plugins/DeviceIdentificationAPI/#example","text":"","title":"Example"},{"location":"plugins/DeviceIdentificationAPI/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceIdentification.1.deviceidentification\" }","title":"Get Request"},{"location":"plugins/DeviceIdentificationAPI/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"firmwareversion\": \"1.0.0\", \"chipset\": \"BCM2711\", \"identifier\": \"...\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/","text":"Device Info Plugin Version: 1.0 Status: DeviceInfo plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Introduction Scope This document describes purpose and functionality of the DeviceInfo plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The DeviceInfo plugin allows retrieving of various device-related information. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DeviceInfo ) classname string Class name: DeviceInfo locator string Library name: libThunderDeviceInfo.so startmode string Determines in which state the plugin should be moved to at startup of the framework hdr boolean Does the device support HDR (true or false) atmos boolean Does the device support Dolby Atmos (true or false) cec boolean Does the device support HDMI CEC (true or false) hdcp string HDCP version supported by the device (unavailable, hdcp_14, hdcp_20, hdcp_21, hdcp_22) audio array Supported audio outputs audio[#] string Audio output (other, rf_modulator, analog, spdif, hdmi, displayport) video array Supported video outputs video[#] string Video output (other, rf_modulator, composite, svideo, component, scart_rgb, hdmi, displayport) resolution array Supported output resolutions resolution[#] string Output resolution (unknown, 480i, 480p, 576i, 576p, 720p, 1080i, 1080p, 2160p30, 2160p60, 4320p30, 4320p60) modelName string Model Name modelYear integer Model Year friendlyName string Friendly Name systemIntegratorName string System Integrator Name platformName string Platform Name Interfaces This plugin implements the following interfaces: DeviceInfo.json (version 1.0.0) (uncompliant-extended format) Methods The following methods are provided by the DeviceInfo plugin: DeviceInfo interface methods: Method Description supportedresolutions Supported resolutions on the selected video display port defaultresolution Default resolution on the selected video display port supportedhdcp Supported hdcp version on the selected video display port audiocapabilities Audio capabilities for the specified audio port ms12capabilities Audio ms12 capabilities for the specified audio port supportedms12audioprofiles Supported ms12 audio profiles for the specified audio port supportedresolutions method Supported resolutions on the selected video display port. Parameters Name Type Description params object ... params.videoDisplay string Video output supported by the device Result Name Type Description result object ... result.supportedResolutions array An array of resolution supported by the device result.supportedResolutions[#] string Resolution supported by the device Errors Message Description ERROR_GENERAL general error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedresolutions\", \"params\": { \"videoDisplay\": \"displayport\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedResolutions\": [ \"1080p\" ] } } defaultresolution method Default resolution on the selected video display port. Parameters Name Type Description params object ... params.videoDisplay string Video output supported by the device Result Name Type Description result object ... result.defaultResolution string Resolution supported by the device Errors Message Description ERROR_GENERAL general error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.defaultresolution\", \"params\": { \"videoDisplay\": \"displayport\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"defaultResolution\": \"1080p\" } } supportedhdcp method Supported hdcp version on the selected video display port. Parameters Name Type Description params object ... params.videoDisplay string Video output supported by the device Result Name Type Description result object ... result.supportedHDCPVersion string HDCP support Errors Message Description ERROR_GENERAL general error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedhdcp\", \"params\": { \"videoDisplay\": \"displayport\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedHDCPVersion\": \"hdcp_20\" } } audiocapabilities method Audio capabilities for the specified audio port. Parameters Name Type Description params object ... params.audioPort string Audio output supported by the device Result Name Type Description result object ... result.AudioCapabilities array An array of audio capabilities result.AudioCapabilities[#] string Audio capability Errors Message Description ERROR_GENERAL general error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.audiocapabilities\", \"params\": { \"audioPort\": \"analog\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"AudioCapabilities\": [ \"none\" ] } } ms12capabilities method Audio ms12 capabilities for the specified audio port. Parameters Name Type Description params object ... params.audioPort string Audio output supported by the device Result Name Type Description result object ... result.MS12Capabilities array An array of MS12 audio capabilities result.MS12Capabilities[#] string MS12 audio capability Errors Message Description ERROR_GENERAL general error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.ms12capabilities\", \"params\": { \"audioPort\": \"analog\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"MS12Capabilities\": [ \"dolby_volume\" ] } } supportedms12audioprofiles method Supported ms12 audio profiles for the specified audio port. Parameters Name Type Description params object ... params.audioPort string Audio output supported by the device Result Name Type Description result object ... result.supportedMS12AudioProfiles array An array of ms12 audio profiles result.supportedMS12AudioProfiles[#] string MS12 Profile Errors Message Description ERROR_GENERAL General error Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedms12audioprofiles\", \"params\": { \"audioPort\": \"analog\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedMS12AudioProfiles\": [ \"music\" ] } } Properties The following properties are provided by the DeviceInfo plugin: DeviceInfo interface properties: Property Description deviceaudiocapabilities (read-only) Audio capabilities of the device devicevideocapabilities (read-only) Video capabilities of the device deviceinfo (read-only) Device meta data systeminfo (read-only) System general information addresses (read-only) Network interface addresses socketinfo (read-only) Socket information supportedaudioports (read-only) Audio ports supported on the device (all ports that are physically present) supportedvideodisplays (read-only) Video ports supported on the device (all ports that are physically present) hostedid (read-only) EDID of the host firmwareversion (read-only) Versions maintained in version serialnumber (read-only) Serial number set by manufacturer make (read-only) Device manufacturer modelid (read-only) Device model number or SKU modelname (read-only) Device model name modelyear (read-only) Device model year friendlyname (read-only) Device friendly name platformname (read-only) Device Platform name devicetype (read-only) Device type distributorid (read-only) Partner ID or distributor ID for device deviceaudiocapabilities property Provides access to the audio capabilities of the device. This property is read-only . Value Result Name Type Description result object Audio capabilities of the device result.audiooutputcapabilities array An array of audiooutputcapabilities result.audiooutputcapabilities[#] object Audio capabilities of the output result.audiooutputcapabilities[#]?.audioPort string (optional) Audio Output support result.audiooutputcapabilities[#].audiocapabilities array Audio capabilities for the specified audio port result.audiooutputcapabilities[#].audiocapabilities[#] string Audio capability result.audiooutputcapabilities[#].ms12capabilities array Audio ms12 capabilities for the specified audio port result.audiooutputcapabilities[#].ms12capabilities[#] string MS12 audio capability result.audiooutputcapabilities[#].ms12profiles array Audio ms12 profiles for the specified audio port result.audiooutputcapabilities[#].ms12profiles[#] string MS12 Profile Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.deviceaudiocapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"audiooutputcapabilities\": [ { \"audioPort\": \"analog\", \"audiocapabilities\": [ \"none\" ], \"ms12capabilities\": [ \"dolby_volume\" ], \"ms12profiles\": [ \"music\" ] } ] } } devicevideocapabilities property Provides access to the video capabilities of the device. This property is read-only . Value Result Name Type Description result object Video capabilities of the device result.hostedid string EDID of the host result.hdr boolean Is HDR supported by this device result.atmos boolean Is Atmos supported by this device result.cec boolean Is CEC supported by this device result.videooutputcapabilities array An array of videooutputcapabilities result.videooutputcapabilities[#] object Video capabilities of the output result.videooutputcapabilities[#].hdcp string HDCP support result.videooutputcapabilities[#]?.videoDisplay string (optional) Video Output support result.videooutputcapabilities[#].output_resolutions array Supported resolutions result.videooutputcapabilities[#].output_resolutions[#] string Resolution supported by the device result.videooutputcapabilities[#].defaultresolution string Default resolution Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.devicevideocapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hostedid\": \"...\", \"hdr\": false, \"atmos\": false, \"cec\": true, \"videooutputcapabilities\": [ { \"hdcp\": \"hdcp_20\", \"videoDisplay\": \"displayport\", \"output_resolutions\": [ \"1080p\" ], \"defaultresolution\": \"1080p\" } ] } } deviceinfo property Provides access to the device meta data. This property is read-only . Value Result Name Type Description result object Device meta data result?.devicetype string (optional) Device type result?.friendlyname string (optional) Friendly name result?.distributorid string (optional) Partner ID or distributor ID for device result?.make string (optional) Device manufacturer result?.modelname string (optional) Model Name result?.modelyear integer (optional) Model Year result?.platformname string (optional) Platform name result?.serialnumber string (optional) Device serial number result?.sku string (optional) Device model number or SKU Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.deviceinfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"devicetype\": \"IpStb\", \"friendlyname\": \"my device\", \"distributorid\": \"Comcast\", \"make\": \"pace\", \"modelname\": \"model A\", \"modelyear\": 2020, \"platformname\": \"linux\", \"serialnumber\": \"WPEuCfrLF45\", \"sku\": \"PX051AEI\" } } systeminfo property Provides access to the system general information. This property is read-only . Value Result Name Type Description result object System general information result.version string Software version (in form version#hashtag ) result.uptime integer System uptime (in seconds) result.totalram integer Total installed system RAM memory (in bytes) result.freeram integer Free system RAM memory (in bytes) result.totalswap integer Total swap space (in bytes) result.freeswap integer Swap space still available (in bytes) result.devicename string Host name result.cpuload string Current CPU load (percentage) result.cpuloadavg object CPU load average result.cpuloadavg.avg1min integer 1min cpuload average result.cpuloadavg.avg5min integer 5min cpuload average result.cpuloadavg.avg15min integer 15min cpuload average result.serialnumber string Device serial number result.time string Current system date and time Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.systeminfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"version\": \"1.0#14452f612c3747645d54974255d11b8f3b4faa54\", \"uptime\": 120, \"totalram\": 655757312, \"freeram\": 563015680, \"totalswap\": 789132680, \"freeswap\": 789132680, \"devicename\": \"buildroot\", \"cpuload\": \"2\", \"cpuloadavg\": { \"avg1min\": 789132680, \"avg5min\": 789132680, \"avg15min\": 789132680 }, \"serialnumber\": \"WPEuCfrLF45\", \"time\": \"Mon, 11 Mar 2019 14:38:18\" } } addresses property Provides access to the network interface addresses. This property is read-only . Value Result Name Type Description result array Network interface addresses result[#] object ... result[#].name string Interface name result[#].mac string Interface MAC address result[#]?.ip array (optional) An array of Interface IP address result[#]?.ip[#] string (optional) Interface IP address Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.addresses\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"lo\", \"mac\": \"00:00:00:00:00\", \"ip\": [ \"127.0.0.1\" ] } ] } socketinfo property Provides access to the socket information. This property is read-only . Value Result Name Type Description result object Socket information result?.total integer (optional) Number of total result?.open integer (optional) Number of open result?.link integer (optional) Number of link result?.exception integer (optional) Number of exception result?.shutdown integer (optional) Number of shutdown result.runs integer Number of runs Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.socketinfo\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 0, \"open\": 0, \"link\": 0, \"exception\": 0, \"shutdown\": 0, \"runs\": 1 } } supportedaudioports property Provides access to the audio ports supported on the device (all ports that are physically present). This property is read-only . Value Result Name Type Description result object Audio ports supported on the device (all ports that are physically present) result.supportedAudioPorts array Audio Output support result.supportedAudioPorts[#] string Audio output supported by the device Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedaudioports\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedAudioPorts\": [ \"analog\" ] } } supportedvideodisplays property Provides access to the video ports supported on the device (all ports that are physically present). This property is read-only . Value Result Name Type Description result object Video ports supported on the device (all ports that are physically present) result.supportedVideoDisplays array Video Output support result.supportedVideoDisplays[#] string Video output supported by the device Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedvideodisplays\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedVideoDisplays\": [ \"displayport\" ] } } hostedid property Provides access to the EDID of the host. This property is read-only . Value Result Name Type Description result object EDID of the host result.EDID string A base64 encoded byte array string representing the EDID Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.hostedid\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"EDID\": \"AP///////wAQrMLQVEJTMQUdAQOANR546q11qVRNnSYPUFSlSwCBALMA0QBxT6lAgYDRwAEBVl4AoKCgKVAwIDUADighAAAaAAAA/wBNWTNORDkxVjFTQlQKAAAA/ABERUxMIFAyNDE4RAogAAAA/QAxVh1xHAAKICAgICAgARsCAxuxUJAFBAMCBxYBBhESFRMUHyBlAwwAEAACOoAYcTgtQFgsRQAOKCEAAB4BHYAYcRwWIFgsJQAOKCEAAJ6/FgCggDgTQDAgOgAOKCEAABp+OQCggDgfQDAgOgAOKCEAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2A\" } } firmwareversion property Provides access to the versions maintained in version.txt. This property is read-only . Value Result Name Type Description result object Versions maintained in version.txt result.imagename string Name of firmware image result?.sdk string (optional) SDK version string result?.mediarite string (optional) Mediarite value result?.yocto string (optional) Yocto version Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.firmwareversion\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"imagename\": \"PX051AEI_VBN_2203_sprint_20220331225312sdy_NG\", \"sdk\": \"17.3\", \"mediarite\": \"8.3.53\", \"yocto\": \"dunfell\" } } serialnumber property Provides access to the serial number set by manufacturer. This property is read-only . Value Result Name Type Description result object Serial number set by manufacturer result.serialnumber string Device Serial Number Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.serialnumber\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"serialnumber\": \"PAW400003744\" } } make property Provides access to the device manufacturer. This property is read-only . Value Result Name Type Description result object Device manufacturer result.make string Device manufacturer Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.make\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"make\": \"pace\" } } modelid property Provides access to the device model number or SKU. This property is read-only . Value Result Name Type Description result object Device model number or SKU result.sku string Device model number or SKU Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelid\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"sku\": \"PX051AEI\" } } modelname property Provides access to the device model name. This property is read-only . Value Result Name Type Description result object Device model name result.model string Device model name Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelname\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Pace Xi5\" } } modelyear property Provides access to the device model year. This property is read-only . Value Result Name Type Description result object Device model year result.year integer Device model year Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelyear\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"year\": 2020 } } friendlyname property Provides access to the device friendly name. This property is read-only . Value Result Name Type Description result object Device friendly name result.name string Device friendly name Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.friendlyname\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"My device\" } } platformname property Provides access to the device Platform name. This property is read-only . Value Result Name Type Description result object Device Platform name result.name string Device Platform name Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.platformname\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"Linux\" } } devicetype property Provides access to the device type. This property is read-only . Value Result Name Type Description result object Device type result.devicetype string Device type Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.devicetype\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"devicetype\": \"IpStb\" } } distributorid property Provides access to the partner ID or distributor ID for device. This property is read-only . Value Result Name Type Description result object Partner ID or distributor ID for device result.distributorid string Partner ID or distributor ID for device Errors Message Description ERROR_GENERAL General error Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.distributorid\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"distributorid\": \"comcast\" } }","title":"Device Info Plugin"},{"location":"plugins/DeviceInfoPlugin/#device-info-plugin","text":"Version: 1.0 Status: DeviceInfo plugin for Thunder framework.","title":"Device Info Plugin"},{"location":"plugins/DeviceInfoPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties","title":"Table of Contents"},{"location":"plugins/DeviceInfoPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/DeviceInfoPlugin/#scope","text":"This document describes purpose and functionality of the DeviceInfo plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"plugins/DeviceInfoPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/DeviceInfoPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/DeviceInfoPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/DeviceInfoPlugin/#description","text":"The DeviceInfo plugin allows retrieving of various device-related information. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/DeviceInfoPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DeviceInfo ) classname string Class name: DeviceInfo locator string Library name: libThunderDeviceInfo.so startmode string Determines in which state the plugin should be moved to at startup of the framework hdr boolean Does the device support HDR (true or false) atmos boolean Does the device support Dolby Atmos (true or false) cec boolean Does the device support HDMI CEC (true or false) hdcp string HDCP version supported by the device (unavailable, hdcp_14, hdcp_20, hdcp_21, hdcp_22) audio array Supported audio outputs audio[#] string Audio output (other, rf_modulator, analog, spdif, hdmi, displayport) video array Supported video outputs video[#] string Video output (other, rf_modulator, composite, svideo, component, scart_rgb, hdmi, displayport) resolution array Supported output resolutions resolution[#] string Output resolution (unknown, 480i, 480p, 576i, 576p, 720p, 1080i, 1080p, 2160p30, 2160p60, 4320p30, 4320p60) modelName string Model Name modelYear integer Model Year friendlyName string Friendly Name systemIntegratorName string System Integrator Name platformName string Platform Name","title":"Configuration"},{"location":"plugins/DeviceInfoPlugin/#interfaces","text":"This plugin implements the following interfaces: DeviceInfo.json (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/DeviceInfoPlugin/#methods","text":"The following methods are provided by the DeviceInfo plugin: DeviceInfo interface methods: Method Description supportedresolutions Supported resolutions on the selected video display port defaultresolution Default resolution on the selected video display port supportedhdcp Supported hdcp version on the selected video display port audiocapabilities Audio capabilities for the specified audio port ms12capabilities Audio ms12 capabilities for the specified audio port supportedms12audioprofiles Supported ms12 audio profiles for the specified audio port","title":"Methods"},{"location":"plugins/DeviceInfoPlugin/#supportedresolutions-method","text":"Supported resolutions on the selected video display port.","title":"supportedresolutions method"},{"location":"plugins/DeviceInfoPlugin/#parameters","text":"Name Type Description params object ... params.videoDisplay string Video output supported by the device","title":"Parameters"},{"location":"plugins/DeviceInfoPlugin/#result","text":"Name Type Description result object ... result.supportedResolutions array An array of resolution supported by the device result.supportedResolutions[#] string Resolution supported by the device","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors","text":"Message Description ERROR_GENERAL general error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedresolutions\", \"params\": { \"videoDisplay\": \"displayport\" } }","title":"Request"},{"location":"plugins/DeviceInfoPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedResolutions\": [ \"1080p\" ] } }","title":"Response"},{"location":"plugins/DeviceInfoPlugin/#defaultresolution-method","text":"Default resolution on the selected video display port.","title":"defaultresolution method"},{"location":"plugins/DeviceInfoPlugin/#parameters_1","text":"Name Type Description params object ... params.videoDisplay string Video output supported by the device","title":"Parameters"},{"location":"plugins/DeviceInfoPlugin/#result_1","text":"Name Type Description result object ... result.defaultResolution string Resolution supported by the device","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_1","text":"Message Description ERROR_GENERAL general error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.defaultresolution\", \"params\": { \"videoDisplay\": \"displayport\" } }","title":"Request"},{"location":"plugins/DeviceInfoPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"defaultResolution\": \"1080p\" } }","title":"Response"},{"location":"plugins/DeviceInfoPlugin/#supportedhdcp-method","text":"Supported hdcp version on the selected video display port.","title":"supportedhdcp method"},{"location":"plugins/DeviceInfoPlugin/#parameters_2","text":"Name Type Description params object ... params.videoDisplay string Video output supported by the device","title":"Parameters"},{"location":"plugins/DeviceInfoPlugin/#result_2","text":"Name Type Description result object ... result.supportedHDCPVersion string HDCP support","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_2","text":"Message Description ERROR_GENERAL general error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedhdcp\", \"params\": { \"videoDisplay\": \"displayport\" } }","title":"Request"},{"location":"plugins/DeviceInfoPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedHDCPVersion\": \"hdcp_20\" } }","title":"Response"},{"location":"plugins/DeviceInfoPlugin/#audiocapabilities-method","text":"Audio capabilities for the specified audio port.","title":"audiocapabilities method"},{"location":"plugins/DeviceInfoPlugin/#parameters_3","text":"Name Type Description params object ... params.audioPort string Audio output supported by the device","title":"Parameters"},{"location":"plugins/DeviceInfoPlugin/#result_3","text":"Name Type Description result object ... result.AudioCapabilities array An array of audio capabilities result.AudioCapabilities[#] string Audio capability","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_3","text":"Message Description ERROR_GENERAL general error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.audiocapabilities\", \"params\": { \"audioPort\": \"analog\" } }","title":"Request"},{"location":"plugins/DeviceInfoPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"AudioCapabilities\": [ \"none\" ] } }","title":"Response"},{"location":"plugins/DeviceInfoPlugin/#ms12capabilities-method","text":"Audio ms12 capabilities for the specified audio port.","title":"ms12capabilities method"},{"location":"plugins/DeviceInfoPlugin/#parameters_4","text":"Name Type Description params object ... params.audioPort string Audio output supported by the device","title":"Parameters"},{"location":"plugins/DeviceInfoPlugin/#result_4","text":"Name Type Description result object ... result.MS12Capabilities array An array of MS12 audio capabilities result.MS12Capabilities[#] string MS12 audio capability","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_4","text":"Message Description ERROR_GENERAL general error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.ms12capabilities\", \"params\": { \"audioPort\": \"analog\" } }","title":"Request"},{"location":"plugins/DeviceInfoPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"MS12Capabilities\": [ \"dolby_volume\" ] } }","title":"Response"},{"location":"plugins/DeviceInfoPlugin/#supportedms12audioprofiles-method","text":"Supported ms12 audio profiles for the specified audio port.","title":"supportedms12audioprofiles method"},{"location":"plugins/DeviceInfoPlugin/#parameters_5","text":"Name Type Description params object ... params.audioPort string Audio output supported by the device","title":"Parameters"},{"location":"plugins/DeviceInfoPlugin/#result_5","text":"Name Type Description result object ... result.supportedMS12AudioProfiles array An array of ms12 audio profiles result.supportedMS12AudioProfiles[#] string MS12 Profile","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_5","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedms12audioprofiles\", \"params\": { \"audioPort\": \"analog\" } }","title":"Request"},{"location":"plugins/DeviceInfoPlugin/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedMS12AudioProfiles\": [ \"music\" ] } }","title":"Response"},{"location":"plugins/DeviceInfoPlugin/#properties","text":"The following properties are provided by the DeviceInfo plugin: DeviceInfo interface properties: Property Description deviceaudiocapabilities (read-only) Audio capabilities of the device devicevideocapabilities (read-only) Video capabilities of the device deviceinfo (read-only) Device meta data systeminfo (read-only) System general information addresses (read-only) Network interface addresses socketinfo (read-only) Socket information supportedaudioports (read-only) Audio ports supported on the device (all ports that are physically present) supportedvideodisplays (read-only) Video ports supported on the device (all ports that are physically present) hostedid (read-only) EDID of the host firmwareversion (read-only) Versions maintained in version serialnumber (read-only) Serial number set by manufacturer make (read-only) Device manufacturer modelid (read-only) Device model number or SKU modelname (read-only) Device model name modelyear (read-only) Device model year friendlyname (read-only) Device friendly name platformname (read-only) Device Platform name devicetype (read-only) Device type distributorid (read-only) Partner ID or distributor ID for device","title":"Properties"},{"location":"plugins/DeviceInfoPlugin/#deviceaudiocapabilities-property","text":"Provides access to the audio capabilities of the device. This property is read-only .","title":"deviceaudiocapabilities property"},{"location":"plugins/DeviceInfoPlugin/#value","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_6","text":"Name Type Description result object Audio capabilities of the device result.audiooutputcapabilities array An array of audiooutputcapabilities result.audiooutputcapabilities[#] object Audio capabilities of the output result.audiooutputcapabilities[#]?.audioPort string (optional) Audio Output support result.audiooutputcapabilities[#].audiocapabilities array Audio capabilities for the specified audio port result.audiooutputcapabilities[#].audiocapabilities[#] string Audio capability result.audiooutputcapabilities[#].ms12capabilities array Audio ms12 capabilities for the specified audio port result.audiooutputcapabilities[#].ms12capabilities[#] string MS12 audio capability result.audiooutputcapabilities[#].ms12profiles array Audio ms12 profiles for the specified audio port result.audiooutputcapabilities[#].ms12profiles[#] string MS12 Profile","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.deviceaudiocapabilities\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"audiooutputcapabilities\": [ { \"audioPort\": \"analog\", \"audiocapabilities\": [ \"none\" ], \"ms12capabilities\": [ \"dolby_volume\" ], \"ms12profiles\": [ \"music\" ] } ] } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#devicevideocapabilities-property","text":"Provides access to the video capabilities of the device. This property is read-only .","title":"devicevideocapabilities property"},{"location":"plugins/DeviceInfoPlugin/#value_1","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_7","text":"Name Type Description result object Video capabilities of the device result.hostedid string EDID of the host result.hdr boolean Is HDR supported by this device result.atmos boolean Is Atmos supported by this device result.cec boolean Is CEC supported by this device result.videooutputcapabilities array An array of videooutputcapabilities result.videooutputcapabilities[#] object Video capabilities of the output result.videooutputcapabilities[#].hdcp string HDCP support result.videooutputcapabilities[#]?.videoDisplay string (optional) Video Output support result.videooutputcapabilities[#].output_resolutions array Supported resolutions result.videooutputcapabilities[#].output_resolutions[#] string Resolution supported by the device result.videooutputcapabilities[#].defaultresolution string Default resolution","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.devicevideocapabilities\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hostedid\": \"...\", \"hdr\": false, \"atmos\": false, \"cec\": true, \"videooutputcapabilities\": [ { \"hdcp\": \"hdcp_20\", \"videoDisplay\": \"displayport\", \"output_resolutions\": [ \"1080p\" ], \"defaultresolution\": \"1080p\" } ] } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#deviceinfo-property","text":"Provides access to the device meta data. This property is read-only .","title":"deviceinfo property"},{"location":"plugins/DeviceInfoPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_8","text":"Name Type Description result object Device meta data result?.devicetype string (optional) Device type result?.friendlyname string (optional) Friendly name result?.distributorid string (optional) Partner ID or distributor ID for device result?.make string (optional) Device manufacturer result?.modelname string (optional) Model Name result?.modelyear integer (optional) Model Year result?.platformname string (optional) Platform name result?.serialnumber string (optional) Device serial number result?.sku string (optional) Device model number or SKU","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.deviceinfo\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"devicetype\": \"IpStb\", \"friendlyname\": \"my device\", \"distributorid\": \"Comcast\", \"make\": \"pace\", \"modelname\": \"model A\", \"modelyear\": 2020, \"platformname\": \"linux\", \"serialnumber\": \"WPEuCfrLF45\", \"sku\": \"PX051AEI\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#systeminfo-property","text":"Provides access to the system general information. This property is read-only .","title":"systeminfo property"},{"location":"plugins/DeviceInfoPlugin/#value_3","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_9","text":"Name Type Description result object System general information result.version string Software version (in form version#hashtag ) result.uptime integer System uptime (in seconds) result.totalram integer Total installed system RAM memory (in bytes) result.freeram integer Free system RAM memory (in bytes) result.totalswap integer Total swap space (in bytes) result.freeswap integer Swap space still available (in bytes) result.devicename string Host name result.cpuload string Current CPU load (percentage) result.cpuloadavg object CPU load average result.cpuloadavg.avg1min integer 1min cpuload average result.cpuloadavg.avg5min integer 5min cpuload average result.cpuloadavg.avg15min integer 15min cpuload average result.serialnumber string Device serial number result.time string Current system date and time","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#example_9","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.systeminfo\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"version\": \"1.0#14452f612c3747645d54974255d11b8f3b4faa54\", \"uptime\": 120, \"totalram\": 655757312, \"freeram\": 563015680, \"totalswap\": 789132680, \"freeswap\": 789132680, \"devicename\": \"buildroot\", \"cpuload\": \"2\", \"cpuloadavg\": { \"avg1min\": 789132680, \"avg5min\": 789132680, \"avg15min\": 789132680 }, \"serialnumber\": \"WPEuCfrLF45\", \"time\": \"Mon, 11 Mar 2019 14:38:18\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#addresses-property","text":"Provides access to the network interface addresses. This property is read-only .","title":"addresses property"},{"location":"plugins/DeviceInfoPlugin/#value_4","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_10","text":"Name Type Description result array Network interface addresses result[#] object ... result[#].name string Interface name result[#].mac string Interface MAC address result[#]?.ip array (optional) An array of Interface IP address result[#]?.ip[#] string (optional) Interface IP address","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#example_10","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.addresses\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"lo\", \"mac\": \"00:00:00:00:00\", \"ip\": [ \"127.0.0.1\" ] } ] }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#socketinfo-property","text":"Provides access to the socket information. This property is read-only .","title":"socketinfo property"},{"location":"plugins/DeviceInfoPlugin/#value_5","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_11","text":"Name Type Description result object Socket information result?.total integer (optional) Number of total result?.open integer (optional) Number of open result?.link integer (optional) Number of link result?.exception integer (optional) Number of exception result?.shutdown integer (optional) Number of shutdown result.runs integer Number of runs","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#example_11","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.socketinfo\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"total\": 0, \"open\": 0, \"link\": 0, \"exception\": 0, \"shutdown\": 0, \"runs\": 1 } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#supportedaudioports-property","text":"Provides access to the audio ports supported on the device (all ports that are physically present). This property is read-only .","title":"supportedaudioports property"},{"location":"plugins/DeviceInfoPlugin/#value_6","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_12","text":"Name Type Description result object Audio ports supported on the device (all ports that are physically present) result.supportedAudioPorts array Audio Output support result.supportedAudioPorts[#] string Audio output supported by the device","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_6","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_12","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedaudioports\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedAudioPorts\": [ \"analog\" ] } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#supportedvideodisplays-property","text":"Provides access to the video ports supported on the device (all ports that are physically present). This property is read-only .","title":"supportedvideodisplays property"},{"location":"plugins/DeviceInfoPlugin/#value_7","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_13","text":"Name Type Description result object Video ports supported on the device (all ports that are physically present) result.supportedVideoDisplays array Video Output support result.supportedVideoDisplays[#] string Video output supported by the device","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_7","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_13","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.supportedvideodisplays\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"supportedVideoDisplays\": [ \"displayport\" ] } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#hostedid-property","text":"Provides access to the EDID of the host. This property is read-only .","title":"hostedid property"},{"location":"plugins/DeviceInfoPlugin/#value_8","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_14","text":"Name Type Description result object EDID of the host result.EDID string A base64 encoded byte array string representing the EDID","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_8","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_14","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.hostedid\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"EDID\": \"AP///////wAQrMLQVEJTMQUdAQOANR546q11qVRNnSYPUFSlSwCBALMA0QBxT6lAgYDRwAEBVl4AoKCgKVAwIDUADighAAAaAAAA/wBNWTNORDkxVjFTQlQKAAAA/ABERUxMIFAyNDE4RAogAAAA/QAxVh1xHAAKICAgICAgARsCAxuxUJAFBAMCBxYBBhESFRMUHyBlAwwAEAACOoAYcTgtQFgsRQAOKCEAAB4BHYAYcRwWIFgsJQAOKCEAAJ6/FgCggDgTQDAgOgAOKCEAABp+OQCggDgfQDAgOgAOKCEAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2A\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#firmwareversion-property","text":"Provides access to the versions maintained in version.txt. This property is read-only .","title":"firmwareversion property"},{"location":"plugins/DeviceInfoPlugin/#value_9","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_15","text":"Name Type Description result object Versions maintained in version.txt result.imagename string Name of firmware image result?.sdk string (optional) SDK version string result?.mediarite string (optional) Mediarite value result?.yocto string (optional) Yocto version","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_9","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_15","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.firmwareversion\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"imagename\": \"PX051AEI_VBN_2203_sprint_20220331225312sdy_NG\", \"sdk\": \"17.3\", \"mediarite\": \"8.3.53\", \"yocto\": \"dunfell\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#serialnumber-property","text":"Provides access to the serial number set by manufacturer. This property is read-only .","title":"serialnumber property"},{"location":"plugins/DeviceInfoPlugin/#value_10","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_16","text":"Name Type Description result object Serial number set by manufacturer result.serialnumber string Device Serial Number","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_10","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_16","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.serialnumber\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"serialnumber\": \"PAW400003744\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#make-property","text":"Provides access to the device manufacturer. This property is read-only .","title":"make property"},{"location":"plugins/DeviceInfoPlugin/#value_11","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_17","text":"Name Type Description result object Device manufacturer result.make string Device manufacturer","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_11","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_17","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.make\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"make\": \"pace\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#modelid-property","text":"Provides access to the device model number or SKU. This property is read-only .","title":"modelid property"},{"location":"plugins/DeviceInfoPlugin/#value_12","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_18","text":"Name Type Description result object Device model number or SKU result.sku string Device model number or SKU","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_12","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_18","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelid\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"sku\": \"PX051AEI\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#modelname-property","text":"Provides access to the device model name. This property is read-only .","title":"modelname property"},{"location":"plugins/DeviceInfoPlugin/#value_13","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_19","text":"Name Type Description result object Device model name result.model string Device model name","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_13","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_19","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelname\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"model\": \"Pace Xi5\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#modelyear-property","text":"Provides access to the device model year. This property is read-only .","title":"modelyear property"},{"location":"plugins/DeviceInfoPlugin/#value_14","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_20","text":"Name Type Description result object Device model year result.year integer Device model year","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_14","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_20","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.modelyear\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"year\": 2020 } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#friendlyname-property","text":"Provides access to the device friendly name. This property is read-only .","title":"friendlyname property"},{"location":"plugins/DeviceInfoPlugin/#value_15","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_21","text":"Name Type Description result object Device friendly name result.name string Device friendly name","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_15","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_21","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_15","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.friendlyname\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_15","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"My device\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#platformname-property","text":"Provides access to the device Platform name. This property is read-only .","title":"platformname property"},{"location":"plugins/DeviceInfoPlugin/#value_16","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_22","text":"Name Type Description result object Device Platform name result.name string Device Platform name","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_16","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_22","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_16","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.platformname\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_16","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"name\": \"Linux\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#devicetype-property","text":"Provides access to the device type. This property is read-only .","title":"devicetype property"},{"location":"plugins/DeviceInfoPlugin/#value_17","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_23","text":"Name Type Description result object Device type result.devicetype string Device type","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_17","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_23","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_17","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.devicetype\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_17","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"devicetype\": \"IpStb\" } }","title":"Get Response"},{"location":"plugins/DeviceInfoPlugin/#distributorid-property","text":"Provides access to the partner ID or distributor ID for device. This property is read-only .","title":"distributorid property"},{"location":"plugins/DeviceInfoPlugin/#value_18","text":"","title":"Value"},{"location":"plugins/DeviceInfoPlugin/#result_24","text":"Name Type Description result object Partner ID or distributor ID for device result.distributorid string Partner ID or distributor ID for device","title":"Result"},{"location":"plugins/DeviceInfoPlugin/#errors_18","text":"Message Description ERROR_GENERAL General error","title":"Errors"},{"location":"plugins/DeviceInfoPlugin/#example_24","text":"","title":"Example"},{"location":"plugins/DeviceInfoPlugin/#get-request_18","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DeviceInfo.1.distributorid\" }","title":"Get Request"},{"location":"plugins/DeviceInfoPlugin/#get-response_18","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"distributorid\": \"comcast\" } }","title":"Get Response"},{"location":"plugins/DictionaryPlugin/","text":"Dictionary Plugin Version: 1.0 Status: Dictionary plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the Dictionary plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Dictionary plugin provides functionality for dictionary management. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Dictionary ) classname string Class name: Dictionary locator string Library name: libThunderDictionary.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.storage string (optional) Filename of DataModel file (default: DataModel.json)","title":"Dictionary Plugin"},{"location":"plugins/DictionaryPlugin/#dictionary-plugin","text":"Version: 1.0 Status: Dictionary plugin for Thunder framework.","title":"Dictionary Plugin"},{"location":"plugins/DictionaryPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"plugins/DictionaryPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/DictionaryPlugin/#scope","text":"This document describes purpose and functionality of the Dictionary plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"plugins/DictionaryPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/DictionaryPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/DictionaryPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/DictionaryPlugin/#description","text":"The Dictionary plugin provides functionality for dictionary management. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/DictionaryPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Dictionary ) classname string Class name: Dictionary locator string Library name: libThunderDictionary.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.storage string (optional) Filename of DataModel file (default: DataModel.json)","title":"Configuration"},{"location":"plugins/DisplayInfoPlugin/","text":"Display Info Plugin Version: 1.0 Status: DisplayInfo plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the DisplayInfo plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The DisplayInfo plugin allows retrieving of various display-related information. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DisplayInfo ) classname string Class name: DisplayInfo locator string Library name: libThunderDisplayInfo.so startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: IGraphicsProperties ( IDisplayInfo.h ) (version 1.0.0) (compliant format) IConnectionProperties ( IDisplayInfo.h ) (version 1.0.0) (uncompliant-extended format) IHDRProperties ( IDisplayInfo.h ) (version 1.0.0) (compliant format) IDisplayProperties ( IDisplayInfo.h ) (version 1.0.0) (compliant format) Methods The following methods are provided by the DisplayInfo plugin: ConnectionProperties interface methods: Method Description edid TV's Extended Display Identification Data widthincentimeters Horizontal size in centimeters heightincentimeters Vertical size in centimeters edid method TV's Extended Display Identification Data. Parameters Name Type Description params object ... params.length integer Length of EDID byte string Result Name Type Description result object ... result.length integer Length of EDID byte string result.data string (base64) EDID byte string Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.edid\", \"params\": { \"length\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"length\": 0, \"data\": \"...\" } } widthincentimeters method Horizontal size in centimeters. Parameters This method takes no parameters. Result Name Type Description result integer Width in cm Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.widthincentimeters\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } heightincentimeters method Vertical size in centimeters. Parameters This method takes no parameters. Result Name Type Description result integer ... Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.heightincentimeters\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } Properties The following properties are provided by the DisplayInfo plugin: GraphicsProperties interface properties: Property Description totalgpuram (read-only) Total GPU DRAM memory (in bytes) freegpuram (read-only) Free GPU DRAM memory (in bytes) ConnectionProperties interface properties: Property Description isaudiopassthrough (read-only) Current audio passthrough status on HDMI connected (read-only) Current HDMI connection status width (read-only) Horizontal resolution of TV height (read-only) Vertical resolution of TV verticalfreq (read-only) Vertical Frequency hdcpprotection HDCP protocol used for transmission portname (read-only) Video output port on the STB used for connection to TV HDRProperties interface properties: Property Description tvcapabilities (read-only) HDR formats supported by TV stbcapabilities (read-only) HDR formats supported by STB hdrsetting (read-only) HDR format in use DisplayProperties interface properties: Property Description colorspace (read-only) Provides access to the display's Colour space (chroma subsampling format) framerate (read-only) Provides access to Frame Rate colourdepth (read-only) Provides access to display's colour Depth colorimetry (read-only) Provides access to display's colorimetry quantizationrange (read-only) Provides access to display's Qauntization Range eotf (read-only) Provides access to display's Electro optical transfer function totalgpuram property Provides access to the total GPU DRAM memory (in bytes). This property is read-only . Value Result Name Type Description result integer Total GPU DRAM memory (in bytes) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.totalgpuram\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } freegpuram property Provides access to the free GPU DRAM memory (in bytes). This property is read-only . Value Result Name Type Description result integer Free GPU DRAM memory (in bytes) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.freegpuram\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } isaudiopassthrough property Provides access to the current audio passthrough status on HDMI. This property is read-only . Value Result Name Type Description result boolean Enabled/Disabled Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.isaudiopassthrough\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } connected property Provides access to the current HDMI connection status. This property is read-only . Value Result Name Type Description result boolean Connected/Disconnected Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.connected\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } width property Provides access to the horizontal resolution of TV. This property is read-only . Value Result Name Type Description result integer Width of TV in pixels Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.width\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } height property Provides access to the vertical resolution of TV. This property is read-only . Value Result Name Type Description result integer Height of TV in pixels Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.height\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } verticalfreq property Provides access to the vertical Frequency. This property is read-only . Value Result Name Type Description result integer Vertical freq Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.verticalfreq\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } hdcpprotection property Provides access to the HDCP protocol used for transmission. Value Name Type Description (property) string HDCP protocol used for transmission (must be one of the following: Hdcp1X, Hdcp2X, HdcpAuto, HdcpUnencrypted ) Result Name Type Description result string Protocol (must be one of the following: Hdcp1X, Hdcp2X, HdcpAuto, HdcpUnencrypted ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdcpprotection\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdcpUnencrypted\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdcpprotection\", \"params\": \"HdcpUnencrypted\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } portname property Provides access to the video output port on the STB used for connection to TV. This property is read-only . Value Result Name Type Description result string Video output port name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.portname\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } tvcapabilities property Provides access to the HDR formats supported by TV. This property is read-only . Value Result Name Type Description result array HDR formats supported by TV result[#] string ... (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.tvcapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] } stbcapabilities property Provides access to the HDR formats supported by STB. This property is read-only . Value Result Name Type Description result array HDR formats supported by STB result[#] string ... (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.stbcapabilities\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] } hdrsetting property Provides access to the HDR format in use. This property is read-only . Value Result Name Type Description result string HDR format (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdrsetting\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdrOff\" } colorspace property Provides access to the provides access to the display's Colour space (chroma subsampling format). This property is read-only . Value Result Name Type Description result string Colour space (must be one of the following: FormatOther, FormatRgb444, FormatUnknown, FormatYcbcr420, FormatYcbcr422, FormatYcbcr444 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colorspace\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FormatUnknown\" } framerate property Provides access to the provides access to Frame Rate. This property is read-only . Value Result Name Type Description result string Frame rate (must be one of the following: Framerate11988, Framerate120, Framerate144, Framerate23976, Framerate24, Framerate25, Framerate2997, Framerate30, Framerate47952, Framerate48, Framerate50, Framerate5994, Framerate60, FramerateUnknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.framerate\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FramerateUnknown\" } colourdepth property Provides access to the provides access to display's colour Depth. This property is read-only . Value Result Name Type Description result string Colour depth (must be one of the following: Colordepth10Bit, Colordepth12Bit, Colordepth8Bit, ColordepthUnknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colourdepth\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ColordepthUnknown\" } colorimetry property Provides access to the provides access to display's colorimetry. This property is read-only . Value Result Name Type Description result array Display colorimetry result[#] string ... (must be one of the following: ColorimetryBt2020RgbYcbcr, ColorimetryBt2020Yccbcbrc, ColorimetryBt709, ColorimetryOprgb, ColorimetryOpycc601, ColorimetryOther, ColorimetrySmpte170M, ColorimetrySycc601, ColorimetryUnknown, ColorimetryXvycc601, ColorimetryXvycc709 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colorimetry\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ColorimetryUnknown\" ] } quantizationrange property Provides access to the provides access to display's Qauntization Range. This property is read-only . Value Result Name Type Description result string Quantization range (must be one of the following: QuantizationrangeFull, QuantizationrangeLimited, QuantizationrangeUnknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.quantizationrange\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"QuantizationrangeUnknown\" } eotf property Provides access to the provides access to display's Electro optical transfer function. This property is read-only . Value Result Name Type Description result string Display's EOTF (must be one of the following: EotfBt1886, EotfBt2100, EotfOther, EotfSmpteSt2084, EotfUnknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.eotf\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"EotfUnknown\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DisplayInfo plugin: ConnectionProperties interface events: Notification Description updated Signal changes on the display update updated notification Signal changes on the display update.. Parameters Name Type Description params object ... params.event string Source of this event (must be one of the following: HdcpChange, HdmiChange, PostResolutionChange, PreResolutionChange ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.register\", \"params\": { \"event\": \"updated\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.updated\", \"params\": { \"event\": \"PreResolutionChange\" } }","title":"Display Info Plugin"},{"location":"plugins/DisplayInfoPlugin/#display-info-plugin","text":"Version: 1.0 Status: DisplayInfo plugin for Thunder framework.","title":"Display Info Plugin"},{"location":"plugins/DisplayInfoPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/DisplayInfoPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/DisplayInfoPlugin/#scope","text":"This document describes purpose and functionality of the DisplayInfo plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/DisplayInfoPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/DisplayInfoPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/DisplayInfoPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/DisplayInfoPlugin/#description","text":"The DisplayInfo plugin allows retrieving of various display-related information. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/DisplayInfoPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: DisplayInfo ) classname string Class name: DisplayInfo locator string Library name: libThunderDisplayInfo.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/DisplayInfoPlugin/#interfaces","text":"This plugin implements the following interfaces: IGraphicsProperties ( IDisplayInfo.h ) (version 1.0.0) (compliant format) IConnectionProperties ( IDisplayInfo.h ) (version 1.0.0) (uncompliant-extended format) IHDRProperties ( IDisplayInfo.h ) (version 1.0.0) (compliant format) IDisplayProperties ( IDisplayInfo.h ) (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/DisplayInfoPlugin/#methods","text":"The following methods are provided by the DisplayInfo plugin: ConnectionProperties interface methods: Method Description edid TV's Extended Display Identification Data widthincentimeters Horizontal size in centimeters heightincentimeters Vertical size in centimeters","title":"Methods"},{"location":"plugins/DisplayInfoPlugin/#edid-method","text":"TV's Extended Display Identification Data.","title":"edid method"},{"location":"plugins/DisplayInfoPlugin/#parameters","text":"Name Type Description params object ... params.length integer Length of EDID byte string","title":"Parameters"},{"location":"plugins/DisplayInfoPlugin/#result","text":"Name Type Description result object ... result.length integer Length of EDID byte string result.data string (base64) EDID byte string","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.edid\", \"params\": { \"length\": 0 } }","title":"Request"},{"location":"plugins/DisplayInfoPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"length\": 0, \"data\": \"...\" } }","title":"Response"},{"location":"plugins/DisplayInfoPlugin/#widthincentimeters-method","text":"Horizontal size in centimeters.","title":"widthincentimeters method"},{"location":"plugins/DisplayInfoPlugin/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/DisplayInfoPlugin/#result_1","text":"Name Type Description result integer Width in cm","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.widthincentimeters\" }","title":"Request"},{"location":"plugins/DisplayInfoPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"plugins/DisplayInfoPlugin/#heightincentimeters-method","text":"Vertical size in centimeters.","title":"heightincentimeters method"},{"location":"plugins/DisplayInfoPlugin/#parameters_2","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/DisplayInfoPlugin/#result_2","text":"Name Type Description result integer ...","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.heightincentimeters\" }","title":"Request"},{"location":"plugins/DisplayInfoPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"plugins/DisplayInfoPlugin/#properties","text":"The following properties are provided by the DisplayInfo plugin: GraphicsProperties interface properties: Property Description totalgpuram (read-only) Total GPU DRAM memory (in bytes) freegpuram (read-only) Free GPU DRAM memory (in bytes) ConnectionProperties interface properties: Property Description isaudiopassthrough (read-only) Current audio passthrough status on HDMI connected (read-only) Current HDMI connection status width (read-only) Horizontal resolution of TV height (read-only) Vertical resolution of TV verticalfreq (read-only) Vertical Frequency hdcpprotection HDCP protocol used for transmission portname (read-only) Video output port on the STB used for connection to TV HDRProperties interface properties: Property Description tvcapabilities (read-only) HDR formats supported by TV stbcapabilities (read-only) HDR formats supported by STB hdrsetting (read-only) HDR format in use DisplayProperties interface properties: Property Description colorspace (read-only) Provides access to the display's Colour space (chroma subsampling format) framerate (read-only) Provides access to Frame Rate colourdepth (read-only) Provides access to display's colour Depth colorimetry (read-only) Provides access to display's colorimetry quantizationrange (read-only) Provides access to display's Qauntization Range eotf (read-only) Provides access to display's Electro optical transfer function","title":"Properties"},{"location":"plugins/DisplayInfoPlugin/#totalgpuram-property","text":"Provides access to the total GPU DRAM memory (in bytes). This property is read-only .","title":"totalgpuram property"},{"location":"plugins/DisplayInfoPlugin/#value","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_3","text":"Name Type Description result integer Total GPU DRAM memory (in bytes)","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.totalgpuram\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#freegpuram-property","text":"Provides access to the free GPU DRAM memory (in bytes). This property is read-only .","title":"freegpuram property"},{"location":"plugins/DisplayInfoPlugin/#value_1","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_4","text":"Name Type Description result integer Free GPU DRAM memory (in bytes)","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.freegpuram\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#isaudiopassthrough-property","text":"Provides access to the current audio passthrough status on HDMI. This property is read-only .","title":"isaudiopassthrough property"},{"location":"plugins/DisplayInfoPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_5","text":"Name Type Description result boolean Enabled/Disabled","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.isaudiopassthrough\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#connected-property","text":"Provides access to the current HDMI connection status. This property is read-only .","title":"connected property"},{"location":"plugins/DisplayInfoPlugin/#value_3","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_6","text":"Name Type Description result boolean Connected/Disconnected","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.connected\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#width-property","text":"Provides access to the horizontal resolution of TV. This property is read-only .","title":"width property"},{"location":"plugins/DisplayInfoPlugin/#value_4","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_7","text":"Name Type Description result integer Width of TV in pixels","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.width\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#height-property","text":"Provides access to the vertical resolution of TV. This property is read-only .","title":"height property"},{"location":"plugins/DisplayInfoPlugin/#value_5","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_8","text":"Name Type Description result integer Height of TV in pixels","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.height\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#verticalfreq-property","text":"Provides access to the vertical Frequency. This property is read-only .","title":"verticalfreq property"},{"location":"plugins/DisplayInfoPlugin/#value_6","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_9","text":"Name Type Description result integer Vertical freq","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_9","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.verticalfreq\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#hdcpprotection-property","text":"Provides access to the HDCP protocol used for transmission.","title":"hdcpprotection property"},{"location":"plugins/DisplayInfoPlugin/#value_7","text":"Name Type Description (property) string HDCP protocol used for transmission (must be one of the following: Hdcp1X, Hdcp2X, HdcpAuto, HdcpUnencrypted )","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_10","text":"Name Type Description result string Protocol (must be one of the following: Hdcp1X, Hdcp2X, HdcpAuto, HdcpUnencrypted )","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_10","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdcpprotection\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdcpUnencrypted\" }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdcpprotection\", \"params\": \"HdcpUnencrypted\" }","title":"Set Request"},{"location":"plugins/DisplayInfoPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/DisplayInfoPlugin/#portname-property","text":"Provides access to the video output port on the STB used for connection to TV. This property is read-only .","title":"portname property"},{"location":"plugins/DisplayInfoPlugin/#value_8","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_11","text":"Name Type Description result string Video output port name","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_11","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.portname\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#tvcapabilities-property","text":"Provides access to the HDR formats supported by TV. This property is read-only .","title":"tvcapabilities property"},{"location":"plugins/DisplayInfoPlugin/#value_9","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_12","text":"Name Type Description result array HDR formats supported by TV result[#] string ... (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor )","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_12","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.tvcapabilities\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#stbcapabilities-property","text":"Provides access to the HDR formats supported by STB. This property is read-only .","title":"stbcapabilities property"},{"location":"plugins/DisplayInfoPlugin/#value_10","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_13","text":"Name Type Description result array HDR formats supported by STB result[#] string ... (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor )","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_13","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.stbcapabilities\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"HdrOff\" ] }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#hdrsetting-property","text":"Provides access to the HDR format in use. This property is read-only .","title":"hdrsetting property"},{"location":"plugins/DisplayInfoPlugin/#value_11","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_14","text":"Name Type Description result string HDR format (must be one of the following: Hdr10, Hdr10Plus, HdrDolbyvision, HdrHlg, HdrOff, HdrTechnicolor )","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_14","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.hdrsetting\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"HdrOff\" }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#colorspace-property","text":"Provides access to the provides access to the display's Colour space (chroma subsampling format). This property is read-only .","title":"colorspace property"},{"location":"plugins/DisplayInfoPlugin/#value_12","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_15","text":"Name Type Description result string Colour space (must be one of the following: FormatOther, FormatRgb444, FormatUnknown, FormatYcbcr420, FormatYcbcr422, FormatYcbcr444 )","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_15","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colorspace\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FormatUnknown\" }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#framerate-property","text":"Provides access to the provides access to Frame Rate. This property is read-only .","title":"framerate property"},{"location":"plugins/DisplayInfoPlugin/#value_13","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_16","text":"Name Type Description result string Frame rate (must be one of the following: Framerate11988, Framerate120, Framerate144, Framerate23976, Framerate24, Framerate25, Framerate2997, Framerate30, Framerate47952, Framerate48, Framerate50, Framerate5994, Framerate60, FramerateUnknown )","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_16","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.framerate\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"FramerateUnknown\" }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#colourdepth-property","text":"Provides access to the provides access to display's colour Depth. This property is read-only .","title":"colourdepth property"},{"location":"plugins/DisplayInfoPlugin/#value_14","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_17","text":"Name Type Description result string Colour depth (must be one of the following: Colordepth10Bit, Colordepth12Bit, Colordepth8Bit, ColordepthUnknown )","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_17","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colourdepth\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ColordepthUnknown\" }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#colorimetry-property","text":"Provides access to the provides access to display's colorimetry. This property is read-only .","title":"colorimetry property"},{"location":"plugins/DisplayInfoPlugin/#value_15","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_18","text":"Name Type Description result array Display colorimetry result[#] string ... (must be one of the following: ColorimetryBt2020RgbYcbcr, ColorimetryBt2020Yccbcbrc, ColorimetryBt709, ColorimetryOprgb, ColorimetryOpycc601, ColorimetryOther, ColorimetrySmpte170M, ColorimetrySycc601, ColorimetryUnknown, ColorimetryXvycc601, ColorimetryXvycc709 )","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_18","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_15","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.colorimetry\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_15","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"ColorimetryUnknown\" ] }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#quantizationrange-property","text":"Provides access to the provides access to display's Qauntization Range. This property is read-only .","title":"quantizationrange property"},{"location":"plugins/DisplayInfoPlugin/#value_16","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_19","text":"Name Type Description result string Quantization range (must be one of the following: QuantizationrangeFull, QuantizationrangeLimited, QuantizationrangeUnknown )","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_19","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_16","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.quantizationrange\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_16","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"QuantizationrangeUnknown\" }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#eotf-property","text":"Provides access to the provides access to display's Electro optical transfer function. This property is read-only .","title":"eotf property"},{"location":"plugins/DisplayInfoPlugin/#value_17","text":"","title":"Value"},{"location":"plugins/DisplayInfoPlugin/#result_20","text":"Name Type Description result string Display's EOTF (must be one of the following: EotfBt1886, EotfBt2100, EotfOther, EotfSmpteSt2084, EotfUnknown )","title":"Result"},{"location":"plugins/DisplayInfoPlugin/#example_20","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#get-request_17","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.eotf\" }","title":"Get Request"},{"location":"plugins/DisplayInfoPlugin/#get-response_17","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"EotfUnknown\" }","title":"Get Response"},{"location":"plugins/DisplayInfoPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the DisplayInfo plugin: ConnectionProperties interface events: Notification Description updated Signal changes on the display update","title":"Notifications"},{"location":"plugins/DisplayInfoPlugin/#updated-notification","text":"Signal changes on the display update..","title":"updated notification"},{"location":"plugins/DisplayInfoPlugin/#parameters_3","text":"Name Type Description params object ... params.event string Source of this event (must be one of the following: HdcpChange, HdmiChange, PostResolutionChange, PreResolutionChange )","title":"Parameters"},{"location":"plugins/DisplayInfoPlugin/#example_21","text":"","title":"Example"},{"location":"plugins/DisplayInfoPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"DisplayInfo.1.register\", \"params\": { \"event\": \"updated\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/DisplayInfoPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.updated\", \"params\": { \"event\": \"PreResolutionChange\" } }","title":"Message"},{"location":"plugins/DoggoPlugin/","text":"Doggo Plugin Version: 1.0 Status: Doggo plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Introduction Scope This document describes purpose and functionality of the Doggo plugin. It includes detailed specification about its configuration and methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The watchdog control plugin allows control a build-in kernel watchdog. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Doggo ) classname string Class name: Doggo locator string Library name: libWPEDoggo.so startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: IWatchDog ( IWatchDog.h ) (version 1.0.0) (compliant format) Methods The following methods are provided by the Doggo plugin: WatchDog interface methods: Method Description touch Touch the watchdog as a sign of life touch method Touch the watchdog as a sign of life. Parameters Name Type Description params object ... params.callsign string In case a specific watchdog needs to be padded pass the name of the callsign for which we want to touch Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Doggo.1.touch\", \"params\": { \"callsign\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Doggo Plugin"},{"location":"plugins/DoggoPlugin/#doggo-plugin","text":"Version: 1.0 Status: Doggo plugin for Thunder framework.","title":"Doggo Plugin"},{"location":"plugins/DoggoPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods","title":"Table of Contents"},{"location":"plugins/DoggoPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/DoggoPlugin/#scope","text":"This document describes purpose and functionality of the Doggo plugin. It includes detailed specification about its configuration and methods provided.","title":"Scope"},{"location":"plugins/DoggoPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/DoggoPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/DoggoPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/DoggoPlugin/#description","text":"The watchdog control plugin allows control a build-in kernel watchdog. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/DoggoPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Doggo ) classname string Class name: Doggo locator string Library name: libWPEDoggo.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/DoggoPlugin/#interfaces","text":"This plugin implements the following interfaces: IWatchDog ( IWatchDog.h ) (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/DoggoPlugin/#methods","text":"The following methods are provided by the Doggo plugin: WatchDog interface methods: Method Description touch Touch the watchdog as a sign of life","title":"Methods"},{"location":"plugins/DoggoPlugin/#touch-method","text":"Touch the watchdog as a sign of life.","title":"touch method"},{"location":"plugins/DoggoPlugin/#parameters","text":"Name Type Description params object ... params.callsign string In case a specific watchdog needs to be padded pass the name of the callsign for which we want to touch","title":"Parameters"},{"location":"plugins/DoggoPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/DoggoPlugin/#example","text":"","title":"Example"},{"location":"plugins/DoggoPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Doggo.1.touch\", \"params\": { \"callsign\": \"...\" } }","title":"Request"},{"location":"plugins/DoggoPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/FileTransferPlugin/","text":"FileTransfer Plugin Version: 1.0 Status: FileTransfer plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the FileTransfer plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The FileTransfer plugin provides web browsing functionality based on the FileTransfer engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: FileTransfer ) classname string Class name: FileTransfer locator string Library name: libThunderFileTransfer.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.port integer (optional) Port number (default: 2201) configuration?.fullfile boolean (optional) If value failse update at the end of the file (default: false)","title":"FileTransfer Plugin"},{"location":"plugins/FileTransferPlugin/#filetransfer-plugin","text":"Version: 1.0 Status: FileTransfer plugin for Thunder framework.","title":"FileTransfer Plugin"},{"location":"plugins/FileTransferPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"plugins/FileTransferPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/FileTransferPlugin/#scope","text":"This document describes purpose and functionality of the FileTransfer plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"plugins/FileTransferPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/FileTransferPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/FileTransferPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/FileTransferPlugin/#description","text":"The FileTransfer plugin provides web browsing functionality based on the FileTransfer engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/FileTransferPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: FileTransfer ) classname string Class name: FileTransfer locator string Library name: libThunderFileTransfer.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.port integer (optional) Port number (default: 2201) configuration?.fullfile boolean (optional) If value failse update at the end of the file (default: false)","title":"Configuration"},{"location":"plugins/FirmwareControlPlugin/","text":"Firmware Control Plugin Version: 1.0 Status: FirmwareControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the FirmwareControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Control Firmware upgrade to the device. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: FirmwareControl ) classname string Class name: FirmwareControl locator string Library name: libThunderFirmwareControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.source string (optional) Source URL or location of the firmware configuration?.download string (optional) Location where the firmware to be downloaded configuration?.waittime integer (optional) Maximum duration to finish download or install process Interfaces This plugin implements the following interfaces: FirmwareControl.json (version 1.0.0) (compliant format) Methods The following methods are provided by the FirmwareControl plugin: FirmwareControl interface methods: Method Description upgrade Upgrade the device to the given firmware resume Resume download from the last paused position upgrade method Upgrade the device to the given firmware. (Note: Ensure size of firmware image should be < 500MB). Also see: upgradeprogress Parameters Name Type Description params object ... params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded params?.type string (optional) Type of the firmware params?.progressinterval integer (optional) Number of seconds between progress update events (5 seconds, 10 seconds etc). 0 means invoking callback only once to report final upgrade result params?.hmac string (optional) HMAC value of firmare Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Operation in progress ERROR_INCORRECT_URL Invalid location given ERROR_UNAVAILABLE Error in download ERROR_BAD_REQUEST Bad file name given ERROR_ILLEGAL_STATE Invalid state of device ERROR_INCORRECT_HASH Incorrect hash given Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.upgrade\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\", \"type\": \"RCDL\", \"progressinterval\": 10, \"hmac\": \"2834e6d07fa4c7778ef7a4e394f38a5c321afbed51d54ad512bd3fffbc7aa5debc\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } resume method Resume download from the last paused position. Also see: upgradeprogress Parameters Name Type Description params object ... params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Operation in progress ERROR_INCORRECT_URL Invalid location given ERROR_UNAVAILABLE Error in download ERROR_BAD_REQUEST Bad file name given ERROR_ILLEGAL_STATE Invalid state of device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.resume\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the FirmwareControl plugin: FirmwareControl interface properties: Property Description status (read-only) Current status of a upgrade downloadsize (read-only) Max free space available to download image status property Provides access to the current status of a upgrade. This property is read-only . Also see: upgradeprogress Value Result Name Type Description result string Upgrade status Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.status\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"completed\" } downloadsize property Provides access to the max free space available to download image. This property is read-only . Value Result Name Type Description result integer Available free space in bytes Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.downloadsize\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 315576 } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the FirmwareControl plugin: FirmwareControl interface events: Notification Description upgradeprogress Notifies progress of upgrade upgradeprogress notification Notifies progress of upgrade. Parameters Name Type Description params object ... params.status string Upgrade status params.error string Reason of error params.progress integer Progress of upgrade (number of bytes transferred during download or percentage of completion during install Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.register\", \"params\": { \"event\": \"upgradeprogress\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.upgradeprogress\", \"params\": { \"status\": \"completed\", \"error\": \"operationotsupported\", \"progress\": 89 } }","title":"Firmware Control Plugin"},{"location":"plugins/FirmwareControlPlugin/#firmware-control-plugin","text":"Version: 1.0 Status: FirmwareControl plugin for Thunder framework.","title":"Firmware Control Plugin"},{"location":"plugins/FirmwareControlPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/FirmwareControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/FirmwareControlPlugin/#scope","text":"This document describes purpose and functionality of the FirmwareControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/FirmwareControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/FirmwareControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/FirmwareControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/FirmwareControlPlugin/#description","text":"Control Firmware upgrade to the device. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/FirmwareControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: FirmwareControl ) classname string Class name: FirmwareControl locator string Library name: libThunderFirmwareControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.source string (optional) Source URL or location of the firmware configuration?.download string (optional) Location where the firmware to be downloaded configuration?.waittime integer (optional) Maximum duration to finish download or install process","title":"Configuration"},{"location":"plugins/FirmwareControlPlugin/#interfaces","text":"This plugin implements the following interfaces: FirmwareControl.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/FirmwareControlPlugin/#methods","text":"The following methods are provided by the FirmwareControl plugin: FirmwareControl interface methods: Method Description upgrade Upgrade the device to the given firmware resume Resume download from the last paused position","title":"Methods"},{"location":"plugins/FirmwareControlPlugin/#upgrade-method","text":"Upgrade the device to the given firmware. (Note: Ensure size of firmware image should be < 500MB). Also see: upgradeprogress","title":"upgrade method"},{"location":"plugins/FirmwareControlPlugin/#parameters","text":"Name Type Description params object ... params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded params?.type string (optional) Type of the firmware params?.progressinterval integer (optional) Number of seconds between progress update events (5 seconds, 10 seconds etc). 0 means invoking callback only once to report final upgrade result params?.hmac string (optional) HMAC value of firmare","title":"Parameters"},{"location":"plugins/FirmwareControlPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/FirmwareControlPlugin/#errors","text":"Message Description ERROR_INPROGRESS Operation in progress ERROR_INCORRECT_URL Invalid location given ERROR_UNAVAILABLE Error in download ERROR_BAD_REQUEST Bad file name given ERROR_ILLEGAL_STATE Invalid state of device ERROR_INCORRECT_HASH Incorrect hash given","title":"Errors"},{"location":"plugins/FirmwareControlPlugin/#example","text":"","title":"Example"},{"location":"plugins/FirmwareControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.upgrade\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\", \"type\": \"RCDL\", \"progressinterval\": 10, \"hmac\": \"2834e6d07fa4c7778ef7a4e394f38a5c321afbed51d54ad512bd3fffbc7aa5debc\" } }","title":"Request"},{"location":"plugins/FirmwareControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/FirmwareControlPlugin/#resume-method","text":"Resume download from the last paused position. Also see: upgradeprogress","title":"resume method"},{"location":"plugins/FirmwareControlPlugin/#parameters_1","text":"Name Type Description params object ... params.name string Name of the firmware params?.location string (optional) Location or URL of the firmware to be upgraded","title":"Parameters"},{"location":"plugins/FirmwareControlPlugin/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/FirmwareControlPlugin/#errors_1","text":"Message Description ERROR_INPROGRESS Operation in progress ERROR_INCORRECT_URL Invalid location given ERROR_UNAVAILABLE Error in download ERROR_BAD_REQUEST Bad file name given ERROR_ILLEGAL_STATE Invalid state of device","title":"Errors"},{"location":"plugins/FirmwareControlPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/FirmwareControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.resume\", \"params\": { \"name\": \"firmware_v.0\", \"location\": \"http://my.site.com/images\" } }","title":"Request"},{"location":"plugins/FirmwareControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/FirmwareControlPlugin/#properties","text":"The following properties are provided by the FirmwareControl plugin: FirmwareControl interface properties: Property Description status (read-only) Current status of a upgrade downloadsize (read-only) Max free space available to download image","title":"Properties"},{"location":"plugins/FirmwareControlPlugin/#status-property","text":"Provides access to the current status of a upgrade. This property is read-only . Also see: upgradeprogress","title":"status property"},{"location":"plugins/FirmwareControlPlugin/#value","text":"","title":"Value"},{"location":"plugins/FirmwareControlPlugin/#result_2","text":"Name Type Description result string Upgrade status","title":"Result"},{"location":"plugins/FirmwareControlPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/FirmwareControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.status\" }","title":"Get Request"},{"location":"plugins/FirmwareControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"completed\" }","title":"Get Response"},{"location":"plugins/FirmwareControlPlugin/#downloadsize-property","text":"Provides access to the max free space available to download image. This property is read-only .","title":"downloadsize property"},{"location":"plugins/FirmwareControlPlugin/#value_1","text":"","title":"Value"},{"location":"plugins/FirmwareControlPlugin/#result_3","text":"Name Type Description result integer Available free space in bytes","title":"Result"},{"location":"plugins/FirmwareControlPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/FirmwareControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.downloadsize\" }","title":"Get Request"},{"location":"plugins/FirmwareControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 315576 }","title":"Get Response"},{"location":"plugins/FirmwareControlPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the FirmwareControl plugin: FirmwareControl interface events: Notification Description upgradeprogress Notifies progress of upgrade","title":"Notifications"},{"location":"plugins/FirmwareControlPlugin/#upgradeprogress-notification","text":"Notifies progress of upgrade.","title":"upgradeprogress notification"},{"location":"plugins/FirmwareControlPlugin/#parameters_2","text":"Name Type Description params object ... params.status string Upgrade status params.error string Reason of error params.progress integer Progress of upgrade (number of bytes transferred during download or percentage of completion during install","title":"Parameters"},{"location":"plugins/FirmwareControlPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/FirmwareControlPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"FirmwareControl.1.register\", \"params\": { \"event\": \"upgradeprogress\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/FirmwareControlPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.upgradeprogress\", \"params\": { \"status\": \"completed\", \"error\": \"operationotsupported\", \"progress\": 89 } }","title":"Message"},{"location":"plugins/IOConnectorPlugin/","text":"IO Connector Plugin Version: 1.0 Status: IOConnector plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Properties Notifications Introduction Scope This document describes purpose and functionality of the IOConnector plugin. It includes detailed specification about its configuration, properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface GPIO General-Purpose Input/Output HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The IO Connector plugin provides access to GPIO pins. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: IOConnector ) classname string Class name: IOConnector locator string Library name: libWPEIOConnector.so startmode string Determines in which state the plugin should be moved to at startup of the framework pins array List of GPIO pins available on the system pins[#] object Pin properties pins[#].id integer Pin ID pins[#].mode string Pin mode pins[#]?.activelow boolean (optional) Denotes if pin is active in low state (default: false ) Interfaces This plugin implements the following interfaces: IOConnector.json (version 1.0.0) (uncompliant-extended format) Properties The following properties are provided by the IOConnector plugin: IOConnector interface properties: Property Description pin GPIO pin value pin property Provides access to the GPIO pin value. Also see: activity Value Name Type Description (property) integer Value of the pin The pin id argument shall be passed as the index to the property, e.g. IOConnector.1.pin@<pin id> . Result Name Type Description result integer Value of the pin Errors Message Description ERROR_UNKNOWN_KEY Unknown pin ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\", \"params\": 1 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOConnector plugin: IOConnector interface events: Notification Description activity Notifies about GPIO pin activity activity notification Notifies about GPIO pin activity. Description Register to this event to be notified about pin value changes Parameters Name Type Description params object ... params.value integer Value of the pin The pin ID argument will be passed within the designator, e.g. 189.client.activity . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.register\", \"params\": { \"event\": \"activity\", \"id\": \"189.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"189.client.activity\", \"params\": { \"value\": 1 } }","title":"IO Connector Plugin"},{"location":"plugins/IOConnectorPlugin/#io-connector-plugin","text":"Version: 1.0 Status: IOConnector plugin for Thunder framework.","title":"IO Connector Plugin"},{"location":"plugins/IOConnectorPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Properties Notifications","title":"Table of Contents"},{"location":"plugins/IOConnectorPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/IOConnectorPlugin/#scope","text":"This document describes purpose and functionality of the IOConnector plugin. It includes detailed specification about its configuration, properties provided and notifications sent.","title":"Scope"},{"location":"plugins/IOConnectorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/IOConnectorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface GPIO General-Purpose Input/Output HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/IOConnectorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/IOConnectorPlugin/#description","text":"The IO Connector plugin provides access to GPIO pins. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/IOConnectorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: IOConnector ) classname string Class name: IOConnector locator string Library name: libWPEIOConnector.so startmode string Determines in which state the plugin should be moved to at startup of the framework pins array List of GPIO pins available on the system pins[#] object Pin properties pins[#].id integer Pin ID pins[#].mode string Pin mode pins[#]?.activelow boolean (optional) Denotes if pin is active in low state (default: false )","title":"Configuration"},{"location":"plugins/IOConnectorPlugin/#interfaces","text":"This plugin implements the following interfaces: IOConnector.json (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/IOConnectorPlugin/#properties","text":"The following properties are provided by the IOConnector plugin: IOConnector interface properties: Property Description pin GPIO pin value","title":"Properties"},{"location":"plugins/IOConnectorPlugin/#pin-property","text":"Provides access to the GPIO pin value. Also see: activity","title":"pin property"},{"location":"plugins/IOConnectorPlugin/#value","text":"Name Type Description (property) integer Value of the pin The pin id argument shall be passed as the index to the property, e.g. IOConnector.1.pin@<pin id> .","title":"Value"},{"location":"plugins/IOConnectorPlugin/#result","text":"Name Type Description result integer Value of the pin","title":"Result"},{"location":"plugins/IOConnectorPlugin/#errors","text":"Message Description ERROR_UNKNOWN_KEY Unknown pin ID given","title":"Errors"},{"location":"plugins/IOConnectorPlugin/#example","text":"","title":"Example"},{"location":"plugins/IOConnectorPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\" }","title":"Get Request"},{"location":"plugins/IOConnectorPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 1 }","title":"Get Response"},{"location":"plugins/IOConnectorPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.pin@189\", \"params\": 1 }","title":"Set Request"},{"location":"plugins/IOConnectorPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/IOConnectorPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the IOConnector plugin: IOConnector interface events: Notification Description activity Notifies about GPIO pin activity","title":"Notifications"},{"location":"plugins/IOConnectorPlugin/#activity-notification","text":"Notifies about GPIO pin activity.","title":"activity notification"},{"location":"plugins/IOConnectorPlugin/#description_1","text":"Register to this event to be notified about pin value changes","title":"Description"},{"location":"plugins/IOConnectorPlugin/#parameters","text":"Name Type Description params object ... params.value integer Value of the pin The pin ID argument will be passed within the designator, e.g. 189.client.activity .","title":"Parameters"},{"location":"plugins/IOConnectorPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/IOConnectorPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"IOConnector.1.register\", \"params\": { \"event\": \"activity\", \"id\": \"189.client\" } }","title":"Registration"},{"location":"plugins/IOConnectorPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"189.client.activity\", \"params\": { \"value\": 1 } }","title":"Message"},{"location":"plugins/LocationSyncPlugin/","text":"Location Sync Plugin Version: 1.0 Status: LocationSync plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the LocationSync plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The LocationSync plugin provides geo-location functionality. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: LocationSync ) classname string Class name: LocationSync locator string Library name: libWPELocationSync.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.interval integer (optional) Maximum time duration between each request to the Location Server (default: 10) configuration?.retries integer (optional) Maximum number of request reties to the Location Server (default:20) configuration?.source string (optional) URI of the Location Server (default:\"http://jsonip.metrological.com/?maf=true\") configuration?.timezone string (optional) With this the timezone can be overridden, otherwise taken from location (note can als be overriden with JSONRPC call) Interfaces This plugin implements the following interfaces: ITimeZone ( ITimeZone.h ) (version 1.0.0) (compliant format) LocationSync.json (version 1.0.0) (compliant format) Methods The following methods are provided by the LocationSync plugin: LocationSync interface methods: Method Description sync Synchronizes the location sync method Synchronizes the location. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to synchdonize the location ERROR_UNAVAILABLE Unavailable locator ERROR_INCORRECT_URL Incorrect URL ERROR_INPROGRESS Probing in progress Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.sync\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the LocationSync plugin: TimeZone interface properties: Property Description timezone TimeZone for system LocationSync interface properties: Property Description location (read-only) Location information timezone property Provides access to the timeZone for system. Value Name Type Description (property) string TimeZone for system Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.timezone\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.timezone\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } location property Provides access to the location information. This property is read-only . Value Result Name Type Description result object Location information result.city string City name result.country string Country name result.region string Region name result.timezone string Time zone information result.publicip string Public IP Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.location\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"city\": \"Wroclaw\", \"country\": \"Poland\", \"region\": \"Wroclaw\", \"timezone\": \"CET-1CEST,M3.5.0,M10.5.0/3\", \"publicip\": \"78.11.117.118\" } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LocationSync plugin: TimeZone interface events: Notification Description timezonechanged TimeZone was set for the system LocationSync interface events: Notification Description locationchange Signals a location change timezonechanged notification TimeZone was set for the system. Parameters Name Type Description params string New TimeZone Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.register\", \"params\": { \"event\": \"timezonechanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.timezonechanged\", \"params\": \"...\" } locationchange notification Signals a location change. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.register\", \"params\": { \"event\": \"locationchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.locationchange\" }","title":"Location Sync Plugin"},{"location":"plugins/LocationSyncPlugin/#location-sync-plugin","text":"Version: 1.0 Status: LocationSync plugin for Thunder framework.","title":"Location Sync Plugin"},{"location":"plugins/LocationSyncPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/LocationSyncPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/LocationSyncPlugin/#scope","text":"This document describes purpose and functionality of the LocationSync plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/LocationSyncPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/LocationSyncPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/LocationSyncPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/LocationSyncPlugin/#description","text":"The LocationSync plugin provides geo-location functionality. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/LocationSyncPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: LocationSync ) classname string Class name: LocationSync locator string Library name: libWPELocationSync.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.interval integer (optional) Maximum time duration between each request to the Location Server (default: 10) configuration?.retries integer (optional) Maximum number of request reties to the Location Server (default:20) configuration?.source string (optional) URI of the Location Server (default:\"http://jsonip.metrological.com/?maf=true\") configuration?.timezone string (optional) With this the timezone can be overridden, otherwise taken from location (note can als be overriden with JSONRPC call)","title":"Configuration"},{"location":"plugins/LocationSyncPlugin/#interfaces","text":"This plugin implements the following interfaces: ITimeZone ( ITimeZone.h ) (version 1.0.0) (compliant format) LocationSync.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/LocationSyncPlugin/#methods","text":"The following methods are provided by the LocationSync plugin: LocationSync interface methods: Method Description sync Synchronizes the location","title":"Methods"},{"location":"plugins/LocationSyncPlugin/#sync-method","text":"Synchronizes the location.","title":"sync method"},{"location":"plugins/LocationSyncPlugin/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/LocationSyncPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/LocationSyncPlugin/#errors","text":"Message Description ERROR_GENERAL Failed to synchdonize the location ERROR_UNAVAILABLE Unavailable locator ERROR_INCORRECT_URL Incorrect URL ERROR_INPROGRESS Probing in progress","title":"Errors"},{"location":"plugins/LocationSyncPlugin/#example","text":"","title":"Example"},{"location":"plugins/LocationSyncPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.sync\" }","title":"Request"},{"location":"plugins/LocationSyncPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/LocationSyncPlugin/#properties","text":"The following properties are provided by the LocationSync plugin: TimeZone interface properties: Property Description timezone TimeZone for system LocationSync interface properties: Property Description location (read-only) Location information","title":"Properties"},{"location":"plugins/LocationSyncPlugin/#timezone-property","text":"Provides access to the timeZone for system.","title":"timezone property"},{"location":"plugins/LocationSyncPlugin/#value","text":"Name Type Description (property) string TimeZone for system","title":"Value"},{"location":"plugins/LocationSyncPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/LocationSyncPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.timezone\" }","title":"Get Request"},{"location":"plugins/LocationSyncPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"plugins/LocationSyncPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.timezone\", \"params\": \"...\" }","title":"Set Request"},{"location":"plugins/LocationSyncPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/LocationSyncPlugin/#location-property","text":"Provides access to the location information. This property is read-only .","title":"location property"},{"location":"plugins/LocationSyncPlugin/#value_1","text":"","title":"Value"},{"location":"plugins/LocationSyncPlugin/#result_1","text":"Name Type Description result object Location information result.city string City name result.country string Country name result.region string Region name result.timezone string Time zone information result.publicip string Public IP","title":"Result"},{"location":"plugins/LocationSyncPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/LocationSyncPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.location\" }","title":"Get Request"},{"location":"plugins/LocationSyncPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"city\": \"Wroclaw\", \"country\": \"Poland\", \"region\": \"Wroclaw\", \"timezone\": \"CET-1CEST,M3.5.0,M10.5.0/3\", \"publicip\": \"78.11.117.118\" } }","title":"Get Response"},{"location":"plugins/LocationSyncPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the LocationSync plugin: TimeZone interface events: Notification Description timezonechanged TimeZone was set for the system LocationSync interface events: Notification Description locationchange Signals a location change","title":"Notifications"},{"location":"plugins/LocationSyncPlugin/#timezonechanged-notification","text":"TimeZone was set for the system.","title":"timezonechanged notification"},{"location":"plugins/LocationSyncPlugin/#parameters_1","text":"Name Type Description params string New TimeZone","title":"Parameters"},{"location":"plugins/LocationSyncPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/LocationSyncPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.register\", \"params\": { \"event\": \"timezonechanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/LocationSyncPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.timezonechanged\", \"params\": \"...\" }","title":"Message"},{"location":"plugins/LocationSyncPlugin/#locationchange-notification","text":"Signals a location change.","title":"locationchange notification"},{"location":"plugins/LocationSyncPlugin/#parameters_2","text":"This notification carries no parameters.","title":"Parameters"},{"location":"plugins/LocationSyncPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/LocationSyncPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"LocationSync.1.register\", \"params\": { \"event\": \"locationchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/LocationSyncPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.locationchange\" }","title":"Message"},{"location":"plugins/MessageControlPlugin/","text":"MessageControl Plugin Version: 1.0 Status: MessageControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Introduction Scope This document describes purpose and functionality of the MessageControl plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The MessageControl plugin allows reading of the traces from Thunder, and controlling them tracing and logging. Allows for outputting logging messages to the websocket. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: MessageControl ) classname string Class name: MessageControl locator string Library name: libThunderMessageControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework console boolean (optional) Enables message output messages to the console syslog boolean (optional) Enables message ouutput to syslog filepath string (optional) Path to file (inside VolatilePath) where messages will be stored abbreviated boolean (optional) Denotes if the messages should be abbreviated maxexportconnections integer (optional) Specifies to how many websockets can the messages be outputted remote object (optional) ... remote.port integer Port remote?.bindig string (optional) Binding address Interfaces This plugin implements the following interfaces: IMessageControl ( IMessageControl.h ) (version 1.0.0) (compliant format) Methods The following methods are provided by the MessageControl plugin: MessageControl interface methods: Method Description enable Enables/disables a message control enable method Enables/disables a message control. Parameters Name Type Description params object ... params.type string Message type (must be one of the following: Invalid, Logging, OperationalStream, Reporting, Tracing ) params.category string Name of the message category params.module string Name of the module the message is originating from params.enabled boolean Denotes if control should be enabled (true) or disabled (false) Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.enable\", \"params\": { \"type\": \"Invalid\", \"category\": \"Information\", \"module\": \"Plugin_BluetoothControl\", \"enabled\": false } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the MessageControl plugin: MessageControl interface properties: Property Description modules (read-only) Retrieves a list of current message modules controls (read-only) Retrieves a list of current message controls for a specific module modules property Provides access to the retrieves a list of current message modules. This property is read-only . Value Result Name Type Description result array Retrieves a list of current message modules result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.modules\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } controls property Provides access to the retrieves a list of current message controls for a specific module. This property is read-only . Value The module argument shall be passed as the index to the property, e.g. MessageControl.1.controls@<module> . Result Name Type Description result array Retrieves a list of current message controls for a specific module result[#] object ... result[#].type string Type of message (must be one of the following: Invalid, Logging, OperationalStream, Reporting, Tracing ) result[#].category string Name of the message category result[#].module string Name of the module the message is originating from result[#].enabled boolean Denotes if the control is enabled (true) or disabled (false) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.controls@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"Invalid\", \"category\": \"Information\", \"module\": \"Plugin_BluetoothControl\", \"enabled\": false } ] }","title":"MessageControl Plugin"},{"location":"plugins/MessageControlPlugin/#messagecontrol-plugin","text":"Version: 1.0 Status: MessageControl plugin for Thunder framework.","title":"MessageControl Plugin"},{"location":"plugins/MessageControlPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties","title":"Table of Contents"},{"location":"plugins/MessageControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/MessageControlPlugin/#scope","text":"This document describes purpose and functionality of the MessageControl plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"plugins/MessageControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/MessageControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/MessageControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/MessageControlPlugin/#description","text":"The MessageControl plugin allows reading of the traces from Thunder, and controlling them tracing and logging. Allows for outputting logging messages to the websocket. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/MessageControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: MessageControl ) classname string Class name: MessageControl locator string Library name: libThunderMessageControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework console boolean (optional) Enables message output messages to the console syslog boolean (optional) Enables message ouutput to syslog filepath string (optional) Path to file (inside VolatilePath) where messages will be stored abbreviated boolean (optional) Denotes if the messages should be abbreviated maxexportconnections integer (optional) Specifies to how many websockets can the messages be outputted remote object (optional) ... remote.port integer Port remote?.bindig string (optional) Binding address","title":"Configuration"},{"location":"plugins/MessageControlPlugin/#interfaces","text":"This plugin implements the following interfaces: IMessageControl ( IMessageControl.h ) (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/MessageControlPlugin/#methods","text":"The following methods are provided by the MessageControl plugin: MessageControl interface methods: Method Description enable Enables/disables a message control","title":"Methods"},{"location":"plugins/MessageControlPlugin/#enable-method","text":"Enables/disables a message control.","title":"enable method"},{"location":"plugins/MessageControlPlugin/#parameters","text":"Name Type Description params object ... params.type string Message type (must be one of the following: Invalid, Logging, OperationalStream, Reporting, Tracing ) params.category string Name of the message category params.module string Name of the module the message is originating from params.enabled boolean Denotes if control should be enabled (true) or disabled (false)","title":"Parameters"},{"location":"plugins/MessageControlPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/MessageControlPlugin/#example","text":"","title":"Example"},{"location":"plugins/MessageControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.enable\", \"params\": { \"type\": \"Invalid\", \"category\": \"Information\", \"module\": \"Plugin_BluetoothControl\", \"enabled\": false } }","title":"Request"},{"location":"plugins/MessageControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/MessageControlPlugin/#properties","text":"The following properties are provided by the MessageControl plugin: MessageControl interface properties: Property Description modules (read-only) Retrieves a list of current message modules controls (read-only) Retrieves a list of current message controls for a specific module","title":"Properties"},{"location":"plugins/MessageControlPlugin/#modules-property","text":"Provides access to the retrieves a list of current message modules. This property is read-only .","title":"modules property"},{"location":"plugins/MessageControlPlugin/#value","text":"","title":"Value"},{"location":"plugins/MessageControlPlugin/#result_1","text":"Name Type Description result array Retrieves a list of current message modules result[#] string ...","title":"Result"},{"location":"plugins/MessageControlPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/MessageControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.modules\" }","title":"Get Request"},{"location":"plugins/MessageControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"plugins/MessageControlPlugin/#controls-property","text":"Provides access to the retrieves a list of current message controls for a specific module. This property is read-only .","title":"controls property"},{"location":"plugins/MessageControlPlugin/#value_1","text":"The module argument shall be passed as the index to the property, e.g. MessageControl.1.controls@<module> .","title":"Value"},{"location":"plugins/MessageControlPlugin/#result_2","text":"Name Type Description result array Retrieves a list of current message controls for a specific module result[#] object ... result[#].type string Type of message (must be one of the following: Invalid, Logging, OperationalStream, Reporting, Tracing ) result[#].category string Name of the message category result[#].module string Name of the module the message is originating from result[#].enabled boolean Denotes if the control is enabled (true) or disabled (false)","title":"Result"},{"location":"plugins/MessageControlPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/MessageControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"MessageControl.1.controls@xyz\" }","title":"Get Request"},{"location":"plugins/MessageControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"Invalid\", \"category\": \"Information\", \"module\": \"Plugin_BluetoothControl\", \"enabled\": false } ] }","title":"Get Response"},{"location":"plugins/MessengerPlugin/","text":"Messenger Plugin Version: 1.0 Status: Messenger plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Notifications Introduction Scope This document describes purpose and functionality of the Messenger plugin. It includes detailed specification about its configuration, methods provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Messenger allows exchanging text messages between users gathered in virtual rooms. The rooms are dynamically created and destroyed based on user attendance. Upon joining a room the client receives a unique token (room ID) to be used for sending and receiving the messages. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Messenger ) classname string Class name: Messenger locator string Library name: libThunderMessenger.so startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: IMessenger ( IMessenger.h ) (version 1.0.0) (compliant format) Methods The following methods are provided by the Messenger plugin: Messenger interface methods: Method Description join Joins a messaging room leave Leaves a messaging room send Sends a message to a messaging room join method Joins a messaging room. Description If the specified room does not exist, then it will be created. Parameters Name Type Description params object ... params.room string Name of the room to join params.user string Name of ther user to join as params?.secure string (optional) Denotes if the room is secure (by default not secure) (must be one of the following: insecure, secure ) params?.acl array (optional) List of URL origins with possible wildcards params?.acl[#] string (optional) ... Result Name Type Description result string Token for accessing the room (unique for a user) Errors Message Description ERROR_ILLEGAL_STATE User name is already taken (i.e. the user has already joined the room) ERROR_BAD_REQUEST User name or room name is invalid ERROR_PRIVILEGED_REQUEST Room security errors Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.join\", \"params\": { \"room\": \"Lounge\", \"user\": \"Bob\", \"secure\": \"insecure\", \"acl\": [ \"...\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1e217990dd1cd4f66124\" } leave method Leaves a messaging room. Description The room ID becomes invalid after this call. If there are no more users, the room will be destroyed and related resources freed. Parameters Name Type Description params object ... params.roomid string Token of the room to leave Result Name Type Description result null Always null Errors Message Description ERROR_UNKNOWN_KEY The room token is invalid Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.leave\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } send method Sends a message to a messaging room. Parameters Name Type Description params object ... params.roomid string Token of the room to send the message to params.message string Contents of the message to send Result Name Type Description result null Always null Errors Message Description ERROR_UNKNOWN_KEY The room token is invalid Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.send\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\", \"message\": \"Hello!\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Messenger plugin: Messenger interface events: Notification Description roomupdate Notifies of room status changes userupdate Notifies of user status changes message Notifies of messages sent the the room roomupdate notification Notifies of room status changes. Description Immediately after registering to this notification the listener will sequentially receive updates of all rooms that have been created so far. If applicable, this notification may be sent out during registration, reflecting the current status. Parameters Name Type Description params object ... params.room string Name of the room that has changed its status params.action string New room status (must be one of the following: created, destroyed ) params.secure string Denotes if the room is secure (must be one of the following: insecure, secure ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"roomupdate\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.roomupdate\", \"params\": { \"room\": \"Lounge\", \"action\": \"created\", \"secure\": \"insecure\" } } userupdate notification Notifies of user status changes. Description Immediately after registering to this notification the listener will sequentially receive updates of all users that have joined the room so far. If applicable, this notification may be sent out during registration, reflecting the current status. Parameters Name Type Description params object ... params.user string Name of the user that has changed its status params.action string New user status (must be one of the following: joined, left ) The roomId argument will be passed within the designator, e.g. 1e217990dd1cd4f66124.client.userupdate . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"userupdate\", \"id\": \"1e217990dd1cd4f66124.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.userupdate\", \"params\": { \"user\": \"Bob\", \"action\": \"joined\" } } message notification Notifies of messages sent the the room. Parameters Name Type Description params object ... params.user string Name of the user that has sent the message params.message string Contents of the sent message The roomId argument will be passed within the designator, e.g. 1e217990dd1cd4f66124.client.message . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"message\", \"id\": \"1e217990dd1cd4f66124.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.message\", \"params\": { \"user\": \"Bob\", \"message\": \"Hello!\" } }","title":"Messenger Plugin"},{"location":"plugins/MessengerPlugin/#messenger-plugin","text":"Version: 1.0 Status: Messenger plugin for Thunder framework.","title":"Messenger Plugin"},{"location":"plugins/MessengerPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Notifications","title":"Table of Contents"},{"location":"plugins/MessengerPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/MessengerPlugin/#scope","text":"This document describes purpose and functionality of the Messenger plugin. It includes detailed specification about its configuration, methods provided and notifications sent.","title":"Scope"},{"location":"plugins/MessengerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/MessengerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/MessengerPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/MessengerPlugin/#description","text":"The Messenger allows exchanging text messages between users gathered in virtual rooms. The rooms are dynamically created and destroyed based on user attendance. Upon joining a room the client receives a unique token (room ID) to be used for sending and receiving the messages. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/MessengerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Messenger ) classname string Class name: Messenger locator string Library name: libThunderMessenger.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/MessengerPlugin/#interfaces","text":"This plugin implements the following interfaces: IMessenger ( IMessenger.h ) (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/MessengerPlugin/#methods","text":"The following methods are provided by the Messenger plugin: Messenger interface methods: Method Description join Joins a messaging room leave Leaves a messaging room send Sends a message to a messaging room","title":"Methods"},{"location":"plugins/MessengerPlugin/#join-method","text":"Joins a messaging room.","title":"join method"},{"location":"plugins/MessengerPlugin/#description_1","text":"If the specified room does not exist, then it will be created.","title":"Description"},{"location":"plugins/MessengerPlugin/#parameters","text":"Name Type Description params object ... params.room string Name of the room to join params.user string Name of ther user to join as params?.secure string (optional) Denotes if the room is secure (by default not secure) (must be one of the following: insecure, secure ) params?.acl array (optional) List of URL origins with possible wildcards params?.acl[#] string (optional) ...","title":"Parameters"},{"location":"plugins/MessengerPlugin/#result","text":"Name Type Description result string Token for accessing the room (unique for a user)","title":"Result"},{"location":"plugins/MessengerPlugin/#errors","text":"Message Description ERROR_ILLEGAL_STATE User name is already taken (i.e. the user has already joined the room) ERROR_BAD_REQUEST User name or room name is invalid ERROR_PRIVILEGED_REQUEST Room security errors","title":"Errors"},{"location":"plugins/MessengerPlugin/#example","text":"","title":"Example"},{"location":"plugins/MessengerPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.join\", \"params\": { \"room\": \"Lounge\", \"user\": \"Bob\", \"secure\": \"insecure\", \"acl\": [ \"...\" ] } }","title":"Request"},{"location":"plugins/MessengerPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"1e217990dd1cd4f66124\" }","title":"Response"},{"location":"plugins/MessengerPlugin/#leave-method","text":"Leaves a messaging room.","title":"leave method"},{"location":"plugins/MessengerPlugin/#description_2","text":"The room ID becomes invalid after this call. If there are no more users, the room will be destroyed and related resources freed.","title":"Description"},{"location":"plugins/MessengerPlugin/#parameters_1","text":"Name Type Description params object ... params.roomid string Token of the room to leave","title":"Parameters"},{"location":"plugins/MessengerPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/MessengerPlugin/#errors_1","text":"Message Description ERROR_UNKNOWN_KEY The room token is invalid","title":"Errors"},{"location":"plugins/MessengerPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/MessengerPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.leave\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\" } }","title":"Request"},{"location":"plugins/MessengerPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/MessengerPlugin/#send-method","text":"Sends a message to a messaging room.","title":"send method"},{"location":"plugins/MessengerPlugin/#parameters_2","text":"Name Type Description params object ... params.roomid string Token of the room to send the message to params.message string Contents of the message to send","title":"Parameters"},{"location":"plugins/MessengerPlugin/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/MessengerPlugin/#errors_2","text":"Message Description ERROR_UNKNOWN_KEY The room token is invalid","title":"Errors"},{"location":"plugins/MessengerPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/MessengerPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.send\", \"params\": { \"roomid\": \"1e217990dd1cd4f66124\", \"message\": \"Hello!\" } }","title":"Request"},{"location":"plugins/MessengerPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/MessengerPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Messenger plugin: Messenger interface events: Notification Description roomupdate Notifies of room status changes userupdate Notifies of user status changes message Notifies of messages sent the the room","title":"Notifications"},{"location":"plugins/MessengerPlugin/#roomupdate-notification","text":"Notifies of room status changes.","title":"roomupdate notification"},{"location":"plugins/MessengerPlugin/#description_3","text":"Immediately after registering to this notification the listener will sequentially receive updates of all rooms that have been created so far. If applicable, this notification may be sent out during registration, reflecting the current status.","title":"Description"},{"location":"plugins/MessengerPlugin/#parameters_3","text":"Name Type Description params object ... params.room string Name of the room that has changed its status params.action string New room status (must be one of the following: created, destroyed ) params.secure string Denotes if the room is secure (must be one of the following: insecure, secure )","title":"Parameters"},{"location":"plugins/MessengerPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/MessengerPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"roomupdate\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/MessengerPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.roomupdate\", \"params\": { \"room\": \"Lounge\", \"action\": \"created\", \"secure\": \"insecure\" } }","title":"Message"},{"location":"plugins/MessengerPlugin/#userupdate-notification","text":"Notifies of user status changes.","title":"userupdate notification"},{"location":"plugins/MessengerPlugin/#description_4","text":"Immediately after registering to this notification the listener will sequentially receive updates of all users that have joined the room so far. If applicable, this notification may be sent out during registration, reflecting the current status.","title":"Description"},{"location":"plugins/MessengerPlugin/#parameters_4","text":"Name Type Description params object ... params.user string Name of the user that has changed its status params.action string New user status (must be one of the following: joined, left ) The roomId argument will be passed within the designator, e.g. 1e217990dd1cd4f66124.client.userupdate .","title":"Parameters"},{"location":"plugins/MessengerPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/MessengerPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"userupdate\", \"id\": \"1e217990dd1cd4f66124.client\" } }","title":"Registration"},{"location":"plugins/MessengerPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.userupdate\", \"params\": { \"user\": \"Bob\", \"action\": \"joined\" } }","title":"Message"},{"location":"plugins/MessengerPlugin/#message-notification","text":"Notifies of messages sent the the room.","title":"message notification"},{"location":"plugins/MessengerPlugin/#parameters_5","text":"Name Type Description params object ... params.user string Name of the user that has sent the message params.message string Contents of the sent message The roomId argument will be passed within the designator, e.g. 1e217990dd1cd4f66124.client.message .","title":"Parameters"},{"location":"plugins/MessengerPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/MessengerPlugin/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Messenger.1.register\", \"params\": { \"event\": \"message\", \"id\": \"1e217990dd1cd4f66124.client\" } }","title":"Registration"},{"location":"plugins/MessengerPlugin/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"1e217990dd1cd4f66124.client.message\", \"params\": { \"user\": \"Bob\", \"message\": \"Hello!\" } }","title":"Message"},{"location":"plugins/MonitorPlugin/","text":"Monitor Plugin Version: 1.0 Status: Monitor plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Monitor plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Monitor plugin provides a watchdog-like functionality for framework processes. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Monitor ) classname string Class name: Monitor locator string Library name: libThunderMonitor.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.observables array (optional) List of observable plugin details configuration?.observables[#] object (optional) ... configuration?.observables[#]?.callsign string (optional) Callsign of the plugin to be monitored configuration?.observables[#]?.memory integer (optional) Interval(in seconds) for a memory measurement configuration?.observables[#]?.memorylimit integer (optional) Memory threshold in bytes configuration?.observables[#]?.operational integer (optional) Interval(in seconds) to check the monitored processes configuration?.observables[#]?.restart object (optional) Restart limits for failures applying to the plugin configuration?.observables[#]?.restart?.window integer (optional) Time period(in seconds) within which failures must happen for the limit to be considered crossed configuration?.observables[#]?.restart?.limit integer (optional) Maximum number or restarts to be attempted Interfaces This plugin implements the following interfaces: Monitor.json (version 1.0.0) (compliant format) Methods The following methods are provided by the Monitor plugin: Monitor interface methods: Method Description restartlimits Sets new restart limits for a service resetstats Resets memory and process statistics for a single service watched by the Monitor restartlimits method Sets new restart limits for a service. Parameters Name Type Description params object ... params.callsign string The callsign of a service to reset measurements snapshot of params.restart object Restart limits for failures applying to the service params.restart.limit integer Maximum number or restarts to be attempted params.restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed Result Name Type Description result null Always null (default: None ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.restartlimits\", \"params\": { \"callsign\": \"WebServer\", \"restart\": { \"limit\": 3, \"window\": 60 } } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } resetstats method Resets memory and process statistics for a single service watched by the Monitor. Parameters Name Type Description params object ... params.callsign string The callsign of a service to reset statistics of Result Name Type Description result object Measurements for the service before reset result.measurements object Measurements for the service result.measurements.resident object Resident memory measurement result.measurements.resident.min integer Minimal value measured result.measurements.resident.max integer Maximal value measured result.measurements.resident.average integer Average of all measurements result.measurements.resident.last integer Last measured value result.measurements.allocated object Allocated memory measurement result.measurements.allocated.min integer Minimal value measured result.measurements.allocated.max integer Maximal value measured result.measurements.allocated.average integer Average of all measurements result.measurements.allocated.last integer Last measured value result.measurements.shared object Shared memory measurement result.measurements.shared.min integer Minimal value measured result.measurements.shared.max integer Maximal value measured result.measurements.shared.average integer Average of all measurements result.measurements.shared.last integer Last measured value result.measurements.process object Processes measurement result.measurements.process.min integer Minimal value measured result.measurements.process.max integer Maximal value measured result.measurements.process.average integer Average of all measurements result.measurements.process.last integer Last measured value result.measurements.operational boolean Whether the service is up and running result.measurements.count integer Number of measurements result.observable string A callsign of the watched service result.restart object Restart limits for failures applying to the service result.restart.limit integer Maximum number or restarts to be attempted result.restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.resetstats\", \"params\": { \"callsign\": \"WebServer\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } } Properties The following properties are provided by the Monitor plugin: Monitor interface properties: Property Description status (read-only) Service statistics status property Provides access to the service statistics. This property is read-only . Value The callsign argument shall be passed as the index to the property, e.g. Monitor.1.status@<callsign> . If omitted then all observed objects will be returned on read. Result Name Type Description result array Service statistics result[#] object ... result[#].measurements object Measurements for the service result[#].measurements.resident object Resident memory measurement result[#].measurements.resident.min integer Minimal value measured result[#].measurements.resident.max integer Maximal value measured result[#].measurements.resident.average integer Average of all measurements result[#].measurements.resident.last integer Last measured value result[#].measurements.allocated object Allocated memory measurement result[#].measurements.allocated.min integer Minimal value measured result[#].measurements.allocated.max integer Maximal value measured result[#].measurements.allocated.average integer Average of all measurements result[#].measurements.allocated.last integer Last measured value result[#].measurements.shared object Shared memory measurement result[#].measurements.shared.min integer Minimal value measured result[#].measurements.shared.max integer Maximal value measured result[#].measurements.shared.average integer Average of all measurements result[#].measurements.shared.last integer Last measured value result[#].measurements.process object Processes measurement result[#].measurements.process.min integer Minimal value measured result[#].measurements.process.max integer Maximal value measured result[#].measurements.process.average integer Average of all measurements result[#].measurements.process.last integer Last measured value result[#].measurements.operational boolean Whether the service is up and running result[#].measurements.count integer Number of measurements result[#].observable string A callsign of the watched service result[#].restart object Restart limits for failures applying to the service result[#].restart.limit integer Maximum number or restarts to be attempted result[#].restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.status@WebServer\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } ] } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Monitor plugin: Monitor interface events: Notification Description action Signals an action taken by the Monitor action notification Signals an action taken by the Monitor. Parameters Name Type Description params object ... params.callsign string Callsign of the service the Monitor acted upon params.action string The action executed by the Monitor on a service. One of: \"Activate\", \"Deactivate\", \"StoppedRestarting\" params.reason string A message describing the reason the action was taken Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.register\", \"params\": { \"event\": \"action\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.action\", \"params\": { \"callsign\": \"WebServer\", \"action\": \"Deactivate\", \"reason\": \"EXCEEDED_MEMORY\" } }","title":"Monitor Plugin"},{"location":"plugins/MonitorPlugin/#monitor-plugin","text":"Version: 1.0 Status: Monitor plugin for Thunder framework.","title":"Monitor Plugin"},{"location":"plugins/MonitorPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/MonitorPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/MonitorPlugin/#scope","text":"This document describes purpose and functionality of the Monitor plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/MonitorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/MonitorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/MonitorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/MonitorPlugin/#description","text":"The Monitor plugin provides a watchdog-like functionality for framework processes. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/MonitorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Monitor ) classname string Class name: Monitor locator string Library name: libThunderMonitor.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.observables array (optional) List of observable plugin details configuration?.observables[#] object (optional) ... configuration?.observables[#]?.callsign string (optional) Callsign of the plugin to be monitored configuration?.observables[#]?.memory integer (optional) Interval(in seconds) for a memory measurement configuration?.observables[#]?.memorylimit integer (optional) Memory threshold in bytes configuration?.observables[#]?.operational integer (optional) Interval(in seconds) to check the monitored processes configuration?.observables[#]?.restart object (optional) Restart limits for failures applying to the plugin configuration?.observables[#]?.restart?.window integer (optional) Time period(in seconds) within which failures must happen for the limit to be considered crossed configuration?.observables[#]?.restart?.limit integer (optional) Maximum number or restarts to be attempted","title":"Configuration"},{"location":"plugins/MonitorPlugin/#interfaces","text":"This plugin implements the following interfaces: Monitor.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/MonitorPlugin/#methods","text":"The following methods are provided by the Monitor plugin: Monitor interface methods: Method Description restartlimits Sets new restart limits for a service resetstats Resets memory and process statistics for a single service watched by the Monitor","title":"Methods"},{"location":"plugins/MonitorPlugin/#restartlimits-method","text":"Sets new restart limits for a service.","title":"restartlimits method"},{"location":"plugins/MonitorPlugin/#parameters","text":"Name Type Description params object ... params.callsign string The callsign of a service to reset measurements snapshot of params.restart object Restart limits for failures applying to the service params.restart.limit integer Maximum number or restarts to be attempted params.restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed","title":"Parameters"},{"location":"plugins/MonitorPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/MonitorPlugin/#example","text":"","title":"Example"},{"location":"plugins/MonitorPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.restartlimits\", \"params\": { \"callsign\": \"WebServer\", \"restart\": { \"limit\": 3, \"window\": 60 } } }","title":"Request"},{"location":"plugins/MonitorPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/MonitorPlugin/#resetstats-method","text":"Resets memory and process statistics for a single service watched by the Monitor.","title":"resetstats method"},{"location":"plugins/MonitorPlugin/#parameters_1","text":"Name Type Description params object ... params.callsign string The callsign of a service to reset statistics of","title":"Parameters"},{"location":"plugins/MonitorPlugin/#result_1","text":"Name Type Description result object Measurements for the service before reset result.measurements object Measurements for the service result.measurements.resident object Resident memory measurement result.measurements.resident.min integer Minimal value measured result.measurements.resident.max integer Maximal value measured result.measurements.resident.average integer Average of all measurements result.measurements.resident.last integer Last measured value result.measurements.allocated object Allocated memory measurement result.measurements.allocated.min integer Minimal value measured result.measurements.allocated.max integer Maximal value measured result.measurements.allocated.average integer Average of all measurements result.measurements.allocated.last integer Last measured value result.measurements.shared object Shared memory measurement result.measurements.shared.min integer Minimal value measured result.measurements.shared.max integer Maximal value measured result.measurements.shared.average integer Average of all measurements result.measurements.shared.last integer Last measured value result.measurements.process object Processes measurement result.measurements.process.min integer Minimal value measured result.measurements.process.max integer Maximal value measured result.measurements.process.average integer Average of all measurements result.measurements.process.last integer Last measured value result.measurements.operational boolean Whether the service is up and running result.measurements.count integer Number of measurements result.observable string A callsign of the watched service result.restart object Restart limits for failures applying to the service result.restart.limit integer Maximum number or restarts to be attempted result.restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed","title":"Result"},{"location":"plugins/MonitorPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/MonitorPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.resetstats\", \"params\": { \"callsign\": \"WebServer\" } }","title":"Request"},{"location":"plugins/MonitorPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } }","title":"Response"},{"location":"plugins/MonitorPlugin/#properties","text":"The following properties are provided by the Monitor plugin: Monitor interface properties: Property Description status (read-only) Service statistics","title":"Properties"},{"location":"plugins/MonitorPlugin/#status-property","text":"Provides access to the service statistics. This property is read-only .","title":"status property"},{"location":"plugins/MonitorPlugin/#value","text":"The callsign argument shall be passed as the index to the property, e.g. Monitor.1.status@<callsign> . If omitted then all observed objects will be returned on read.","title":"Value"},{"location":"plugins/MonitorPlugin/#result_2","text":"Name Type Description result array Service statistics result[#] object ... result[#].measurements object Measurements for the service result[#].measurements.resident object Resident memory measurement result[#].measurements.resident.min integer Minimal value measured result[#].measurements.resident.max integer Maximal value measured result[#].measurements.resident.average integer Average of all measurements result[#].measurements.resident.last integer Last measured value result[#].measurements.allocated object Allocated memory measurement result[#].measurements.allocated.min integer Minimal value measured result[#].measurements.allocated.max integer Maximal value measured result[#].measurements.allocated.average integer Average of all measurements result[#].measurements.allocated.last integer Last measured value result[#].measurements.shared object Shared memory measurement result[#].measurements.shared.min integer Minimal value measured result[#].measurements.shared.max integer Maximal value measured result[#].measurements.shared.average integer Average of all measurements result[#].measurements.shared.last integer Last measured value result[#].measurements.process object Processes measurement result[#].measurements.process.min integer Minimal value measured result[#].measurements.process.max integer Maximal value measured result[#].measurements.process.average integer Average of all measurements result[#].measurements.process.last integer Last measured value result[#].measurements.operational boolean Whether the service is up and running result[#].measurements.count integer Number of measurements result[#].observable string A callsign of the watched service result[#].restart object Restart limits for failures applying to the service result[#].restart.limit integer Maximum number or restarts to be attempted result[#].restart.window integer Time period (in seconds) within which failures must happen for the limit to be considered crossed","title":"Result"},{"location":"plugins/MonitorPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/MonitorPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.status@WebServer\" }","title":"Get Request"},{"location":"plugins/MonitorPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"measurements\": { \"resident\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"allocated\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"shared\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"process\": { \"min\": 0, \"max\": 100, \"average\": 50, \"last\": 100 }, \"operational\": true, \"count\": 100 }, \"observable\": \"callsign\", \"restart\": { \"limit\": 3, \"window\": 60 } } ] }","title":"Get Response"},{"location":"plugins/MonitorPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Monitor plugin: Monitor interface events: Notification Description action Signals an action taken by the Monitor","title":"Notifications"},{"location":"plugins/MonitorPlugin/#action-notification","text":"Signals an action taken by the Monitor.","title":"action notification"},{"location":"plugins/MonitorPlugin/#parameters_2","text":"Name Type Description params object ... params.callsign string Callsign of the service the Monitor acted upon params.action string The action executed by the Monitor on a service. One of: \"Activate\", \"Deactivate\", \"StoppedRestarting\" params.reason string A message describing the reason the action was taken","title":"Parameters"},{"location":"plugins/MonitorPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/MonitorPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Monitor.1.register\", \"params\": { \"event\": \"action\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/MonitorPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.action\", \"params\": { \"callsign\": \"WebServer\", \"action\": \"Deactivate\", \"reason\": \"EXCEEDED_MEMORY\" } }","title":"Message"},{"location":"plugins/NetworkControlPlugin/","text":"Network Control Plugin Version: 1.0 Status: NetworkControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the NetworkControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Network Control plugin provides functionality for network interface management. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: NetworkControl ) classname string Class name: NetworkControl locator string Library name: libThunderNetworkControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.dnsfile string (optional) Path to DNS resolve file (default: /etc/resolv.conf) configuration?.response integer (optional) Maximum response time out of the DHCP server configuration?.retries integer (optional) Maximum number of retries to the DHCP server Interfaces This plugin implements the following interfaces: INetworkControl ( INetworkControl.h ) (version 1.0.0) (compliant format) Methods The following methods are provided by the NetworkControl plugin: NetworkControl interface methods: Method Description flush Flush and reload requested interface flush method Flush and reload requested interface. Parameters Name Type Description params object ... params.interface string Name of the interface to be flushed Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.flush\", \"params\": { \"interface\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the NetworkControl plugin: NetworkControl interface properties: Property Description interfaces (read-only) Currently available interfaces status (read-only) Status of requested interface network Network info of requested interface dns DNS list up Provides given requested interface is up or not interfaces property Provides access to the currently available interfaces. This property is read-only . Value Result Name Type Description result array Currently available interfaces result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.interfaces\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } status property Provides access to the status of requested interface. This property is read-only . Value The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.status@<interface> . Result Name Type Description result string Status of requested interface (must be one of the following: Available, Unavailable ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.status@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unavailable\" } network property Provides access to the network info of requested interface. Value Name Type Description (property) object Network info of requested interface (property).value array ... (property).value[#] object ... (property).value[#].address string IP Address (property).value[#].defaultgateway string Default Gateway (property).value[#].mask integer Network mask (property).value[#].mode string Mode of interface activation Dynamic or Static (must be one of the following: Dynamic, Static ) The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.network@<interface> . Result Name Type Description result array Info about requested interface result[#] object ... result[#].address string IP Address result[#].defaultgateway string Default Gateway result[#].mask integer Network mask result[#].mode string Mode of interface activation Dynamic or Static (must be one of the following: Dynamic, Static ) Errors Message Description ERROR_UNAVAILABLE Failed to set/retrieve network Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"address\": \"...\", \"defaultgateway\": \"...\", \"mask\": 0, \"mode\": \"Static\" } ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@xyz\", \"params\": { \"value\": [ { \"address\": \"...\", \"defaultgateway\": \"...\", \"mask\": 0, \"mode\": \"Static\" } ] } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } dns property Provides access to the DNS list. Value Name Type Description (property) object DNS list (property).value array ... (property).value[#] string ... Result Name Type Description result array List of DNS result[#] string ... Errors Message Description ERROR_UNAVAILABLE Failed to set/retrieve DNS Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\", \"params\": { \"value\": [ \"...\" ] } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } up property Provides access to the provides given requested interface is up or not. Value Name Type Description (property) object Provides given requested interface is up or not (property).value boolean ... The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.up@<interface> . Result Name Type Description result boolean Up/Down requested interface Errors Message Description ERROR_UNAVAILABLE Failed to set/retrieve UP Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@xyz\", \"params\": { \"value\": false } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkControl plugin: NetworkControl interface events: Notification Description update Signal interface update update notification Signal interface update. Parameters Name Type Description params object ... params.interfacename string Name of the interface where an update occured Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.register\", \"params\": { \"event\": \"update\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.update\", \"params\": { \"interfacename\": \"...\" } }","title":"Network Control Plugin"},{"location":"plugins/NetworkControlPlugin/#network-control-plugin","text":"Version: 1.0 Status: NetworkControl plugin for Thunder framework.","title":"Network Control Plugin"},{"location":"plugins/NetworkControlPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/NetworkControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/NetworkControlPlugin/#scope","text":"This document describes purpose and functionality of the NetworkControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/NetworkControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/NetworkControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/NetworkControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/NetworkControlPlugin/#description","text":"The Network Control plugin provides functionality for network interface management. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/NetworkControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: NetworkControl ) classname string Class name: NetworkControl locator string Library name: libThunderNetworkControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.dnsfile string (optional) Path to DNS resolve file (default: /etc/resolv.conf) configuration?.response integer (optional) Maximum response time out of the DHCP server configuration?.retries integer (optional) Maximum number of retries to the DHCP server","title":"Configuration"},{"location":"plugins/NetworkControlPlugin/#interfaces","text":"This plugin implements the following interfaces: INetworkControl ( INetworkControl.h ) (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/NetworkControlPlugin/#methods","text":"The following methods are provided by the NetworkControl plugin: NetworkControl interface methods: Method Description flush Flush and reload requested interface","title":"Methods"},{"location":"plugins/NetworkControlPlugin/#flush-method","text":"Flush and reload requested interface.","title":"flush method"},{"location":"plugins/NetworkControlPlugin/#parameters","text":"Name Type Description params object ... params.interface string Name of the interface to be flushed","title":"Parameters"},{"location":"plugins/NetworkControlPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/NetworkControlPlugin/#example","text":"","title":"Example"},{"location":"plugins/NetworkControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.flush\", \"params\": { \"interface\": \"...\" } }","title":"Request"},{"location":"plugins/NetworkControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/NetworkControlPlugin/#properties","text":"The following properties are provided by the NetworkControl plugin: NetworkControl interface properties: Property Description interfaces (read-only) Currently available interfaces status (read-only) Status of requested interface network Network info of requested interface dns DNS list up Provides given requested interface is up or not","title":"Properties"},{"location":"plugins/NetworkControlPlugin/#interfaces-property","text":"Provides access to the currently available interfaces. This property is read-only .","title":"interfaces property"},{"location":"plugins/NetworkControlPlugin/#value","text":"","title":"Value"},{"location":"plugins/NetworkControlPlugin/#result_1","text":"Name Type Description result array Currently available interfaces result[#] string ...","title":"Result"},{"location":"plugins/NetworkControlPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/NetworkControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.interfaces\" }","title":"Get Request"},{"location":"plugins/NetworkControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"plugins/NetworkControlPlugin/#status-property","text":"Provides access to the status of requested interface. This property is read-only .","title":"status property"},{"location":"plugins/NetworkControlPlugin/#value_1","text":"The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.status@<interface> .","title":"Value"},{"location":"plugins/NetworkControlPlugin/#result_2","text":"Name Type Description result string Status of requested interface (must be one of the following: Available, Unavailable )","title":"Result"},{"location":"plugins/NetworkControlPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/NetworkControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.status@xyz\" }","title":"Get Request"},{"location":"plugins/NetworkControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unavailable\" }","title":"Get Response"},{"location":"plugins/NetworkControlPlugin/#network-property","text":"Provides access to the network info of requested interface.","title":"network property"},{"location":"plugins/NetworkControlPlugin/#value_2","text":"Name Type Description (property) object Network info of requested interface (property).value array ... (property).value[#] object ... (property).value[#].address string IP Address (property).value[#].defaultgateway string Default Gateway (property).value[#].mask integer Network mask (property).value[#].mode string Mode of interface activation Dynamic or Static (must be one of the following: Dynamic, Static ) The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.network@<interface> .","title":"Value"},{"location":"plugins/NetworkControlPlugin/#result_3","text":"Name Type Description result array Info about requested interface result[#] object ... result[#].address string IP Address result[#].defaultgateway string Default Gateway result[#].mask integer Network mask result[#].mode string Mode of interface activation Dynamic or Static (must be one of the following: Dynamic, Static )","title":"Result"},{"location":"plugins/NetworkControlPlugin/#errors","text":"Message Description ERROR_UNAVAILABLE Failed to set/retrieve network","title":"Errors"},{"location":"plugins/NetworkControlPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/NetworkControlPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@xyz\" }","title":"Get Request"},{"location":"plugins/NetworkControlPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"address\": \"...\", \"defaultgateway\": \"...\", \"mask\": 0, \"mode\": \"Static\" } ] }","title":"Get Response"},{"location":"plugins/NetworkControlPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.network@xyz\", \"params\": { \"value\": [ { \"address\": \"...\", \"defaultgateway\": \"...\", \"mask\": 0, \"mode\": \"Static\" } ] } }","title":"Set Request"},{"location":"plugins/NetworkControlPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/NetworkControlPlugin/#dns-property","text":"Provides access to the DNS list.","title":"dns property"},{"location":"plugins/NetworkControlPlugin/#value_3","text":"Name Type Description (property) object DNS list (property).value array ... (property).value[#] string ...","title":"Value"},{"location":"plugins/NetworkControlPlugin/#result_4","text":"Name Type Description result array List of DNS result[#] string ...","title":"Result"},{"location":"plugins/NetworkControlPlugin/#errors_1","text":"Message Description ERROR_UNAVAILABLE Failed to set/retrieve DNS","title":"Errors"},{"location":"plugins/NetworkControlPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/NetworkControlPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\" }","title":"Get Request"},{"location":"plugins/NetworkControlPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"plugins/NetworkControlPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.dns\", \"params\": { \"value\": [ \"...\" ] } }","title":"Set Request"},{"location":"plugins/NetworkControlPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/NetworkControlPlugin/#up-property","text":"Provides access to the provides given requested interface is up or not.","title":"up property"},{"location":"plugins/NetworkControlPlugin/#value_4","text":"Name Type Description (property) object Provides given requested interface is up or not (property).value boolean ... The interface argument shall be passed as the index to the property, e.g. NetworkControl.1.up@<interface> .","title":"Value"},{"location":"plugins/NetworkControlPlugin/#result_5","text":"Name Type Description result boolean Up/Down requested interface","title":"Result"},{"location":"plugins/NetworkControlPlugin/#errors_2","text":"Message Description ERROR_UNAVAILABLE Failed to set/retrieve UP","title":"Errors"},{"location":"plugins/NetworkControlPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/NetworkControlPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@xyz\" }","title":"Get Request"},{"location":"plugins/NetworkControlPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"plugins/NetworkControlPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.up@xyz\", \"params\": { \"value\": false } }","title":"Set Request"},{"location":"plugins/NetworkControlPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/NetworkControlPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the NetworkControl plugin: NetworkControl interface events: Notification Description update Signal interface update","title":"Notifications"},{"location":"plugins/NetworkControlPlugin/#update-notification","text":"Signal interface update.","title":"update notification"},{"location":"plugins/NetworkControlPlugin/#parameters_1","text":"Name Type Description params object ... params.interfacename string Name of the interface where an update occured","title":"Parameters"},{"location":"plugins/NetworkControlPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/NetworkControlPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"NetworkControl.1.register\", \"params\": { \"event\": \"update\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/NetworkControlPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.update\", \"params\": { \"interfacename\": \"...\" } }","title":"Message"},{"location":"plugins/OpenCDMiPlugin/","text":"OpenCDMi Plugin Version: 1.0 Status: OCDM plugin for Thunder framework. Table of Contents Introduction Configuration Interfaces Properties Notifications Introduction Scope This document describes purpose and functionality of the OCDM plugin. It includes detailed specification about its configuration, properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: OCDM ) classname string Class name: OCDM locator string Library name: libThunderOCDM.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.location string (optional) Location configuration?.connector string (optional) Connector configuration?.sharepath string (optional) Sharepath configuration?.sharesize string (optional) Sharesize configuration?.systems array (optional) List of key systems configuration?.systems[#] object (optional) System properties configuration?.systems[#]?.name string (optional) Name configuration?.systems[#]?.designators array (optional) ... configuration?.systems[#]?.designators[#] object (optional) Designator configuration?.systems[#]?.designators[#].name string ... Interfaces This plugin implements the following interfaces: OCDM.json (version 1.0.0) (uncompliant-extended format) Properties The following properties are provided by the OCDM plugin: OCDM interface properties: Property Description drms (read-only) Supported DRM systems keysystems (read-only) DRM key systems sessions (read-only) Active sessions enumerator drms property Provides access to the supported DRM systems. This property is read-only . Value Result Name Type Description result array Supported DRM systems result[#] object ... result[#].name string Name of the DRM result[#].keysystems array Key system identifier list result[#].keysystems[#] string Identifier of a key system Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.drms\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"PlayReady\", \"keysystems\": [ \"com.microsoft.playready\" ] } ] } keysystems property Provides access to the DRM key systems. This property is read-only . Value The drm system argument shall be passed as the index to the property, e.g. OCDM.1.keysystems@<drm system> . Result Name Type Description result array DRM key systems result[#] string Identifier of a key system Errors Message Description ERROR_BAD_REQUEST Invalid DRM name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.keysystems@PlayReady\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"com.microsoft.playready\" ] } sessions property Provides access to the active sessions enumerator. This property is read-only . Value Result Name Type Description result array Active sessions enumerator result[#] object ... result[#].drm string Name of the DRM system Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.sessions\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"drm\": \"PlayReady\" } ] } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the OCDM plugin: OCDM interface events: Notification Description drmalreadyinitialized Signals that the specified DRM system could not be initialized because it is already initialized by another process drminitializationstatus Notifies about DRM initialization status drmalreadyinitialized notification Signals that the specified DRM system could not be initialized because it is already initialized by another process. Description When this event is received, the application owning given DRM system should release it immediately. Parameters Name Type Description params object ... params.drm string Name of the DRM system Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.register\", \"params\": { \"event\": \"drmalreadyinitialized\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.drmalreadyinitialized\", \"params\": { \"drm\": \"PlayReady\" } } drminitializationstatus notification Notifies about DRM initialization status. Description Register to this event to be notified about DRM retrying status busy/failure/success Parameters Name Type Description params object ... params.status string BUSY - drm is used by another process, SUCCESS - recovered from BUSY state after retry, FAILED - not recovered after re-trying from BUSY params.drm string Name of the DRM system Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.register\", \"params\": { \"event\": \"drminitializationstatus\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.drminitializationstatus\", \"params\": { \"status\": \"SUCCESS\", \"drm\": \"PlayReady\" } }","title":"OpenCDMi Plugin"},{"location":"plugins/OpenCDMiPlugin/#opencdmi-plugin","text":"Version: 1.0 Status: OCDM plugin for Thunder framework.","title":"OpenCDMi Plugin"},{"location":"plugins/OpenCDMiPlugin/#table-of-contents","text":"Introduction Configuration Interfaces Properties Notifications","title":"Table of Contents"},{"location":"plugins/OpenCDMiPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/OpenCDMiPlugin/#scope","text":"This document describes purpose and functionality of the OCDM plugin. It includes detailed specification about its configuration, properties provided and notifications sent.","title":"Scope"},{"location":"plugins/OpenCDMiPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/OpenCDMiPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/OpenCDMiPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/OpenCDMiPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: OCDM ) classname string Class name: OCDM locator string Library name: libThunderOCDM.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.location string (optional) Location configuration?.connector string (optional) Connector configuration?.sharepath string (optional) Sharepath configuration?.sharesize string (optional) Sharesize configuration?.systems array (optional) List of key systems configuration?.systems[#] object (optional) System properties configuration?.systems[#]?.name string (optional) Name configuration?.systems[#]?.designators array (optional) ... configuration?.systems[#]?.designators[#] object (optional) Designator configuration?.systems[#]?.designators[#].name string ...","title":"Configuration"},{"location":"plugins/OpenCDMiPlugin/#interfaces","text":"This plugin implements the following interfaces: OCDM.json (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/OpenCDMiPlugin/#properties","text":"The following properties are provided by the OCDM plugin: OCDM interface properties: Property Description drms (read-only) Supported DRM systems keysystems (read-only) DRM key systems sessions (read-only) Active sessions enumerator","title":"Properties"},{"location":"plugins/OpenCDMiPlugin/#drms-property","text":"Provides access to the supported DRM systems. This property is read-only .","title":"drms property"},{"location":"plugins/OpenCDMiPlugin/#value","text":"","title":"Value"},{"location":"plugins/OpenCDMiPlugin/#result","text":"Name Type Description result array Supported DRM systems result[#] object ... result[#].name string Name of the DRM result[#].keysystems array Key system identifier list result[#].keysystems[#] string Identifier of a key system","title":"Result"},{"location":"plugins/OpenCDMiPlugin/#example","text":"","title":"Example"},{"location":"plugins/OpenCDMiPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.drms\" }","title":"Get Request"},{"location":"plugins/OpenCDMiPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"PlayReady\", \"keysystems\": [ \"com.microsoft.playready\" ] } ] }","title":"Get Response"},{"location":"plugins/OpenCDMiPlugin/#keysystems-property","text":"Provides access to the DRM key systems. This property is read-only .","title":"keysystems property"},{"location":"plugins/OpenCDMiPlugin/#value_1","text":"The drm system argument shall be passed as the index to the property, e.g. OCDM.1.keysystems@<drm system> .","title":"Value"},{"location":"plugins/OpenCDMiPlugin/#result_1","text":"Name Type Description result array DRM key systems result[#] string Identifier of a key system","title":"Result"},{"location":"plugins/OpenCDMiPlugin/#errors","text":"Message Description ERROR_BAD_REQUEST Invalid DRM name","title":"Errors"},{"location":"plugins/OpenCDMiPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/OpenCDMiPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.keysystems@PlayReady\" }","title":"Get Request"},{"location":"plugins/OpenCDMiPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"com.microsoft.playready\" ] }","title":"Get Response"},{"location":"plugins/OpenCDMiPlugin/#sessions-property","text":"Provides access to the active sessions enumerator. This property is read-only .","title":"sessions property"},{"location":"plugins/OpenCDMiPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/OpenCDMiPlugin/#result_2","text":"Name Type Description result array Active sessions enumerator result[#] object ... result[#].drm string Name of the DRM system","title":"Result"},{"location":"plugins/OpenCDMiPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/OpenCDMiPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.sessions\" }","title":"Get Request"},{"location":"plugins/OpenCDMiPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"drm\": \"PlayReady\" } ] }","title":"Get Response"},{"location":"plugins/OpenCDMiPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the OCDM plugin: OCDM interface events: Notification Description drmalreadyinitialized Signals that the specified DRM system could not be initialized because it is already initialized by another process drminitializationstatus Notifies about DRM initialization status","title":"Notifications"},{"location":"plugins/OpenCDMiPlugin/#drmalreadyinitialized-notification","text":"Signals that the specified DRM system could not be initialized because it is already initialized by another process.","title":"drmalreadyinitialized notification"},{"location":"plugins/OpenCDMiPlugin/#description","text":"When this event is received, the application owning given DRM system should release it immediately.","title":"Description"},{"location":"plugins/OpenCDMiPlugin/#parameters","text":"Name Type Description params object ... params.drm string Name of the DRM system","title":"Parameters"},{"location":"plugins/OpenCDMiPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/OpenCDMiPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.register\", \"params\": { \"event\": \"drmalreadyinitialized\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/OpenCDMiPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.drmalreadyinitialized\", \"params\": { \"drm\": \"PlayReady\" } }","title":"Message"},{"location":"plugins/OpenCDMiPlugin/#drminitializationstatus-notification","text":"Notifies about DRM initialization status.","title":"drminitializationstatus notification"},{"location":"plugins/OpenCDMiPlugin/#description_1","text":"Register to this event to be notified about DRM retrying status busy/failure/success","title":"Description"},{"location":"plugins/OpenCDMiPlugin/#parameters_1","text":"Name Type Description params object ... params.status string BUSY - drm is used by another process, SUCCESS - recovered from BUSY state after retry, FAILED - not recovered after re-trying from BUSY params.drm string Name of the DRM system","title":"Parameters"},{"location":"plugins/OpenCDMiPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/OpenCDMiPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"OCDM.1.register\", \"params\": { \"event\": \"drminitializationstatus\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/OpenCDMiPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.drminitializationstatus\", \"params\": { \"status\": \"SUCCESS\", \"drm\": \"PlayReady\" } }","title":"Message"},{"location":"plugins/PackagerPlugin/","text":"Packager Plugin Version: 1.0 Status: Packager plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Introduction Scope This document describes purpose and functionality of the Packager plugin. It includes detailed specification about its configuration and methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Packager plugin allows installation of OPKG, IPKG and DEB packages to the system from a remote repository. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Packager ) classname string Class name: Packager locator string Library name: libThunderPackager.so startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: Packager.json (version 1.0.0) (compliant format) Methods The following methods are provided by the Packager plugin: Packager interface methods: Method Description install Installs a package given by a name, an URL or a file path synchronize Synchronizes repository manifest with a repository install method Installs a package given by a name, an URL or a file path. Parameters Name Type Description params object ... params.package string A name, an URL or a file path of the package to install params?.version string (optional) Version of the package to install params?.architecture string (optional) Architecture of the package to install Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress. Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.install\", \"params\": { \"package\": \"thunder-plugin-netflix\", \"version\": \"1.0\", \"architecture\": \"arm\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } synchronize method Synchronizes repository manifest with a repository. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress. Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.synchronize\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Packager Plugin"},{"location":"plugins/PackagerPlugin/#packager-plugin","text":"Version: 1.0 Status: Packager plugin for Thunder framework.","title":"Packager Plugin"},{"location":"plugins/PackagerPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods","title":"Table of Contents"},{"location":"plugins/PackagerPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/PackagerPlugin/#scope","text":"This document describes purpose and functionality of the Packager plugin. It includes detailed specification about its configuration and methods provided.","title":"Scope"},{"location":"plugins/PackagerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/PackagerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/PackagerPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/PackagerPlugin/#description","text":"The Packager plugin allows installation of OPKG, IPKG and DEB packages to the system from a remote repository. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/PackagerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Packager ) classname string Class name: Packager locator string Library name: libThunderPackager.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/PackagerPlugin/#interfaces","text":"This plugin implements the following interfaces: Packager.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/PackagerPlugin/#methods","text":"The following methods are provided by the Packager plugin: Packager interface methods: Method Description install Installs a package given by a name, an URL or a file path synchronize Synchronizes repository manifest with a repository","title":"Methods"},{"location":"plugins/PackagerPlugin/#install-method","text":"Installs a package given by a name, an URL or a file path.","title":"install method"},{"location":"plugins/PackagerPlugin/#parameters","text":"Name Type Description params object ... params.package string A name, an URL or a file path of the package to install params?.version string (optional) Version of the package to install params?.architecture string (optional) Architecture of the package to install","title":"Parameters"},{"location":"plugins/PackagerPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/PackagerPlugin/#errors","text":"Message Description ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress.","title":"Errors"},{"location":"plugins/PackagerPlugin/#example","text":"","title":"Example"},{"location":"plugins/PackagerPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.install\", \"params\": { \"package\": \"thunder-plugin-netflix\", \"version\": \"1.0\", \"architecture\": \"arm\" } }","title":"Request"},{"location":"plugins/PackagerPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/PackagerPlugin/#synchronize-method","text":"Synchronizes repository manifest with a repository.","title":"synchronize method"},{"location":"plugins/PackagerPlugin/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/PackagerPlugin/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/PackagerPlugin/#errors_1","text":"Message Description ERROR_INPROGRESS Returned when the function is called while other installation/synchronization is already in progress.","title":"Errors"},{"location":"plugins/PackagerPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/PackagerPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Packager.1.synchronize\" }","title":"Request"},{"location":"plugins/PackagerPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/PerformanceMetricsPlugin/","text":"PerformanceMetrics Plugin Version: 1.0 Status: PerformanceMetrics plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the PerformanceMetrics plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Performance Metrics plugin can output metrics on a plugin (e.g. uptime, resource usage). The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: PerformanceMetrics ) classname string Class name: PerformanceMetrics locator string Library name: libThunderPerformanceMetrics.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"PerformanceMetrics Plugin"},{"location":"plugins/PerformanceMetricsPlugin/#performancemetrics-plugin","text":"Version: 1.0 Status: PerformanceMetrics plugin for Thunder framework.","title":"PerformanceMetrics Plugin"},{"location":"plugins/PerformanceMetricsPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"plugins/PerformanceMetricsPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/PerformanceMetricsPlugin/#scope","text":"This document describes purpose and functionality of the PerformanceMetrics plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"plugins/PerformanceMetricsPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/PerformanceMetricsPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/PerformanceMetricsPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/PerformanceMetricsPlugin/#description","text":"The Performance Metrics plugin can output metrics on a plugin (e.g. uptime, resource usage). The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/PerformanceMetricsPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: PerformanceMetrics ) classname string Class name: PerformanceMetrics locator string Library name: libThunderPerformanceMetrics.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/PerformanceMonitorPlugin/","text":"Performance Monitor Plugin Version: 1.0 Status: PerformanceMonitor plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Introduction Scope This document describes purpose and functionality of the PerformanceMonitor plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Retrieve the performance measurement against given package size. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: PerformanceMonitor ) classname string Class name: PerformanceMonitor locator string Library name: libThunderPerformanceMonitor.so startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: PerformanceMonitor.json (version 1.0.0) (uncompliant-collapsed format) Methods The following methods are provided by the PerformanceMonitor plugin: PerformanceMonitor interface methods: Method Description clear Clear all performance data collected send Interface to test send data receive Interface to test receive data exchange Interface to test exchange data clear method Clear all performance data collected. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.clear\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } send method Interface to test send data. Parameters Name Type Description params object ... params?.data string (optional) Any string data upto the size specified in the length params?.length integer (optional) Size of the data params?.duration integer (optional) Duration of the measurements Result Name Type Description result integer Size of data received by the jsonrpc interface Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.send\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } receive method Interface to test receive data. Parameters Name Type Description params integer Size of data to be provided by the jsonrpc interface Result Name Type Description result object ... result?.data string (optional) Any string data upto the size specified in the length result?.length integer (optional) Size of the data result?.duration integer (optional) Duration of the measurements Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.receive\", \"params\": 0 } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } exchange method Interface to test exchange data. Parameters Name Type Description params object ... params?.data string (optional) Any string data upto the size specified in the length params?.length integer (optional) Size of the data params?.duration integer (optional) Duration of the measurements Result Name Type Description result object ... result?.data string (optional) Any string data upto the size specified in the length result?.length integer (optional) Size of the data result?.duration integer (optional) Duration of the measurements Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.exchange\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } } Properties The following properties are provided by the PerformanceMonitor plugin: PerformanceMonitor interface properties: Property Description measurement (read-only) Retrieve the performance measurement against given package size measurement property Provides access to the retrieve the performance measurement against given package size. Measurements will be provided in milliseconds. This property is read-only . Value Name Type Description (property) object Retrieve the performance measurement against given package size. Measurements will be provided in milliseconds (property).serialization object Time taken to complete serialization (property).serialization?.minimum integer (optional) Minimum value of measurements (property).serialization?.maximum integer (optional) Maximum value of measurements (property).serialization?.average integer (optional) Average value of measurements (property).serialization?.count integer (optional) How many times measurement has been collected (property).deserialization object Time taken to complete deserialization (property).deserialization?.minimum integer (optional) Minimum value of measurements (property).deserialization?.maximum integer (optional) Maximum value of measurements (property).deserialization?.average integer (optional) Average value of measurements (property).deserialization?.count integer (optional) How many times measurement has been collected (property).execution object Time taken to complete execution (property).execution?.minimum integer (optional) Minimum value of measurements (property).execution?.maximum integer (optional) Maximum value of measurements (property).execution?.average integer (optional) Average value of measurements (property).execution?.count integer (optional) How many times measurement has been collected (property).threadpool object Time taken to complete threadpool wait (property).threadpool?.minimum integer (optional) Minimum value of measurements (property).threadpool?.maximum integer (optional) Maximum value of measurements (property).threadpool?.average integer (optional) Average value of measurements (property).threadpool?.count integer (optional) How many times measurement has been collected (property).communication object Time taken to complete communication (property).communication?.minimum integer (optional) Minimum value of measurements (property).communication?.maximum integer (optional) Maximum value of measurements (property).communication?.average integer (optional) Average value of measurements (property).communication?.count integer (optional) How many times measurement has been collected (property).total object Time taken to complete whole jsonrpc process (property).total?.minimum integer (optional) Minimum value of measurements (property).total?.maximum integer (optional) Maximum value of measurements (property).total?.average integer (optional) Average value of measurements (property).total?.count integer (optional) How many times measurement has been collected The package size argument shall be passed as the index to the property, e.g. PerformanceMonitor.1.measurement@<package size> . Size of package whose statistics info has to be retrieved. Result Name Type Description result null Always null (default: None ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.measurement@1000\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Performance Monitor Plugin"},{"location":"plugins/PerformanceMonitorPlugin/#performance-monitor-plugin","text":"Version: 1.0 Status: PerformanceMonitor plugin for Thunder framework.","title":"Performance Monitor Plugin"},{"location":"plugins/PerformanceMonitorPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties","title":"Table of Contents"},{"location":"plugins/PerformanceMonitorPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/PerformanceMonitorPlugin/#scope","text":"This document describes purpose and functionality of the PerformanceMonitor plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"plugins/PerformanceMonitorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/PerformanceMonitorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/PerformanceMonitorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/PerformanceMonitorPlugin/#description","text":"Retrieve the performance measurement against given package size. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/PerformanceMonitorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: PerformanceMonitor ) classname string Class name: PerformanceMonitor locator string Library name: libThunderPerformanceMonitor.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/PerformanceMonitorPlugin/#interfaces","text":"This plugin implements the following interfaces: PerformanceMonitor.json (version 1.0.0) (uncompliant-collapsed format)","title":"Interfaces"},{"location":"plugins/PerformanceMonitorPlugin/#methods","text":"The following methods are provided by the PerformanceMonitor plugin: PerformanceMonitor interface methods: Method Description clear Clear all performance data collected send Interface to test send data receive Interface to test receive data exchange Interface to test exchange data","title":"Methods"},{"location":"plugins/PerformanceMonitorPlugin/#clear-method","text":"Clear all performance data collected.","title":"clear method"},{"location":"plugins/PerformanceMonitorPlugin/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/PerformanceMonitorPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/PerformanceMonitorPlugin/#example","text":"","title":"Example"},{"location":"plugins/PerformanceMonitorPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.clear\" }","title":"Request"},{"location":"plugins/PerformanceMonitorPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/PerformanceMonitorPlugin/#send-method","text":"Interface to test send data.","title":"send method"},{"location":"plugins/PerformanceMonitorPlugin/#parameters_1","text":"Name Type Description params object ... params?.data string (optional) Any string data upto the size specified in the length params?.length integer (optional) Size of the data params?.duration integer (optional) Duration of the measurements","title":"Parameters"},{"location":"plugins/PerformanceMonitorPlugin/#result_1","text":"Name Type Description result integer Size of data received by the jsonrpc interface","title":"Result"},{"location":"plugins/PerformanceMonitorPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/PerformanceMonitorPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.send\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Request"},{"location":"plugins/PerformanceMonitorPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"plugins/PerformanceMonitorPlugin/#receive-method","text":"Interface to test receive data.","title":"receive method"},{"location":"plugins/PerformanceMonitorPlugin/#parameters_2","text":"Name Type Description params integer Size of data to be provided by the jsonrpc interface","title":"Parameters"},{"location":"plugins/PerformanceMonitorPlugin/#result_2","text":"Name Type Description result object ... result?.data string (optional) Any string data upto the size specified in the length result?.length integer (optional) Size of the data result?.duration integer (optional) Duration of the measurements","title":"Result"},{"location":"plugins/PerformanceMonitorPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/PerformanceMonitorPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.receive\", \"params\": 0 }","title":"Request"},{"location":"plugins/PerformanceMonitorPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Response"},{"location":"plugins/PerformanceMonitorPlugin/#exchange-method","text":"Interface to test exchange data.","title":"exchange method"},{"location":"plugins/PerformanceMonitorPlugin/#parameters_3","text":"Name Type Description params object ... params?.data string (optional) Any string data upto the size specified in the length params?.length integer (optional) Size of the data params?.duration integer (optional) Duration of the measurements","title":"Parameters"},{"location":"plugins/PerformanceMonitorPlugin/#result_3","text":"Name Type Description result object ... result?.data string (optional) Any string data upto the size specified in the length result?.length integer (optional) Size of the data result?.duration integer (optional) Duration of the measurements","title":"Result"},{"location":"plugins/PerformanceMonitorPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/PerformanceMonitorPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.exchange\", \"params\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Request"},{"location":"plugins/PerformanceMonitorPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"data\": \"abababababab\", \"length\": 0, \"duration\": 0 } }","title":"Response"},{"location":"plugins/PerformanceMonitorPlugin/#properties","text":"The following properties are provided by the PerformanceMonitor plugin: PerformanceMonitor interface properties: Property Description measurement (read-only) Retrieve the performance measurement against given package size","title":"Properties"},{"location":"plugins/PerformanceMonitorPlugin/#measurement-property","text":"Provides access to the retrieve the performance measurement against given package size. Measurements will be provided in milliseconds. This property is read-only .","title":"measurement property"},{"location":"plugins/PerformanceMonitorPlugin/#value","text":"Name Type Description (property) object Retrieve the performance measurement against given package size. Measurements will be provided in milliseconds (property).serialization object Time taken to complete serialization (property).serialization?.minimum integer (optional) Minimum value of measurements (property).serialization?.maximum integer (optional) Maximum value of measurements (property).serialization?.average integer (optional) Average value of measurements (property).serialization?.count integer (optional) How many times measurement has been collected (property).deserialization object Time taken to complete deserialization (property).deserialization?.minimum integer (optional) Minimum value of measurements (property).deserialization?.maximum integer (optional) Maximum value of measurements (property).deserialization?.average integer (optional) Average value of measurements (property).deserialization?.count integer (optional) How many times measurement has been collected (property).execution object Time taken to complete execution (property).execution?.minimum integer (optional) Minimum value of measurements (property).execution?.maximum integer (optional) Maximum value of measurements (property).execution?.average integer (optional) Average value of measurements (property).execution?.count integer (optional) How many times measurement has been collected (property).threadpool object Time taken to complete threadpool wait (property).threadpool?.minimum integer (optional) Minimum value of measurements (property).threadpool?.maximum integer (optional) Maximum value of measurements (property).threadpool?.average integer (optional) Average value of measurements (property).threadpool?.count integer (optional) How many times measurement has been collected (property).communication object Time taken to complete communication (property).communication?.minimum integer (optional) Minimum value of measurements (property).communication?.maximum integer (optional) Maximum value of measurements (property).communication?.average integer (optional) Average value of measurements (property).communication?.count integer (optional) How many times measurement has been collected (property).total object Time taken to complete whole jsonrpc process (property).total?.minimum integer (optional) Minimum value of measurements (property).total?.maximum integer (optional) Maximum value of measurements (property).total?.average integer (optional) Average value of measurements (property).total?.count integer (optional) How many times measurement has been collected The package size argument shall be passed as the index to the property, e.g. PerformanceMonitor.1.measurement@<package size> . Size of package whose statistics info has to be retrieved.","title":"Value"},{"location":"plugins/PerformanceMonitorPlugin/#result_4","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/PerformanceMonitorPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/PerformanceMonitorPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PerformanceMonitor.1.measurement@1000\" }","title":"Get Request"},{"location":"plugins/PerformanceMonitorPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Get Response"},{"location":"plugins/PlayerInfoPlugin/","text":"Player Info Plugin Version: 1.0 Status: PlayerInfo plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Properties Notifications Introduction Scope This document describes purpose and functionality of the PlayerInfo plugin. It includes detailed specification about its configuration, properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The PlayerInfo plugin helps to get system supported Audio Video codecs. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: PlayerInfo ) classname string Class name: PlayerInfo locator string Library name: libWPEPlayerInfo.so startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: IPlayerProperties ( IPlayerInfo.h ) (version 1.0.0) (compliant format) Dolby::IOutput ( IDolby.h ) (version 1.0.0) (compliant format) Properties The following properties are provided by the PlayerInfo plugin: PlayerProperties interface properties: Property Description audiocodecs (read-only) Query Audio Codecs List videocodecs (read-only) Query Video Codecs List resolution (read-only) Current Video playback resolution isaudioequivalenceenabled (read-only) Checks Loudness Equivalence in platform Dolby Output interface properties: Property Description dolbyatmossupported / dolby_atmosmetadata (read-only) Atmos capabilities of Sink dolbysoundmode / dolby_soundmode (read-only) Sound Mode - Mono/Stereo/Surround dolbyatmosoutput / dolby_enableatmosoutput (write-only) Enable Atmos Audio Output dolbymode / dolby_mode Dolby Mode audiocodecs property Provides access to the query Audio Codecs List. This property is read-only . Value Result Name Type Description result array Query Audio Codecs List result[#] string ... (must be one of the following: AudioAac, AudioAc3, AudioAc3Plus, AudioDts, AudioMpeg1, AudioMpeg2, AudioMpeg3, AudioMpeg4, AudioOpus, AudioUndefined, AudioVorbisOgg, AudioWav ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.audiocodecs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"AudioUndefined\" ] } videocodecs property Provides access to the query Video Codecs List. This property is read-only . Value Result Name Type Description result array Query Video Codecs List result[#] string ... (must be one of the following: VideoH263, VideoH264, VideoH265, VideoH26510, VideoMpeg, VideoMpeg2, VideoMpeg4, VideoUndefined, VideoVp10, VideoVp8, VideoVp9 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.videocodecs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"VideoUndefined\" ] } resolution property Provides access to the current Video playback resolution. This property is read-only . Value Result Name Type Description result string Current Video playback resolution (must be one of the following: Resolution1080I, Resolution1080I24, Resolution1080I25, Resolution1080I30, Resolution1080I50, Resolution1080P, Resolution1080P24, Resolution1080P25, Resolution1080P30, Resolution1080P50, Resolution2160P, Resolution2160P24, Resolution2160P25, Resolution2160P30, Resolution2160P50, Resolution2160P60, Resolution480I, Resolution480I24, Resolution480I25, Resolution480I30, Resolution480I50, Resolution480P, Resolution480P24, Resolution480P25, Resolution480P30, Resolution480P50, Resolution576I, Resolution576I24, Resolution576I25, Resolution576I30, Resolution576I50, Resolution576P, Resolution576P24, Resolution576P25, Resolution576P30, Resolution576P50, Resolution720P, Resolution720P24, Resolution720P25, Resolution720P30, Resolution720P50, ResolutionUnknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.resolution\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ResolutionUnknown\" } isaudioequivalenceenabled property Provides access to the checks Loudness Equivalence in platform. This property is read-only . Value Result Name Type Description result boolean Checks Loudness Equivalence in platform Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.isaudioequivalenceenabled\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } dolbyatmossupported property Provides access to the atmos capabilities of Sink. This property is read-only . dolby_atmosmetadata is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Result Name Type Description result boolean Atmos capabilities of Sink Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbyatmossupported\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } dolbysoundmode property Provides access to the sound Mode - Mono/Stereo/Surround. This property is read-only . dolby_soundmode is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Result Name Type Description result string Sound Mode - Mono/Stereo/Surround (must be one of the following: Auto, Dolbydigital, Dolbydigitalplus, Mono, Passthru, Stereo, Surround, Unknown ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbysoundmode\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" } dolbyatmosoutput property Provides access to the enable Atmos Audio Output. This property is write-only . dolby_enableatmosoutput is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Name Type Description (property) boolean Enable/Disable Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbyatmosoutput\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } dolbymode property Provides access to the dolby Mode. dolby_mode is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Value Name Type Description (property) string Dolby mode type (must be one of the following: Auto, DigitalAc3, DigitalPassthrough, DigitalPcm, DigitalPlus, Ms12 ) Result Name Type Description result string Dolby mode type (must be one of the following: Auto, DigitalAc3, DigitalPassthrough, DigitalPcm, DigitalPlus, Ms12 ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DigitalPcm\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\", \"params\": \"DigitalPcm\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the PlayerInfo plugin: Dolby Output interface events: Notification Description soundmodechanged / dolby_audiomodechanged Signal audio mode change soundmodechanged notification Signal audio mode change. dolby_audiomodechanged is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Parameters Name Type Description params object ... params.mode string Changed Mode (must be one of the following: Auto, Dolbydigital, Dolbydigitalplus, Mono, Passthru, Stereo, Surround, Unknown ) params.enabled boolean Enabled/Disabled Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.register\", \"params\": { \"event\": \"soundmodechanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.soundmodechanged\", \"params\": { \"mode\": \"Unknown\", \"enabled\": false } }","title":"Player Info Plugin"},{"location":"plugins/PlayerInfoPlugin/#player-info-plugin","text":"Version: 1.0 Status: PlayerInfo plugin for Thunder framework.","title":"Player Info Plugin"},{"location":"plugins/PlayerInfoPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Properties Notifications","title":"Table of Contents"},{"location":"plugins/PlayerInfoPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/PlayerInfoPlugin/#scope","text":"This document describes purpose and functionality of the PlayerInfo plugin. It includes detailed specification about its configuration, properties provided and notifications sent.","title":"Scope"},{"location":"plugins/PlayerInfoPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/PlayerInfoPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/PlayerInfoPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/PlayerInfoPlugin/#description","text":"The PlayerInfo plugin helps to get system supported Audio Video codecs. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/PlayerInfoPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: PlayerInfo ) classname string Class name: PlayerInfo locator string Library name: libWPEPlayerInfo.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/PlayerInfoPlugin/#interfaces","text":"This plugin implements the following interfaces: IPlayerProperties ( IPlayerInfo.h ) (version 1.0.0) (compliant format) Dolby::IOutput ( IDolby.h ) (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/PlayerInfoPlugin/#properties","text":"The following properties are provided by the PlayerInfo plugin: PlayerProperties interface properties: Property Description audiocodecs (read-only) Query Audio Codecs List videocodecs (read-only) Query Video Codecs List resolution (read-only) Current Video playback resolution isaudioequivalenceenabled (read-only) Checks Loudness Equivalence in platform Dolby Output interface properties: Property Description dolbyatmossupported / dolby_atmosmetadata (read-only) Atmos capabilities of Sink dolbysoundmode / dolby_soundmode (read-only) Sound Mode - Mono/Stereo/Surround dolbyatmosoutput / dolby_enableatmosoutput (write-only) Enable Atmos Audio Output dolbymode / dolby_mode Dolby Mode","title":"Properties"},{"location":"plugins/PlayerInfoPlugin/#audiocodecs-property","text":"Provides access to the query Audio Codecs List. This property is read-only .","title":"audiocodecs property"},{"location":"plugins/PlayerInfoPlugin/#value","text":"","title":"Value"},{"location":"plugins/PlayerInfoPlugin/#result","text":"Name Type Description result array Query Audio Codecs List result[#] string ... (must be one of the following: AudioAac, AudioAc3, AudioAc3Plus, AudioDts, AudioMpeg1, AudioMpeg2, AudioMpeg3, AudioMpeg4, AudioOpus, AudioUndefined, AudioVorbisOgg, AudioWav )","title":"Result"},{"location":"plugins/PlayerInfoPlugin/#example","text":"","title":"Example"},{"location":"plugins/PlayerInfoPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.audiocodecs\" }","title":"Get Request"},{"location":"plugins/PlayerInfoPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"AudioUndefined\" ] }","title":"Get Response"},{"location":"plugins/PlayerInfoPlugin/#videocodecs-property","text":"Provides access to the query Video Codecs List. This property is read-only .","title":"videocodecs property"},{"location":"plugins/PlayerInfoPlugin/#value_1","text":"","title":"Value"},{"location":"plugins/PlayerInfoPlugin/#result_1","text":"Name Type Description result array Query Video Codecs List result[#] string ... (must be one of the following: VideoH263, VideoH264, VideoH265, VideoH26510, VideoMpeg, VideoMpeg2, VideoMpeg4, VideoUndefined, VideoVp10, VideoVp8, VideoVp9 )","title":"Result"},{"location":"plugins/PlayerInfoPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/PlayerInfoPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.videocodecs\" }","title":"Get Request"},{"location":"plugins/PlayerInfoPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"VideoUndefined\" ] }","title":"Get Response"},{"location":"plugins/PlayerInfoPlugin/#resolution-property","text":"Provides access to the current Video playback resolution. This property is read-only .","title":"resolution property"},{"location":"plugins/PlayerInfoPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/PlayerInfoPlugin/#result_2","text":"Name Type Description result string Current Video playback resolution (must be one of the following: Resolution1080I, Resolution1080I24, Resolution1080I25, Resolution1080I30, Resolution1080I50, Resolution1080P, Resolution1080P24, Resolution1080P25, Resolution1080P30, Resolution1080P50, Resolution2160P, Resolution2160P24, Resolution2160P25, Resolution2160P30, Resolution2160P50, Resolution2160P60, Resolution480I, Resolution480I24, Resolution480I25, Resolution480I30, Resolution480I50, Resolution480P, Resolution480P24, Resolution480P25, Resolution480P30, Resolution480P50, Resolution576I, Resolution576I24, Resolution576I25, Resolution576I30, Resolution576I50, Resolution576P, Resolution576P24, Resolution576P25, Resolution576P30, Resolution576P50, Resolution720P, Resolution720P24, Resolution720P25, Resolution720P30, Resolution720P50, ResolutionUnknown )","title":"Result"},{"location":"plugins/PlayerInfoPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/PlayerInfoPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.resolution\" }","title":"Get Request"},{"location":"plugins/PlayerInfoPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"ResolutionUnknown\" }","title":"Get Response"},{"location":"plugins/PlayerInfoPlugin/#isaudioequivalenceenabled-property","text":"Provides access to the checks Loudness Equivalence in platform. This property is read-only .","title":"isaudioequivalenceenabled property"},{"location":"plugins/PlayerInfoPlugin/#value_3","text":"","title":"Value"},{"location":"plugins/PlayerInfoPlugin/#result_3","text":"Name Type Description result boolean Checks Loudness Equivalence in platform","title":"Result"},{"location":"plugins/PlayerInfoPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/PlayerInfoPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.isaudioequivalenceenabled\" }","title":"Get Request"},{"location":"plugins/PlayerInfoPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"plugins/PlayerInfoPlugin/#dolbyatmossupported-property","text":"Provides access to the atmos capabilities of Sink. This property is read-only . dolby_atmosmetadata is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"dolbyatmossupported property"},{"location":"plugins/PlayerInfoPlugin/#value_4","text":"","title":"Value"},{"location":"plugins/PlayerInfoPlugin/#result_4","text":"Name Type Description result boolean Atmos capabilities of Sink","title":"Result"},{"location":"plugins/PlayerInfoPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/PlayerInfoPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbyatmossupported\" }","title":"Get Request"},{"location":"plugins/PlayerInfoPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"plugins/PlayerInfoPlugin/#dolbysoundmode-property","text":"Provides access to the sound Mode - Mono/Stereo/Surround. This property is read-only . dolby_soundmode is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"dolbysoundmode property"},{"location":"plugins/PlayerInfoPlugin/#value_5","text":"","title":"Value"},{"location":"plugins/PlayerInfoPlugin/#result_5","text":"Name Type Description result string Sound Mode - Mono/Stereo/Surround (must be one of the following: Auto, Dolbydigital, Dolbydigitalplus, Mono, Passthru, Stereo, Surround, Unknown )","title":"Result"},{"location":"plugins/PlayerInfoPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/PlayerInfoPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbysoundmode\" }","title":"Get Request"},{"location":"plugins/PlayerInfoPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Unknown\" }","title":"Get Response"},{"location":"plugins/PlayerInfoPlugin/#dolbyatmosoutput-property","text":"Provides access to the enable Atmos Audio Output. This property is write-only . dolby_enableatmosoutput is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"dolbyatmosoutput property"},{"location":"plugins/PlayerInfoPlugin/#value_6","text":"Name Type Description (property) boolean Enable/Disable","title":"Value"},{"location":"plugins/PlayerInfoPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/PlayerInfoPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbyatmosoutput\", \"params\": false }","title":"Set Request"},{"location":"plugins/PlayerInfoPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/PlayerInfoPlugin/#dolbymode-property","text":"Provides access to the dolby Mode. dolby_mode is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"dolbymode property"},{"location":"plugins/PlayerInfoPlugin/#value_7","text":"Name Type Description (property) string Dolby mode type (must be one of the following: Auto, DigitalAc3, DigitalPassthrough, DigitalPcm, DigitalPlus, Ms12 )","title":"Value"},{"location":"plugins/PlayerInfoPlugin/#result_6","text":"Name Type Description result string Dolby mode type (must be one of the following: Auto, DigitalAc3, DigitalPassthrough, DigitalPcm, DigitalPlus, Ms12 )","title":"Result"},{"location":"plugins/PlayerInfoPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/PlayerInfoPlugin/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\" }","title":"Get Request"},{"location":"plugins/PlayerInfoPlugin/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"DigitalPcm\" }","title":"Get Response"},{"location":"plugins/PlayerInfoPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.dolbymode\", \"params\": \"DigitalPcm\" }","title":"Set Request"},{"location":"plugins/PlayerInfoPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/PlayerInfoPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the PlayerInfo plugin: Dolby Output interface events: Notification Description soundmodechanged / dolby_audiomodechanged Signal audio mode change","title":"Notifications"},{"location":"plugins/PlayerInfoPlugin/#soundmodechanged-notification","text":"Signal audio mode change. dolby_audiomodechanged is an alternative name for this notification. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"soundmodechanged notification"},{"location":"plugins/PlayerInfoPlugin/#parameters","text":"Name Type Description params object ... params.mode string Changed Mode (must be one of the following: Auto, Dolbydigital, Dolbydigitalplus, Mono, Passthru, Stereo, Surround, Unknown ) params.enabled boolean Enabled/Disabled","title":"Parameters"},{"location":"plugins/PlayerInfoPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/PlayerInfoPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"PlayerInfo.1.register\", \"params\": { \"event\": \"soundmodechanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/PlayerInfoPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.soundmodechanged\", \"params\": { \"mode\": \"Unknown\", \"enabled\": false } }","title":"Message"},{"location":"plugins/PowerPlugin/","text":"Power Plugin Version: 1.0 Status: Power plugin for Thunder framework. Table of Contents Introduction Configuration Interfaces Methods Properties Introduction Scope This document describes purpose and functionality of the Power plugin. It includes detailed specification about its configuration, methods and properties provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Power ) classname string Class name: Power locator string Library name: libThunderPower.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.powerkey integer (optional) Key associated as powerkey configuration?.offmode string (optional) Type of offmode configuration?.control boolean (optional) Enable control clients configuration?.gpiopin integer (optional) GGIO pin (Broadcom) configuration?.gpiotype sting (optional) GPIO type (Broadcom) configuration?.statechange integer (optional) Statechange (Broadcom) Interfaces This plugin implements the following interfaces: Power.json (version 1.0.0) (compliant format) Methods The following methods are provided by the Power plugin: Power interface methods: Method Description set Sets power state set method Sets power state. Parameters Name Type Description params object ... params.powerstate string Power state params.timeout integer Time to wait for power state change Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL General failure ERROR_DUPLICATE_KEY Trying to set the same power mode ERROR_ILLEGAL_STATE Power state is not supported ERROR_BAD_REQUEST Invalid Power state or Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.set\", \"params\": { \"powerstate\": \"on\", \"timeout\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Power plugin: Power interface properties: Property Description state (read-only) Power state state property Provides access to the power state. This property is read-only . Value Result Name Type Description result string Power state Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"on\" }","title":"Power Plugin"},{"location":"plugins/PowerPlugin/#power-plugin","text":"Version: 1.0 Status: Power plugin for Thunder framework.","title":"Power Plugin"},{"location":"plugins/PowerPlugin/#table-of-contents","text":"Introduction Configuration Interfaces Methods Properties","title":"Table of Contents"},{"location":"plugins/PowerPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/PowerPlugin/#scope","text":"This document describes purpose and functionality of the Power plugin. It includes detailed specification about its configuration, methods and properties provided.","title":"Scope"},{"location":"plugins/PowerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/PowerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/PowerPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/PowerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Power ) classname string Class name: Power locator string Library name: libThunderPower.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.powerkey integer (optional) Key associated as powerkey configuration?.offmode string (optional) Type of offmode configuration?.control boolean (optional) Enable control clients configuration?.gpiopin integer (optional) GGIO pin (Broadcom) configuration?.gpiotype sting (optional) GPIO type (Broadcom) configuration?.statechange integer (optional) Statechange (Broadcom)","title":"Configuration"},{"location":"plugins/PowerPlugin/#interfaces","text":"This plugin implements the following interfaces: Power.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/PowerPlugin/#methods","text":"The following methods are provided by the Power plugin: Power interface methods: Method Description set Sets power state","title":"Methods"},{"location":"plugins/PowerPlugin/#set-method","text":"Sets power state.","title":"set method"},{"location":"plugins/PowerPlugin/#parameters","text":"Name Type Description params object ... params.powerstate string Power state params.timeout integer Time to wait for power state change","title":"Parameters"},{"location":"plugins/PowerPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/PowerPlugin/#errors","text":"Message Description ERROR_GENERAL General failure ERROR_DUPLICATE_KEY Trying to set the same power mode ERROR_ILLEGAL_STATE Power state is not supported ERROR_BAD_REQUEST Invalid Power state or Bad JSON param data format","title":"Errors"},{"location":"plugins/PowerPlugin/#example","text":"","title":"Example"},{"location":"plugins/PowerPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.set\", \"params\": { \"powerstate\": \"on\", \"timeout\": 0 } }","title":"Request"},{"location":"plugins/PowerPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/PowerPlugin/#properties","text":"The following properties are provided by the Power plugin: Power interface properties: Property Description state (read-only) Power state","title":"Properties"},{"location":"plugins/PowerPlugin/#state-property","text":"Provides access to the power state. This property is read-only .","title":"state property"},{"location":"plugins/PowerPlugin/#value","text":"","title":"Value"},{"location":"plugins/PowerPlugin/#result_1","text":"Name Type Description result string Power state","title":"Result"},{"location":"plugins/PowerPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/PowerPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Power.1.state\" }","title":"Get Request"},{"location":"plugins/PowerPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"on\" }","title":"Get Response"},{"location":"plugins/ProcessMonitorPlugin/","text":"ProcessMonitor Plugin Version: 1.0 Status: ProcessMonitor plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the ProcessMonitor plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description This ProcessMonitor plugin monitors any deactivated plugin and kills the associate process if it exists even after predefined time. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: ProcessMonitor ) classname string Class name: ProcessMonitor locator string Library name: libThunderProcessMonitor.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"ProcessMonitor Plugin"},{"location":"plugins/ProcessMonitorPlugin/#processmonitor-plugin","text":"Version: 1.0 Status: ProcessMonitor plugin for Thunder framework.","title":"ProcessMonitor Plugin"},{"location":"plugins/ProcessMonitorPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"plugins/ProcessMonitorPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/ProcessMonitorPlugin/#scope","text":"This document describes purpose and functionality of the ProcessMonitor plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"plugins/ProcessMonitorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/ProcessMonitorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/ProcessMonitorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/ProcessMonitorPlugin/#description","text":"This ProcessMonitor plugin monitors any deactivated plugin and kills the associate process if it exists even after predefined time. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/ProcessMonitorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: ProcessMonitor ) classname string Class name: ProcessMonitor locator string Library name: libThunderProcessMonitor.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/RemoteControlPlugin/","text":"Remote Control Plugin Version: 1.0 Status: RemoteControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the RemoteControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The RemoteControl plugin provides user-input functionality from various key-code sources (e.g. STB RC). The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: RemoteControl ) classname string Class name: RemoteControl locator string Library name: libThunderRemoteControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.mapfile string (optional) Map File configuration?.postlookupfile string (optional) PostLookup File configuration?.passon boolean (optional) Enable passon configuration?.repeatstart integer (optional) Maximum number of repeats configuration?.repeatinterval integer (optional) Maximum duration between repeats configuration?.releasetimeout integer (optional) Release timeout configuration?.devices array (optional) List of devices configuration?.devices[#] object (optional) ... configuration?.devices[#]?.name string (optional) Name configuration?.devices[#]?.mapfile string (optional) Map File configuration?.devices[#]?.passon boolean (optional) Enable passon configuration?.devices[#]?.settings string (optional) Settings configuration?.virtuals array (optional) List of virtuals configuration?.virtuals[#] object (optional) ... configuration?.virtuals[#]?.name string (optional) Name configuration?.virtuals[#]?.mapfile string (optional) Map File configuration?.virtuals[#]?.passon boolean (optional) Enable passon configuration?.virtuals[#]?.settings string (optional) Settings configuration?.links array (optional) List of Links configuration?.links[#] object (optional) ... configuration?.links[#]?.name string (optional) Name configuration?.links[#]?.mapfile string (optional) Map File Interfaces This plugin implements the following interfaces: RemoteControl.json (version 1.0.0) (compliant format) Methods The following methods are provided by the RemoteControl plugin: RemoteControl interface methods: Method Description key Gets key code details send Sends a key to a device (press and release) press Presses a key on a device release Releases a key on a device add Adds a key code to the key map modify Modifies a key code in the key map delete Deletes a key code from the key map load Re-loads the device's key map from persistent memory save Saves the device's key map into persistent path pair Activates pairing mode of a device unpair Unpairs a device key method Gets key code details. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code Result Name Type Description result object ... result.code integer Key code result.key integer Key ingest value result?.modifiers array (optional) List of key modifiers result?.modifiers[#] string (optional) Key modifier Errors Message Description ERROR_UNKNOWN_KEY Key does not exist ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.key\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } send method Sends a key to a device (press and release). Parameters Name Type Description params object ... params.device string Device name params.code integer Key code Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist ERROR_ALREADY_RELEASED Key is already released Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.send\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } press method Presses a key on a device. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.press\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } release method Releases a key on a device. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist ERROR_ALREADY_RELEASED Key is already released Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.release\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } add method Adds a key code to the key map. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code params.key integer Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Code already exists Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.add\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } modify method Modifies a key code in the key map. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code params.key integer Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.modify\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } delete method Deletes a key code from the key map. Parameters Name Type Description params object ... params.device string Device name params.code integer Key code Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Key does not exist ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.delete\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } load method Re-loads the device's key map from persistent memory. Parameters Name Type Description params object ... params.device string Device name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL File does not exist ERROR_BAD_REQUEST Bad JSON param data format ERROR_ILLEGAL_STATE Illegal state ERROR_OPENING_FAILED Opening failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.load\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } save method Saves the device's key map into persistent path. Parameters Name Type Description params object ... params.device string Device name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL File is not created ERROR_BAD_REQUEST Bad JSON param data format ERROR_ILLEGAL_STATE Illegal state Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.save\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } pair method Activates pairing mode of a device. Parameters Name Type Description params object ... params.device string Device name Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL Failed to activate pairing ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.pair\", \"params\": { \"device\": \"DevInput\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } unpair method Unpairs a device. Parameters Name Type Description params object ... params.device string Device name params.bindid string Binding ID Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL Failed to unpair the device ERROR_BAD_REQUEST Bad JSON param data format Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.unpair\", \"params\": { \"device\": \"DevInput\", \"bindid\": \"id\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the RemoteControl plugin: RemoteControl interface properties: Property Description devices (read-only) Names of all available devices device (read-only) Metadata of a specific device devices property Provides access to the names of all available devices. This property is read-only . Value Result Name Type Description result array Names of all available devices result[#] string Device name Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.devices\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Web\" ] } device property Provides access to the metadata of a specific device. This property is read-only . Value The device argument shall be passed as the index to the property, e.g. RemoteControl.1.device@<device> . Result Name Type Description result object Metadata of a specific device result.metadata string Device metadata Errors Message Description ERROR_GENERAL Metadata not supported on a virtual device ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.device@DevInput\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"metadata\": \"It is based on protocol A\" } } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the RemoteControl plugin: RemoteControl interface events: Notification Description keypressed Notifies of a key press/release action keypressed notification Notifies of a key press/release action. Parameters Name Type Description params object ... params.pressed boolean Denotes if the key was pressed (true) or released (false) The key code argument will be passed within the designator, e.g. 42.client.keypressed . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.register\", \"params\": { \"event\": \"keypressed\", \"id\": \"42.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"42.client.keypressed\", \"params\": { \"pressed\": false } }","title":"Remote Control Plugin"},{"location":"plugins/RemoteControlPlugin/#remote-control-plugin","text":"Version: 1.0 Status: RemoteControl plugin for Thunder framework.","title":"Remote Control Plugin"},{"location":"plugins/RemoteControlPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/RemoteControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/RemoteControlPlugin/#scope","text":"This document describes purpose and functionality of the RemoteControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/RemoteControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/RemoteControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/RemoteControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/RemoteControlPlugin/#description","text":"The RemoteControl plugin provides user-input functionality from various key-code sources (e.g. STB RC). The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/RemoteControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: RemoteControl ) classname string Class name: RemoteControl locator string Library name: libThunderRemoteControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.mapfile string (optional) Map File configuration?.postlookupfile string (optional) PostLookup File configuration?.passon boolean (optional) Enable passon configuration?.repeatstart integer (optional) Maximum number of repeats configuration?.repeatinterval integer (optional) Maximum duration between repeats configuration?.releasetimeout integer (optional) Release timeout configuration?.devices array (optional) List of devices configuration?.devices[#] object (optional) ... configuration?.devices[#]?.name string (optional) Name configuration?.devices[#]?.mapfile string (optional) Map File configuration?.devices[#]?.passon boolean (optional) Enable passon configuration?.devices[#]?.settings string (optional) Settings configuration?.virtuals array (optional) List of virtuals configuration?.virtuals[#] object (optional) ... configuration?.virtuals[#]?.name string (optional) Name configuration?.virtuals[#]?.mapfile string (optional) Map File configuration?.virtuals[#]?.passon boolean (optional) Enable passon configuration?.virtuals[#]?.settings string (optional) Settings configuration?.links array (optional) List of Links configuration?.links[#] object (optional) ... configuration?.links[#]?.name string (optional) Name configuration?.links[#]?.mapfile string (optional) Map File","title":"Configuration"},{"location":"plugins/RemoteControlPlugin/#interfaces","text":"This plugin implements the following interfaces: RemoteControl.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/RemoteControlPlugin/#methods","text":"The following methods are provided by the RemoteControl plugin: RemoteControl interface methods: Method Description key Gets key code details send Sends a key to a device (press and release) press Presses a key on a device release Releases a key on a device add Adds a key code to the key map modify Modifies a key code in the key map delete Deletes a key code from the key map load Re-loads the device's key map from persistent memory save Saves the device's key map into persistent path pair Activates pairing mode of a device unpair Unpairs a device","title":"Methods"},{"location":"plugins/RemoteControlPlugin/#key-method","text":"Gets key code details.","title":"key method"},{"location":"plugins/RemoteControlPlugin/#parameters","text":"Name Type Description params object ... params.device string Device name params.code integer Key code","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result","text":"Name Type Description result object ... result.code integer Key code result.key integer Key ingest value result?.modifiers array (optional) List of key modifiers result?.modifiers[#] string (optional) Key modifier","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors","text":"Message Description ERROR_UNKNOWN_KEY Key does not exist ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.key\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#send-method","text":"Sends a key to a device (press and release).","title":"send method"},{"location":"plugins/RemoteControlPlugin/#parameters_1","text":"Name Type Description params object ... params.device string Device name params.code integer Key code","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_1","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist ERROR_ALREADY_RELEASED Key is already released","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.send\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#press-method","text":"Presses a key on a device.","title":"press method"},{"location":"plugins/RemoteControlPlugin/#parameters_2","text":"Name Type Description params object ... params.device string Device name params.code integer Key code","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result_2","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_2","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.press\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#release-method","text":"Releases a key on a device.","title":"release method"},{"location":"plugins/RemoteControlPlugin/#parameters_3","text":"Name Type Description params object ... params.device string Device name params.code integer Key code","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result_3","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_3","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist ERROR_UNKNOWN_TABLE Key map table does not exist ERROR_ALREADY_RELEASED Key is already released","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.release\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#add-method","text":"Adds a key code to the key map.","title":"add method"},{"location":"plugins/RemoteControlPlugin/#parameters_4","text":"Name Type Description params object ... params.device string Device name params.code integer Key code params.key integer Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result_4","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_4","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Code already exists","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.add\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#modify-method","text":"Modifies a key code in the key map.","title":"modify method"},{"location":"plugins/RemoteControlPlugin/#parameters_5","text":"Name Type Description params object ... params.device string Device name params.code integer Key code params.key integer Key ingest value params?.modifiers array (optional) List of key modifiers params?.modifiers[#] string (optional) Key modifier","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result_5","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_5","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format ERROR_UNKNOWN_KEY Key does not exist","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.modify\", \"params\": { \"device\": \"DevInput\", \"code\": 1, \"key\": 103, \"modifiers\": [ \"leftshift\" ] } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#delete-method","text":"Deletes a key code from the key map.","title":"delete method"},{"location":"plugins/RemoteControlPlugin/#parameters_6","text":"Name Type Description params object ... params.device string Device name params.code integer Key code","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result_6","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_6","text":"Message Description ERROR_UNKNOWN_KEY Key does not exist ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.delete\", \"params\": { \"device\": \"DevInput\", \"code\": 1 } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#load-method","text":"Re-loads the device's key map from persistent memory.","title":"load method"},{"location":"plugins/RemoteControlPlugin/#parameters_7","text":"Name Type Description params object ... params.device string Device name","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result_7","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_7","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL File does not exist ERROR_BAD_REQUEST Bad JSON param data format ERROR_ILLEGAL_STATE Illegal state ERROR_OPENING_FAILED Opening failed","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.load\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#save-method","text":"Saves the device's key map into persistent path.","title":"save method"},{"location":"plugins/RemoteControlPlugin/#parameters_8","text":"Name Type Description params object ... params.device string Device name","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result_8","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_8","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL File is not created ERROR_BAD_REQUEST Bad JSON param data format ERROR_ILLEGAL_STATE Illegal state","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.save\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#pair-method","text":"Activates pairing mode of a device.","title":"pair method"},{"location":"plugins/RemoteControlPlugin/#parameters_9","text":"Name Type Description params object ... params.device string Device name","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result_9","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_9","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL Failed to activate pairing ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_9","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.pair\", \"params\": { \"device\": \"DevInput\" } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#unpair-method","text":"Unpairs a device.","title":"unpair method"},{"location":"plugins/RemoteControlPlugin/#parameters_10","text":"Name Type Description params object ... params.device string Device name params.bindid string Binding ID","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#result_10","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_10","text":"Message Description ERROR_UNAVAILABLE Unknown device ERROR_GENERAL Failed to unpair the device ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_10","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.unpair\", \"params\": { \"device\": \"DevInput\", \"bindid\": \"id\" } }","title":"Request"},{"location":"plugins/RemoteControlPlugin/#response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/RemoteControlPlugin/#properties","text":"The following properties are provided by the RemoteControl plugin: RemoteControl interface properties: Property Description devices (read-only) Names of all available devices device (read-only) Metadata of a specific device","title":"Properties"},{"location":"plugins/RemoteControlPlugin/#devices-property","text":"Provides access to the names of all available devices. This property is read-only .","title":"devices property"},{"location":"plugins/RemoteControlPlugin/#value","text":"","title":"Value"},{"location":"plugins/RemoteControlPlugin/#result_11","text":"Name Type Description result array Names of all available devices result[#] string Device name","title":"Result"},{"location":"plugins/RemoteControlPlugin/#example_11","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.devices\" }","title":"Get Request"},{"location":"plugins/RemoteControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"Web\" ] }","title":"Get Response"},{"location":"plugins/RemoteControlPlugin/#device-property","text":"Provides access to the metadata of a specific device. This property is read-only .","title":"device property"},{"location":"plugins/RemoteControlPlugin/#value_1","text":"The device argument shall be passed as the index to the property, e.g. RemoteControl.1.device@<device> .","title":"Value"},{"location":"plugins/RemoteControlPlugin/#result_12","text":"Name Type Description result object Metadata of a specific device result.metadata string Device metadata","title":"Result"},{"location":"plugins/RemoteControlPlugin/#errors_11","text":"Message Description ERROR_GENERAL Metadata not supported on a virtual device ERROR_UNAVAILABLE Unknown device ERROR_BAD_REQUEST Bad JSON param data format","title":"Errors"},{"location":"plugins/RemoteControlPlugin/#example_12","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.device@DevInput\" }","title":"Get Request"},{"location":"plugins/RemoteControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"metadata\": \"It is based on protocol A\" } }","title":"Get Response"},{"location":"plugins/RemoteControlPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the RemoteControl plugin: RemoteControl interface events: Notification Description keypressed Notifies of a key press/release action","title":"Notifications"},{"location":"plugins/RemoteControlPlugin/#keypressed-notification","text":"Notifies of a key press/release action.","title":"keypressed notification"},{"location":"plugins/RemoteControlPlugin/#parameters_11","text":"Name Type Description params object ... params.pressed boolean Denotes if the key was pressed (true) or released (false) The key code argument will be passed within the designator, e.g. 42.client.keypressed .","title":"Parameters"},{"location":"plugins/RemoteControlPlugin/#example_13","text":"","title":"Example"},{"location":"plugins/RemoteControlPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"RemoteControl.1.register\", \"params\": { \"event\": \"keypressed\", \"id\": \"42.client\" } }","title":"Registration"},{"location":"plugins/RemoteControlPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"42.client.keypressed\", \"params\": { \"pressed\": false } }","title":"Message"},{"location":"plugins/ResourceMonitorPlugin/","text":"ResourceMonitor Plugin Version: 1.0 Status: ResourceMonitor plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the ResourceMonitor plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The ResourceMonitor plugin provides web browsing functionality based on the ResourceMonitor engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: ResourceMonitor ) classname string Class name: ResourceMonitor locator string Library name: libThunderResourceMonitor.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.path string (optional) Path of resource configuration?.interval integer (optional) Duration between measurements (default: 5) configuration?.mode string (optional) Mode (options: \"single\", \"multiple\", \"callsign\", \"classname\") configuration?.parent-name string (optional) Name of parent process","title":"ResourceMonitor Plugin"},{"location":"plugins/ResourceMonitorPlugin/#resourcemonitor-plugin","text":"Version: 1.0 Status: ResourceMonitor plugin for Thunder framework.","title":"ResourceMonitor Plugin"},{"location":"plugins/ResourceMonitorPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"plugins/ResourceMonitorPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/ResourceMonitorPlugin/#scope","text":"This document describes purpose and functionality of the ResourceMonitor plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"plugins/ResourceMonitorPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/ResourceMonitorPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/ResourceMonitorPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/ResourceMonitorPlugin/#description","text":"The ResourceMonitor plugin provides web browsing functionality based on the ResourceMonitor engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/ResourceMonitorPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: ResourceMonitor ) classname string Class name: ResourceMonitor locator string Library name: libThunderResourceMonitor.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.path string (optional) Path of resource configuration?.interval integer (optional) Duration between measurements (default: 5) configuration?.mode string (optional) Mode (options: \"single\", \"multiple\", \"callsign\", \"classname\") configuration?.parent-name string (optional) Name of parent process","title":"Configuration"},{"location":"plugins/SecurityAgentPlugin/","text":"Security Agent Plugin Version: 1.0 Status: SecurityAgent plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Introduction Scope This document describes purpose and functionality of the SecurityAgent plugin. It includes detailed specification about its configuration and methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description Security Agent of thunder is responsible to allow or block access to the Thunder API. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: SecurityAgent ) classname string Class name: SecurityAgent locator string Library name: libThunderSecurityAgent.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.acl string (optional) ACL configuration?.connector string (optional) Connector Interfaces This plugin implements the following interfaces: SecurityAgent.json (version 1.0.0) (compliant format) Methods The following methods are provided by the SecurityAgent plugin: SecurityAgent interface methods: Method Description createtoken Creates Token validate Validates Token createtoken method Creates Token. Description Create a signed JsonWeb token from provided payload. Parameters Name Type Description params object ... params?.url string (optional) Url of application origin params?.user string (optional) Username params?.hash string (optional) Random hash Result Name Type Description result object ... result.token string Signed JsonWeb token Errors Message Description ERROR_GENERAL Token creation failed Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.createtoken\", \"params\": { \"url\": \"https://test.comcast.com\", \"user\": \"Test\", \"hash\": \"1CLYex47SY\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } } validate method Validates Token. Description Checks whether the token is valid and properly signed. Parameters Name Type Description params object ... params.token string Token that will be validated Result Name Type Description result object ... result.valid boolean Tells whether token is signature is correct Errors Message Description Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.validate\", \"params\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"valid\": false } }","title":"Security Agent Plugin"},{"location":"plugins/SecurityAgentPlugin/#security-agent-plugin","text":"Version: 1.0 Status: SecurityAgent plugin for Thunder framework.","title":"Security Agent Plugin"},{"location":"plugins/SecurityAgentPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods","title":"Table of Contents"},{"location":"plugins/SecurityAgentPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/SecurityAgentPlugin/#scope","text":"This document describes purpose and functionality of the SecurityAgent plugin. It includes detailed specification about its configuration and methods provided.","title":"Scope"},{"location":"plugins/SecurityAgentPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/SecurityAgentPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/SecurityAgentPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/SecurityAgentPlugin/#description","text":"Security Agent of thunder is responsible to allow or block access to the Thunder API. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/SecurityAgentPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: SecurityAgent ) classname string Class name: SecurityAgent locator string Library name: libThunderSecurityAgent.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.acl string (optional) ACL configuration?.connector string (optional) Connector","title":"Configuration"},{"location":"plugins/SecurityAgentPlugin/#interfaces","text":"This plugin implements the following interfaces: SecurityAgent.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/SecurityAgentPlugin/#methods","text":"The following methods are provided by the SecurityAgent plugin: SecurityAgent interface methods: Method Description createtoken Creates Token validate Validates Token","title":"Methods"},{"location":"plugins/SecurityAgentPlugin/#createtoken-method","text":"Creates Token.","title":"createtoken method"},{"location":"plugins/SecurityAgentPlugin/#description_1","text":"Create a signed JsonWeb token from provided payload.","title":"Description"},{"location":"plugins/SecurityAgentPlugin/#parameters","text":"Name Type Description params object ... params?.url string (optional) Url of application origin params?.user string (optional) Username params?.hash string (optional) Random hash","title":"Parameters"},{"location":"plugins/SecurityAgentPlugin/#result","text":"Name Type Description result object ... result.token string Signed JsonWeb token","title":"Result"},{"location":"plugins/SecurityAgentPlugin/#errors","text":"Message Description ERROR_GENERAL Token creation failed","title":"Errors"},{"location":"plugins/SecurityAgentPlugin/#example","text":"","title":"Example"},{"location":"plugins/SecurityAgentPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.createtoken\", \"params\": { \"url\": \"https://test.comcast.com\", \"user\": \"Test\", \"hash\": \"1CLYex47SY\" } }","title":"Request"},{"location":"plugins/SecurityAgentPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } }","title":"Response"},{"location":"plugins/SecurityAgentPlugin/#validate-method","text":"Validates Token.","title":"validate method"},{"location":"plugins/SecurityAgentPlugin/#description_2","text":"Checks whether the token is valid and properly signed.","title":"Description"},{"location":"plugins/SecurityAgentPlugin/#parameters_1","text":"Name Type Description params object ... params.token string Token that will be validated","title":"Parameters"},{"location":"plugins/SecurityAgentPlugin/#result_1","text":"Name Type Description result object ... result.valid boolean Tells whether token is signature is correct","title":"Result"},{"location":"plugins/SecurityAgentPlugin/#errors_1","text":"Message Description","title":"Errors"},{"location":"plugins/SecurityAgentPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/SecurityAgentPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SecurityAgent.1.validate\", \"params\": { \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICAgImpzb25ycGMiOiAiMi4wIiwgCiAgICAiaWQiOiAxMjM0NTY3ODkwLCAKICAgICJtZXRob2QiOiAiQ29udHJvbGxlci4xLmFjdGl2YXRlIiwgCiAgICAicGFyYW1zIjogewogICAgICAgICJjYWxsc2lnbiI6ICJTZWN1cml0eUFnZW50IgogICAgfQp9.lL40nTwRyBvMwiglZhl5_rB8ycY1uhAJRFx9pGATMRQ\" } }","title":"Request"},{"location":"plugins/SecurityAgentPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"valid\": false } }","title":"Response"},{"location":"plugins/SparkPlugin/","text":"Spark Plugin Version: 1.0 Status: Spark plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Spark plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Spark plugin provides web browsing functionality based on the Spark engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Spark ) classname string Class name: Spark locator string Library name: libThunderSpark.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.url string (optional) The URL that is loaded upon starting the browser Interfaces This plugin implements the following interfaces: Spark.json (version 1.0.0) (uncompliant-extended format) Browser.json (version 1.0.0) (uncompliant-extended format) StateControl.json (version 1.0.0) (uncompliant-extended format) Methods The following methods are provided by the Spark plugin: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Spark plugin: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps (read-only) Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service url property Provides access to the URL loaded in the browser. Also see: urlchange Value Name Type Description (property) string URL loaded in the browser Result Name Type Description result string URL loaded in the browser Errors Message Description ERROR_INCORRECT_URL Incorrect URL given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\", \"params\": \"https://www.google.com\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the current browser visibility. Also see: visibilitychange Value Name Type Description (property) string Current browser visibility Result Name Type Description result string Current browser visibility Errors Message Description ERROR_UNAVAILABLE Returned when the operation is unavailable Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\", \"params\": \"visible\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current number of frames per second the browser is rendering. This property is read-only . Value Result Name Type Description result integer Current number of frames per second the browser is rendering Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service Result Name Type Description result string Running state of the service Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Spark plugin: Browser interface events: Notification Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Notification Description statechange Signals a state change of the service urlchange notification Signals a URL change in the browser. Parameters Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) (default: True ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } } visibilitychange notification Signals a visibility change of the browser. Parameters Name Type Description params object ... params.hidden boolean Determines if the browser has been hidden (true) or made visible (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } } statechange notification Signals a state change of the service. Parameters Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Spark Plugin"},{"location":"plugins/SparkPlugin/#spark-plugin","text":"Version: 1.0 Status: Spark plugin for Thunder framework.","title":"Spark Plugin"},{"location":"plugins/SparkPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/SparkPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/SparkPlugin/#scope","text":"This document describes purpose and functionality of the Spark plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/SparkPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/SparkPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/SparkPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/SparkPlugin/#description","text":"The Spark plugin provides web browsing functionality based on the Spark engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/SparkPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Spark ) classname string Class name: Spark locator string Library name: libThunderSpark.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.url string (optional) The URL that is loaded upon starting the browser","title":"Configuration"},{"location":"plugins/SparkPlugin/#interfaces","text":"This plugin implements the following interfaces: Spark.json (version 1.0.0) (uncompliant-extended format) Browser.json (version 1.0.0) (uncompliant-extended format) StateControl.json (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/SparkPlugin/#methods","text":"The following methods are provided by the Spark plugin: Browser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"plugins/SparkPlugin/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"plugins/SparkPlugin/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"plugins/SparkPlugin/#parameters","text":"Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"plugins/SparkPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/SparkPlugin/#errors","text":"Message Description ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"plugins/SparkPlugin/#example","text":"","title":"Example"},{"location":"plugins/SparkPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"plugins/SparkPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/SparkPlugin/#properties","text":"The following properties are provided by the Spark plugin: Browser interface properties: Property Description url URL loaded in the browser visibility Current browser visibility fps (read-only) Current number of frames per second the browser is rendering StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"plugins/SparkPlugin/#url-property","text":"Provides access to the URL loaded in the browser. Also see: urlchange","title":"url property"},{"location":"plugins/SparkPlugin/#value","text":"Name Type Description (property) string URL loaded in the browser","title":"Value"},{"location":"plugins/SparkPlugin/#result_1","text":"Name Type Description result string URL loaded in the browser","title":"Result"},{"location":"plugins/SparkPlugin/#errors_1","text":"Message Description ERROR_INCORRECT_URL Incorrect URL given","title":"Errors"},{"location":"plugins/SparkPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/SparkPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\" }","title":"Get Request"},{"location":"plugins/SparkPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://www.google.com\" }","title":"Get Response"},{"location":"plugins/SparkPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.url\", \"params\": \"https://www.google.com\" }","title":"Set Request"},{"location":"plugins/SparkPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/SparkPlugin/#visibility-property","text":"Provides access to the current browser visibility. Also see: visibilitychange","title":"visibility property"},{"location":"plugins/SparkPlugin/#value_1","text":"Name Type Description (property) string Current browser visibility","title":"Value"},{"location":"plugins/SparkPlugin/#result_2","text":"Name Type Description result string Current browser visibility","title":"Result"},{"location":"plugins/SparkPlugin/#errors_2","text":"Message Description ERROR_UNAVAILABLE Returned when the operation is unavailable","title":"Errors"},{"location":"plugins/SparkPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/SparkPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\" }","title":"Get Request"},{"location":"plugins/SparkPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"visible\" }","title":"Get Response"},{"location":"plugins/SparkPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.visibility\", \"params\": \"visible\" }","title":"Set Request"},{"location":"plugins/SparkPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/SparkPlugin/#fps-property","text":"Provides access to the current number of frames per second the browser is rendering. This property is read-only .","title":"fps property"},{"location":"plugins/SparkPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/SparkPlugin/#result_3","text":"Name Type Description result integer Current number of frames per second the browser is rendering","title":"Result"},{"location":"plugins/SparkPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/SparkPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.fps\" }","title":"Get Request"},{"location":"plugins/SparkPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 30 }","title":"Get Response"},{"location":"plugins/SparkPlugin/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"plugins/SparkPlugin/#value_3","text":"Name Type Description (property) string Running state of the service","title":"Value"},{"location":"plugins/SparkPlugin/#result_4","text":"Name Type Description result string Running state of the service","title":"Result"},{"location":"plugins/SparkPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/SparkPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\" }","title":"Get Request"},{"location":"plugins/SparkPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"plugins/SparkPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"plugins/SparkPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/SparkPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Spark plugin: Browser interface events: Notification Description urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser StateControl interface events: Notification Description statechange Signals a state change of the service","title":"Notifications"},{"location":"plugins/SparkPlugin/#urlchange-notification","text":"Signals a URL change in the browser.","title":"urlchange notification"},{"location":"plugins/SparkPlugin/#parameters_1","text":"Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Determines if the URL has just been loaded (true) or if URL change has been requested (false) (default: True )","title":"Parameters"},{"location":"plugins/SparkPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/SparkPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/SparkPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://www.google.com\", \"loaded\": false } }","title":"Message"},{"location":"plugins/SparkPlugin/#visibilitychange-notification","text":"Signals a visibility change of the browser.","title":"visibilitychange notification"},{"location":"plugins/SparkPlugin/#parameters_2","text":"Name Type Description params object ... params.hidden boolean Determines if the browser has been hidden (true) or made visible (false)","title":"Parameters"},{"location":"plugins/SparkPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/SparkPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/SparkPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Message"},{"location":"plugins/SparkPlugin/#statechange-notification","text":"Signals a state change of the service.","title":"statechange notification"},{"location":"plugins/SparkPlugin/#parameters_3","text":"Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"plugins/SparkPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/SparkPlugin/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Spark.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/SparkPlugin/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Message"},{"location":"plugins/StreamerPlugin/","text":"Streamer Plugin Version: 1.0 Status: Streamer plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Streamer plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description . The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Streamer ) classname string Class name: Streamer locator string Library name: libThunderStreamer.so startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: Streamer.json (version 1.0.0) (uncompliant-extended format) Methods The following methods are provided by the Streamer plugin: Streamer interface methods: Method Description create Creates a stream instance destroy Destroys a stream instance load Loads a source into a stream attach Attaches a decoder to the streamer detach Detaches a decoder from the streamer create method Creates a stream instance. Parameters Name Type Description params object ... params.type string Stream type Result Name Type Description result integer Stream ID Errors Message Description ERROR_BAD_REQUEST Invalid stream type given ERROR_UNAVAILABLE Fronted of the selected stream type is not available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.create\", \"params\": { \"type\": \"cable\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } destroy method Destroys a stream instance. Parameters Name Type Description params object ... params.id integer Stream ID Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.destroy\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } load method Loads a source into a stream. Also see: statechange Parameters Name Type Description params object ... params.id integer Stream ID params.location string Location of the source to load Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_INCORRECT_URL Invalid location given ERROR_GENERAL Undefined loading error ERROR_ILLEGAL_STATE Stream is not in a valid state Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.load\", \"params\": { \"id\": 0, \"location\": \"http://example.com/sample.m3u8\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } attach method Attaches a decoder to the streamer. Parameters Name Type Description params object ... params.id integer Stream ID Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_INPROGRESS Decoder already attached ERROR_ILLEGAL_STATE Stream is not in a valid state ERROR_UNAVAILABLE No free decoders available Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.attach\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } detach method Detaches a decoder from the streamer. Parameters Name Type Description params object ... params.id integer Stream ID Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Stream is not in a valid state or decoder not attached ERROR_INPROGRESS Decoder is in use Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.detach\", \"params\": { \"id\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Streamer plugin: Streamer interface properties: Property Description speed Playback speed position Stream position window Stream playback window speeds (read-only) Speeds supported by the stream player streams (read-only) All created stream instance IDs type (read-only) Type of a stream drm (read-only) DRM type associated with a stream state (read-only) Current state of a stream metadata (read-only) Metadata associated with the stream error (read-only) Most recent error code elements (read-only) Stream elements speed property Provides access to the playback speed. Description Speed (in percentage) Also see: statechange Value Name Type Description (property) integer Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speed@<stream id> . Result Name Type Description result integer Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\", \"params\": 100 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } position property Provides access to the stream position. Value Name Type Description (property) integer Position (in milliseconds) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.position@<stream id> . Result Name Type Description result integer Position (in milliseconds) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 60000 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\", \"params\": 60000 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } window property Provides access to the stream playback window. Value Name Type Description (property) object Geometry of the window (property).x integer Horizontal position of the window (in pixels) (property).y integer Vertical position of the window (in pixels) (property).width integer Width of the window (in pixels) (property).height integer Height of the window (in pixels) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.window@<stream id> . Result Name Type Description result object Geometry of the window result.x integer Horizontal position of the window (in pixels) result.y integer Vertical position of the window (in pixels) result.width integer Width of the window (in pixels) result.height integer Height of the window (in pixels) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } speeds property Provides access to the speeds supported by the stream player. This property is read-only . Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speeds@<stream id> . Result Name Type Description result array Supported speeds (in percentage) result[#] integer (speeds in percentage) Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speeds@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 100, -100, 200, -200, 400, -400 ] } streams property Provides access to the all created stream instance IDs. This property is read-only . Value Result Name Type Description result array Stream IDs result[#] integer (a stream ID) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.streams\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 1, 2, 3 ] } type property Provides access to the type of a stream. This property is read-only . Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.type@<stream id> . Result Name Type Description result string Stream type Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.type@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"cable\" } drm property Provides access to the DRM type associated with a stream. This property is read-only . Also see: drmchange Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.drm@<stream id> . Result Name Type Description result string DRM used Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.drm@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"clearkey\" } state property Provides access to the current state of a stream. This property is read-only . Also see: statechange Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.state@<stream id> . Result Name Type Description result string Stream state Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.state@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"controlled\" } metadata property Provides access to the metadata associated with the stream. This property is read-only . Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.metadata@<stream id> . Result Name Type Description result string Custom implementation-specific metadata Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.metadata@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } error property Provides access to the most recent error code. This property is read-only . Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.error@<stream id> . Result Name Type Description result integer Custom implementation-specific error code value Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.error@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } elements property Provides access to the stream elements. This property is read-only . Value The stream id argument shall be passed as the index to the property, e.g. Streamer.1.elements@<stream id> . Result Name Type Description result array List of stream elements result[#] object Stream element result[#].type string Stream element type Errors Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_UNAVAILABLE Stream elements retrieval not supported Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.elements@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"video\" } ] } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Streamer plugin: Streamer interface events: Notification Description statechange Notifies of stream state change timeupdate Notifies of stream position change stream Notifies of a custom stream incident player Notifies of a custom player incident drm Notifies of a custom DRM-related incident statechange notification Notifies of stream state change. Parameters Name Type Description params object ... params.state string Stream state The Stream ID argument will be passed within the designator, e.g. 0.client.statechange . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"0.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"0.client.statechange\", \"params\": { \"state\": \"controlled\" } } timeupdate notification Notifies of stream position change. This event is fired every second to indicate the current stream position. It does not fire if the stream is paused (i.e. speed is set to 0). Parameters Name Type Description params object ... params.time integer Stream position in miliseconds The Stream ID argument will be passed within the designator, e.g. 0.client.timeupdate . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"timeupdate\", \"id\": \"0.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"0.client.timeupdate\", \"params\": { \"time\": 30000 } } stream notification Notifies of a custom stream incident. Parameters Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.stream . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"stream\", \"id\": \"0.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"0.client.stream\", \"params\": { \"code\": 1 } } player notification Notifies of a custom player incident. Parameters Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.player . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"player\", \"id\": \"0.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"0.client.player\", \"params\": { \"code\": 1 } } drm notification Notifies of a custom DRM-related incident. Parameters Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.drm . Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"drm\", \"id\": \"0.client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"0.client.drm\", \"params\": { \"code\": 1 } }","title":"Streamer Plugin"},{"location":"plugins/StreamerPlugin/#streamer-plugin","text":"Version: 1.0 Status: Streamer plugin for Thunder framework.","title":"Streamer Plugin"},{"location":"plugins/StreamerPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/StreamerPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/StreamerPlugin/#scope","text":"This document describes purpose and functionality of the Streamer plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/StreamerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/StreamerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/StreamerPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/StreamerPlugin/#description","text":". The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/StreamerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Streamer ) classname string Class name: Streamer locator string Library name: libThunderStreamer.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/StreamerPlugin/#interfaces","text":"This plugin implements the following interfaces: Streamer.json (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/StreamerPlugin/#methods","text":"The following methods are provided by the Streamer plugin: Streamer interface methods: Method Description create Creates a stream instance destroy Destroys a stream instance load Loads a source into a stream attach Attaches a decoder to the streamer detach Detaches a decoder from the streamer","title":"Methods"},{"location":"plugins/StreamerPlugin/#create-method","text":"Creates a stream instance.","title":"create method"},{"location":"plugins/StreamerPlugin/#parameters","text":"Name Type Description params object ... params.type string Stream type","title":"Parameters"},{"location":"plugins/StreamerPlugin/#result","text":"Name Type Description result integer Stream ID","title":"Result"},{"location":"plugins/StreamerPlugin/#errors","text":"Message Description ERROR_BAD_REQUEST Invalid stream type given ERROR_UNAVAILABLE Fronted of the selected stream type is not available","title":"Errors"},{"location":"plugins/StreamerPlugin/#example","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.create\", \"params\": { \"type\": \"cable\" } }","title":"Request"},{"location":"plugins/StreamerPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Response"},{"location":"plugins/StreamerPlugin/#destroy-method","text":"Destroys a stream instance.","title":"destroy method"},{"location":"plugins/StreamerPlugin/#parameters_1","text":"Name Type Description params object ... params.id integer Stream ID","title":"Parameters"},{"location":"plugins/StreamerPlugin/#result_1","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_1","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.destroy\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"plugins/StreamerPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/StreamerPlugin/#load-method","text":"Loads a source into a stream. Also see: statechange","title":"load method"},{"location":"plugins/StreamerPlugin/#parameters_2","text":"Name Type Description params object ... params.id integer Stream ID params.location string Location of the source to load","title":"Parameters"},{"location":"plugins/StreamerPlugin/#result_2","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_2","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_INCORRECT_URL Invalid location given ERROR_GENERAL Undefined loading error ERROR_ILLEGAL_STATE Stream is not in a valid state","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.load\", \"params\": { \"id\": 0, \"location\": \"http://example.com/sample.m3u8\" } }","title":"Request"},{"location":"plugins/StreamerPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/StreamerPlugin/#attach-method","text":"Attaches a decoder to the streamer.","title":"attach method"},{"location":"plugins/StreamerPlugin/#parameters_3","text":"Name Type Description params object ... params.id integer Stream ID","title":"Parameters"},{"location":"plugins/StreamerPlugin/#result_3","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_3","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_INPROGRESS Decoder already attached ERROR_ILLEGAL_STATE Stream is not in a valid state ERROR_UNAVAILABLE No free decoders available","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.attach\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"plugins/StreamerPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/StreamerPlugin/#detach-method","text":"Detaches a decoder from the streamer.","title":"detach method"},{"location":"plugins/StreamerPlugin/#parameters_4","text":"Name Type Description params object ... params.id integer Stream ID","title":"Parameters"},{"location":"plugins/StreamerPlugin/#result_4","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_4","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Stream is not in a valid state or decoder not attached ERROR_INPROGRESS Decoder is in use","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.detach\", \"params\": { \"id\": 0 } }","title":"Request"},{"location":"plugins/StreamerPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/StreamerPlugin/#properties","text":"The following properties are provided by the Streamer plugin: Streamer interface properties: Property Description speed Playback speed position Stream position window Stream playback window speeds (read-only) Speeds supported by the stream player streams (read-only) All created stream instance IDs type (read-only) Type of a stream drm (read-only) DRM type associated with a stream state (read-only) Current state of a stream metadata (read-only) Metadata associated with the stream error (read-only) Most recent error code elements (read-only) Stream elements","title":"Properties"},{"location":"plugins/StreamerPlugin/#speed-property","text":"Provides access to the playback speed.","title":"speed property"},{"location":"plugins/StreamerPlugin/#description_1","text":"Speed (in percentage) Also see: statechange","title":"Description"},{"location":"plugins/StreamerPlugin/#value","text":"Name Type Description (property) integer Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speed@<stream id> .","title":"Value"},{"location":"plugins/StreamerPlugin/#result_5","text":"Name Type Description result integer Speed percentage; e.g.: 0 - pause, 100 - normal playback, -100 - rewind, -200 - reverse at twice the normal speed, 50 - forward at half speed, etc. Must be one of the speeds supported by the player","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_5","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 100 }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speed@0\", \"params\": 100 }","title":"Set Request"},{"location":"plugins/StreamerPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/StreamerPlugin/#position-property","text":"Provides access to the stream position.","title":"position property"},{"location":"plugins/StreamerPlugin/#value_1","text":"Name Type Description (property) integer Position (in milliseconds) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.position@<stream id> .","title":"Value"},{"location":"plugins/StreamerPlugin/#result_6","text":"Name Type Description result integer Position (in milliseconds)","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_6","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 60000 }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.position@0\", \"params\": 60000 }","title":"Set Request"},{"location":"plugins/StreamerPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/StreamerPlugin/#window-property","text":"Provides access to the stream playback window.","title":"window property"},{"location":"plugins/StreamerPlugin/#value_2","text":"Name Type Description (property) object Geometry of the window (property).x integer Horizontal position of the window (in pixels) (property).y integer Vertical position of the window (in pixels) (property).width integer Width of the window (in pixels) (property).height integer Height of the window (in pixels) The stream id argument shall be passed as the index to the property, e.g. Streamer.1.window@<stream id> .","title":"Value"},{"location":"plugins/StreamerPlugin/#result_7","text":"Name Type Description result object Geometry of the window result.x integer Horizontal position of the window (in pixels) result.y integer Vertical position of the window (in pixels) result.width integer Width of the window (in pixels) result.height integer Height of the window (in pixels)","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_7","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.window@0\", \"params\": { \"x\": 0, \"y\": 0, \"width\": 1080, \"height\": 720 } }","title":"Set Request"},{"location":"plugins/StreamerPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/StreamerPlugin/#speeds-property","text":"Provides access to the speeds supported by the stream player. This property is read-only .","title":"speeds property"},{"location":"plugins/StreamerPlugin/#value_3","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.speeds@<stream id> .","title":"Value"},{"location":"plugins/StreamerPlugin/#result_8","text":"Name Type Description result array Supported speeds (in percentage) result[#] integer (speeds in percentage)","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_8","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_ILLEGAL_STATE Player is not in a valid state or decoder not attached","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.speeds@0\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 100, -100, 200, -200, 400, -400 ] }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#streams-property","text":"Provides access to the all created stream instance IDs. This property is read-only .","title":"streams property"},{"location":"plugins/StreamerPlugin/#value_4","text":"","title":"Value"},{"location":"plugins/StreamerPlugin/#result_9","text":"Name Type Description result array Stream IDs result[#] integer (a stream ID)","title":"Result"},{"location":"plugins/StreamerPlugin/#example_9","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.streams\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ 0, 1, 2, 3 ] }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#type-property","text":"Provides access to the type of a stream. This property is read-only .","title":"type property"},{"location":"plugins/StreamerPlugin/#value_5","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.type@<stream id> .","title":"Value"},{"location":"plugins/StreamerPlugin/#result_10","text":"Name Type Description result string Stream type","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_9","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_10","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.type@0\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"cable\" }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#drm-property","text":"Provides access to the DRM type associated with a stream. This property is read-only . Also see: drmchange","title":"drm property"},{"location":"plugins/StreamerPlugin/#value_6","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.drm@<stream id> .","title":"Value"},{"location":"plugins/StreamerPlugin/#result_11","text":"Name Type Description result string DRM used","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_10","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_11","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.drm@0\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"clearkey\" }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#state-property","text":"Provides access to the current state of a stream. This property is read-only . Also see: statechange","title":"state property"},{"location":"plugins/StreamerPlugin/#value_7","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.state@<stream id> .","title":"Value"},{"location":"plugins/StreamerPlugin/#result_12","text":"Name Type Description result string Stream state","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_11","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_12","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.state@0\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"controlled\" }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#metadata-property","text":"Provides access to the metadata associated with the stream. This property is read-only .","title":"metadata property"},{"location":"plugins/StreamerPlugin/#value_8","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.metadata@<stream id> .","title":"Value"},{"location":"plugins/StreamerPlugin/#result_13","text":"Name Type Description result string Custom implementation-specific metadata","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_12","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_13","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.metadata@0\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#error-property","text":"Provides access to the most recent error code. This property is read-only .","title":"error property"},{"location":"plugins/StreamerPlugin/#value_9","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.error@<stream id> .","title":"Value"},{"location":"plugins/StreamerPlugin/#result_14","text":"Name Type Description result integer Custom implementation-specific error code value","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_13","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_14","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.error@0\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#elements-property","text":"Provides access to the stream elements. This property is read-only .","title":"elements property"},{"location":"plugins/StreamerPlugin/#value_10","text":"The stream id argument shall be passed as the index to the property, e.g. Streamer.1.elements@<stream id> .","title":"Value"},{"location":"plugins/StreamerPlugin/#result_15","text":"Name Type Description result array List of stream elements result[#] object Stream element result[#].type string Stream element type","title":"Result"},{"location":"plugins/StreamerPlugin/#errors_14","text":"Message Description ERROR_UNKNOWN_KEY Unknown stream ID given ERROR_UNAVAILABLE Stream elements retrieval not supported","title":"Errors"},{"location":"plugins/StreamerPlugin/#example_15","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.elements@0\" }","title":"Get Request"},{"location":"plugins/StreamerPlugin/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"type\": \"video\" } ] }","title":"Get Response"},{"location":"plugins/StreamerPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Streamer plugin: Streamer interface events: Notification Description statechange Notifies of stream state change timeupdate Notifies of stream position change stream Notifies of a custom stream incident player Notifies of a custom player incident drm Notifies of a custom DRM-related incident","title":"Notifications"},{"location":"plugins/StreamerPlugin/#statechange-notification","text":"Notifies of stream state change.","title":"statechange notification"},{"location":"plugins/StreamerPlugin/#parameters_5","text":"Name Type Description params object ... params.state string Stream state The Stream ID argument will be passed within the designator, e.g. 0.client.statechange .","title":"Parameters"},{"location":"plugins/StreamerPlugin/#example_16","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"0.client\" } }","title":"Registration"},{"location":"plugins/StreamerPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.statechange\", \"params\": { \"state\": \"controlled\" } }","title":"Message"},{"location":"plugins/StreamerPlugin/#timeupdate-notification","text":"Notifies of stream position change. This event is fired every second to indicate the current stream position. It does not fire if the stream is paused (i.e. speed is set to 0).","title":"timeupdate notification"},{"location":"plugins/StreamerPlugin/#parameters_6","text":"Name Type Description params object ... params.time integer Stream position in miliseconds The Stream ID argument will be passed within the designator, e.g. 0.client.timeupdate .","title":"Parameters"},{"location":"plugins/StreamerPlugin/#example_17","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"timeupdate\", \"id\": \"0.client\" } }","title":"Registration"},{"location":"plugins/StreamerPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.timeupdate\", \"params\": { \"time\": 30000 } }","title":"Message"},{"location":"plugins/StreamerPlugin/#stream-notification","text":"Notifies of a custom stream incident.","title":"stream notification"},{"location":"plugins/StreamerPlugin/#parameters_7","text":"Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.stream .","title":"Parameters"},{"location":"plugins/StreamerPlugin/#example_18","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"stream\", \"id\": \"0.client\" } }","title":"Registration"},{"location":"plugins/StreamerPlugin/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.stream\", \"params\": { \"code\": 1 } }","title":"Message"},{"location":"plugins/StreamerPlugin/#player-notification","text":"Notifies of a custom player incident.","title":"player notification"},{"location":"plugins/StreamerPlugin/#parameters_8","text":"Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.player .","title":"Parameters"},{"location":"plugins/StreamerPlugin/#example_19","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#registration_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"player\", \"id\": \"0.client\" } }","title":"Registration"},{"location":"plugins/StreamerPlugin/#message_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.player\", \"params\": { \"code\": 1 } }","title":"Message"},{"location":"plugins/StreamerPlugin/#drm-notification","text":"Notifies of a custom DRM-related incident.","title":"drm notification"},{"location":"plugins/StreamerPlugin/#parameters_9","text":"Name Type Description params object ... params.code integer Implementation-specific incident code The Stream ID argument will be passed within the designator, e.g. 0.client.drm .","title":"Parameters"},{"location":"plugins/StreamerPlugin/#example_20","text":"","title":"Example"},{"location":"plugins/StreamerPlugin/#registration_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Streamer.1.register\", \"params\": { \"event\": \"drm\", \"id\": \"0.client\" } }","title":"Registration"},{"location":"plugins/StreamerPlugin/#message_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"0.client.drm\", \"params\": { \"code\": 1 } }","title":"Message"},{"location":"plugins/SubsystemControlPlugin/","text":"Subsystem Control Plugin Version: 1.0 Status: SubsystemControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the SubsystemControl plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description . The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: SubsystemControl ) classname string Class name: SubsystemControl locator string Library name: libThunderSubsystemControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Subsystem Control Plugin"},{"location":"plugins/SubsystemControlPlugin/#subsystem-control-plugin","text":"Version: 1.0 Status: SubsystemControl plugin for Thunder framework.","title":"Subsystem Control Plugin"},{"location":"plugins/SubsystemControlPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"plugins/SubsystemControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/SubsystemControlPlugin/#scope","text":"This document describes purpose and functionality of the SubsystemControl plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"plugins/SubsystemControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/SubsystemControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/SubsystemControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/SubsystemControlPlugin/#description","text":". The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/SubsystemControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: SubsystemControl ) classname string Class name: SubsystemControl locator string Library name: libThunderSubsystemControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/SystemCommandsPlugin/","text":"System Commands Plugin Version: 1.0 Status: SystemCommands plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Introduction Scope This document describes purpose and functionality of the SystemCommands plugin. It includes detailed specification about its configuration and methods provided. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The System Commands plugin allows executing of low level actions on the system. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: SystemCommands ) classname string Class name: SystemCommands locator string Library name: libThunderSystemCommands.so startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: SystemCommands.json (version 1.0.0) (compliant format) Methods The following methods are provided by the SystemCommands plugin: SystemCommands interface methods: Method Description usbreset Resets a USB device usbreset method Resets a USB device. Description With this method a USB device can be reset using USBFS_RESET ioctl command. Parameters Name Type Description params object ... params.device string USB device to reset (default: /dev/usb/001 ) Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_GENERAL Failed to reset the USB device ERROR_UNAVAILABLE Unknown USB device Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SystemCommands.1.usbreset\", \"params\": { \"device\": \"/dev/usb/001\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"System Commands Plugin"},{"location":"plugins/SystemCommandsPlugin/#system-commands-plugin","text":"Version: 1.0 Status: SystemCommands plugin for Thunder framework.","title":"System Commands Plugin"},{"location":"plugins/SystemCommandsPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods","title":"Table of Contents"},{"location":"plugins/SystemCommandsPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/SystemCommandsPlugin/#scope","text":"This document describes purpose and functionality of the SystemCommands plugin. It includes detailed specification about its configuration and methods provided.","title":"Scope"},{"location":"plugins/SystemCommandsPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/SystemCommandsPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/SystemCommandsPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/SystemCommandsPlugin/#description","text":"The System Commands plugin allows executing of low level actions on the system. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/SystemCommandsPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: SystemCommands ) classname string Class name: SystemCommands locator string Library name: libThunderSystemCommands.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/SystemCommandsPlugin/#interfaces","text":"This plugin implements the following interfaces: SystemCommands.json (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/SystemCommandsPlugin/#methods","text":"The following methods are provided by the SystemCommands plugin: SystemCommands interface methods: Method Description usbreset Resets a USB device","title":"Methods"},{"location":"plugins/SystemCommandsPlugin/#usbreset-method","text":"Resets a USB device.","title":"usbreset method"},{"location":"plugins/SystemCommandsPlugin/#description_1","text":"With this method a USB device can be reset using USBFS_RESET ioctl command.","title":"Description"},{"location":"plugins/SystemCommandsPlugin/#parameters","text":"Name Type Description params object ... params.device string USB device to reset (default: /dev/usb/001 )","title":"Parameters"},{"location":"plugins/SystemCommandsPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/SystemCommandsPlugin/#errors","text":"Message Description ERROR_GENERAL Failed to reset the USB device ERROR_UNAVAILABLE Unknown USB device","title":"Errors"},{"location":"plugins/SystemCommandsPlugin/#example","text":"","title":"Example"},{"location":"plugins/SystemCommandsPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"SystemCommands.1.usbreset\", \"params\": { \"device\": \"/dev/usb/001\" } }","title":"Request"},{"location":"plugins/SystemCommandsPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/TimeSyncPlugin/","text":"Time Sync Plugin Version: 1.0 Status: TimeSync plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the TimeSync plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Time Sync plugin provides time synchronization functionality from various time sources (e.g. NTP). The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: TimeSync ) classname string Class name: TimeSync locator string Library name: libThunderTimeSync.so startmode string Determines in which state the plugin should be moved to at startup of the framework deferred boolean (deprecated) (optional) Determines if automatic time sync shall be initially disabled. This parameter is deprecated and SubSystemControl could be used instead periodicity integer (optional) Periodicity of time synchronization (in hours), 0 for one-off synchronization retries integer (optional) Number of synchronization attempts if the source cannot be reached (may be 0) interval integer (optional) Time to wait (in milliseconds) before retrying a synchronization attempt after a failure sources array Time sources sources[#] string (a time source entry) Interfaces This plugin implements the following interfaces: TimeSync.json (version 1.0.0) (uncompliant-extended format) Methods The following methods are provided by the TimeSync plugin: TimeSync interface methods: Method Description synchronize Synchronizes time synchronize method Synchronizes time. Description Use this method to synchronize the system time with the currently configured time source. If automatic time synchronization is initially disabled or stopped, it will be restarted. Parameters This method takes no parameters. Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_INPROGRESS Returned when the method is called while previously triggered synchronization is in progress. ERROR_INCOMPLETE_CONFIG Returned when the source configuration is missing or invalid. Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synchronize\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the TimeSync plugin: TimeSync interface properties: Property Description synctime (read-only) Most recent synchronized time time Current system time synctime property Provides access to the most recent synchronized time. This property is read-only . Value Result Name Type Description result object Most recent synchronized time result.time string Synchronized time (in ISO8601 format); empty string if the time has never been synchronized result?.source string (optional) The synchronization source e.g. an NTP server Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synctime\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"time\": \"2019-05-07T07:20:26Z\", \"source\": \"ntp://example.com\" } } time property Provides access to the current system time. Description Upon setting this property automatic time synchronization will be stopped. Usage of this property is deprecated and the SubSystem control plugin can be used as an alternative to achieve the same Value Name Type Description (property) string System time (in ISO8601 format) Result Name Type Description result string System time (in ISO8601 format) Errors Message Description ERROR_BAD_REQUEST The time is invalid Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"2019-05-07T07:20:26Z\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\", \"params\": \"2019-05-07T07:20:26Z\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the TimeSync plugin: TimeSync interface events: Notification Description timechange Signals a time change timechange notification Signals a time change. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.register\", \"params\": { \"event\": \"timechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.timechange\" }","title":"Time Sync Plugin"},{"location":"plugins/TimeSyncPlugin/#time-sync-plugin","text":"Version: 1.0 Status: TimeSync plugin for Thunder framework.","title":"Time Sync Plugin"},{"location":"plugins/TimeSyncPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/TimeSyncPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/TimeSyncPlugin/#scope","text":"This document describes purpose and functionality of the TimeSync plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/TimeSyncPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/TimeSyncPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/TimeSyncPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/TimeSyncPlugin/#description","text":"The Time Sync plugin provides time synchronization functionality from various time sources (e.g. NTP). The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/TimeSyncPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: TimeSync ) classname string Class name: TimeSync locator string Library name: libThunderTimeSync.so startmode string Determines in which state the plugin should be moved to at startup of the framework deferred boolean (deprecated) (optional) Determines if automatic time sync shall be initially disabled. This parameter is deprecated and SubSystemControl could be used instead periodicity integer (optional) Periodicity of time synchronization (in hours), 0 for one-off synchronization retries integer (optional) Number of synchronization attempts if the source cannot be reached (may be 0) interval integer (optional) Time to wait (in milliseconds) before retrying a synchronization attempt after a failure sources array Time sources sources[#] string (a time source entry)","title":"Configuration"},{"location":"plugins/TimeSyncPlugin/#interfaces","text":"This plugin implements the following interfaces: TimeSync.json (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/TimeSyncPlugin/#methods","text":"The following methods are provided by the TimeSync plugin: TimeSync interface methods: Method Description synchronize Synchronizes time","title":"Methods"},{"location":"plugins/TimeSyncPlugin/#synchronize-method","text":"Synchronizes time.","title":"synchronize method"},{"location":"plugins/TimeSyncPlugin/#description_1","text":"Use this method to synchronize the system time with the currently configured time source. If automatic time synchronization is initially disabled or stopped, it will be restarted.","title":"Description"},{"location":"plugins/TimeSyncPlugin/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/TimeSyncPlugin/#result","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/TimeSyncPlugin/#errors","text":"Message Description ERROR_INPROGRESS Returned when the method is called while previously triggered synchronization is in progress. ERROR_INCOMPLETE_CONFIG Returned when the source configuration is missing or invalid.","title":"Errors"},{"location":"plugins/TimeSyncPlugin/#example","text":"","title":"Example"},{"location":"plugins/TimeSyncPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synchronize\" }","title":"Request"},{"location":"plugins/TimeSyncPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/TimeSyncPlugin/#properties","text":"The following properties are provided by the TimeSync plugin: TimeSync interface properties: Property Description synctime (read-only) Most recent synchronized time time Current system time","title":"Properties"},{"location":"plugins/TimeSyncPlugin/#synctime-property","text":"Provides access to the most recent synchronized time. This property is read-only .","title":"synctime property"},{"location":"plugins/TimeSyncPlugin/#value","text":"","title":"Value"},{"location":"plugins/TimeSyncPlugin/#result_1","text":"Name Type Description result object Most recent synchronized time result.time string Synchronized time (in ISO8601 format); empty string if the time has never been synchronized result?.source string (optional) The synchronization source e.g. an NTP server","title":"Result"},{"location":"plugins/TimeSyncPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/TimeSyncPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.synctime\" }","title":"Get Request"},{"location":"plugins/TimeSyncPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"time\": \"2019-05-07T07:20:26Z\", \"source\": \"ntp://example.com\" } }","title":"Get Response"},{"location":"plugins/TimeSyncPlugin/#time-property","text":"Provides access to the current system time.","title":"time property"},{"location":"plugins/TimeSyncPlugin/#description_2","text":"Upon setting this property automatic time synchronization will be stopped. Usage of this property is deprecated and the SubSystem control plugin can be used as an alternative to achieve the same","title":"Description"},{"location":"plugins/TimeSyncPlugin/#value_1","text":"Name Type Description (property) string System time (in ISO8601 format)","title":"Value"},{"location":"plugins/TimeSyncPlugin/#result_2","text":"Name Type Description result string System time (in ISO8601 format)","title":"Result"},{"location":"plugins/TimeSyncPlugin/#errors_1","text":"Message Description ERROR_BAD_REQUEST The time is invalid","title":"Errors"},{"location":"plugins/TimeSyncPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/TimeSyncPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\" }","title":"Get Request"},{"location":"plugins/TimeSyncPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"2019-05-07T07:20:26Z\" }","title":"Get Response"},{"location":"plugins/TimeSyncPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.time\", \"params\": \"2019-05-07T07:20:26Z\" }","title":"Set Request"},{"location":"plugins/TimeSyncPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/TimeSyncPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the TimeSync plugin: TimeSync interface events: Notification Description timechange Signals a time change","title":"Notifications"},{"location":"plugins/TimeSyncPlugin/#timechange-notification","text":"Signals a time change.","title":"timechange notification"},{"location":"plugins/TimeSyncPlugin/#parameters_1","text":"This notification carries no parameters.","title":"Parameters"},{"location":"plugins/TimeSyncPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/TimeSyncPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"TimeSync.1.register\", \"params\": { \"event\": \"timechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/TimeSyncPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.timechange\" }","title":"Message"},{"location":"plugins/VolumeControlPlugin/","text":"Volume Control Plugin Version: 1.0 Status: VolumeControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Properties Notifications Introduction Scope This document describes purpose and functionality of the VolumeControl plugin. It includes detailed specification about its configuration, properties provided and notifications sent. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The Volume Control plugin allows to manage system's audio volume. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: VolumeControl ) classname string Class name: VolumeControl locator string Library name: libWPEVolumeControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: IVolumeControl ( IVolumeControl.h ) (version 1.0.0) (uncompliant-extended format) Properties The following properties are provided by the VolumeControl plugin: VolumeControl interface properties: Property Description muted Audio mute state volume Audio volume level muted property Provides access to the audio mute state. Value Name Type Description (property) boolean Mute state (true: muted, false: un-muted) Result Name Type Description result boolean Mute state (true: muted, false: un-muted) Errors Message Description ERROR_GENERAL Failed to set/retrieve muting state Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } volume property Provides access to the audio volume level. Value Name Type Description (property) integer Volume level in percent Result Name Type Description result integer Volume level in percent Errors Message Description ERROR_GENERAL Failed to set/retrieve audio volume Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\", \"params\": 100 } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the VolumeControl plugin: VolumeControl interface events: Notification Description volume Signals volume change muted Signals mute state change volume notification Signals volume change. Parameters Name Type Description params object ... params.volume integer New bolume level in percent Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.register\", \"params\": { \"event\": \"volume\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.volume\", \"params\": { \"volume\": 100 } } muted notification Signals mute state change. Parameters Name Type Description params object ... params.muted boolean New mute state (true: muted, false: un-muted) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.register\", \"params\": { \"event\": \"muted\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.muted\", \"params\": { \"muted\": false } }","title":"Volume Control Plugin"},{"location":"plugins/VolumeControlPlugin/#volume-control-plugin","text":"Version: 1.0 Status: VolumeControl plugin for Thunder framework.","title":"Volume Control Plugin"},{"location":"plugins/VolumeControlPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Properties Notifications","title":"Table of Contents"},{"location":"plugins/VolumeControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/VolumeControlPlugin/#scope","text":"This document describes purpose and functionality of the VolumeControl plugin. It includes detailed specification about its configuration, properties provided and notifications sent.","title":"Scope"},{"location":"plugins/VolumeControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/VolumeControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/VolumeControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/VolumeControlPlugin/#description","text":"The Volume Control plugin allows to manage system's audio volume. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/VolumeControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: VolumeControl ) classname string Class name: VolumeControl locator string Library name: libWPEVolumeControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"plugins/VolumeControlPlugin/#interfaces","text":"This plugin implements the following interfaces: IVolumeControl ( IVolumeControl.h ) (version 1.0.0) (uncompliant-extended format)","title":"Interfaces"},{"location":"plugins/VolumeControlPlugin/#properties","text":"The following properties are provided by the VolumeControl plugin: VolumeControl interface properties: Property Description muted Audio mute state volume Audio volume level","title":"Properties"},{"location":"plugins/VolumeControlPlugin/#muted-property","text":"Provides access to the audio mute state.","title":"muted property"},{"location":"plugins/VolumeControlPlugin/#value","text":"Name Type Description (property) boolean Mute state (true: muted, false: un-muted)","title":"Value"},{"location":"plugins/VolumeControlPlugin/#result","text":"Name Type Description result boolean Mute state (true: muted, false: un-muted)","title":"Result"},{"location":"plugins/VolumeControlPlugin/#errors","text":"Message Description ERROR_GENERAL Failed to set/retrieve muting state","title":"Errors"},{"location":"plugins/VolumeControlPlugin/#example","text":"","title":"Example"},{"location":"plugins/VolumeControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\" }","title":"Get Request"},{"location":"plugins/VolumeControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"plugins/VolumeControlPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.muted\", \"params\": false }","title":"Set Request"},{"location":"plugins/VolumeControlPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/VolumeControlPlugin/#volume-property","text":"Provides access to the audio volume level.","title":"volume property"},{"location":"plugins/VolumeControlPlugin/#value_1","text":"Name Type Description (property) integer Volume level in percent","title":"Value"},{"location":"plugins/VolumeControlPlugin/#result_1","text":"Name Type Description result integer Volume level in percent","title":"Result"},{"location":"plugins/VolumeControlPlugin/#errors_1","text":"Message Description ERROR_GENERAL Failed to set/retrieve audio volume","title":"Errors"},{"location":"plugins/VolumeControlPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/VolumeControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\" }","title":"Get Request"},{"location":"plugins/VolumeControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"plugins/VolumeControlPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.volume\", \"params\": 100 }","title":"Set Request"},{"location":"plugins/VolumeControlPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/VolumeControlPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the VolumeControl plugin: VolumeControl interface events: Notification Description volume Signals volume change muted Signals mute state change","title":"Notifications"},{"location":"plugins/VolumeControlPlugin/#volume-notification","text":"Signals volume change.","title":"volume notification"},{"location":"plugins/VolumeControlPlugin/#parameters","text":"Name Type Description params object ... params.volume integer New bolume level in percent","title":"Parameters"},{"location":"plugins/VolumeControlPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/VolumeControlPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.register\", \"params\": { \"event\": \"volume\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/VolumeControlPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.volume\", \"params\": { \"volume\": 100 } }","title":"Message"},{"location":"plugins/VolumeControlPlugin/#muted-notification","text":"Signals mute state change.","title":"muted notification"},{"location":"plugins/VolumeControlPlugin/#parameters_1","text":"Name Type Description params object ... params.muted boolean New mute state (true: muted, false: un-muted)","title":"Parameters"},{"location":"plugins/VolumeControlPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/VolumeControlPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"VolumeControl.1.register\", \"params\": { \"event\": \"muted\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/VolumeControlPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.muted\", \"params\": { \"muted\": false } }","title":"Message"},{"location":"plugins/WebKitBrowserPlugin/","text":"WebKit Browser Plugin Version: 1.0 Status: WebKitBrowser plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the WebKitBrowser plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The WebKitBrowser plugin provides web browsing functionality based on the WebKit engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: WebKitBrowser ) classname string Class name: WebKitBrowser locator string Library name: libThunderWebKitBrowser.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.useragent string (optional) The UserAgent used during communication with the web server configuration?.url string (optional) The URL that is loaded upon starting the browser configuration?.injectedbundle string (optional) The name of the .so loaded to extend the HTML5 with customized JavaScript handlers configuration?.cookiestorage string (optional) Post-fixed path to the persistent location on where cookies will be stored configuration?.localstorage string (optional) Post-fixed path to the persistent location on where local-storage will be stored configuration?.certificatecheck boolean (optional) If enabled, SSL certificate error will lead to a page error configuration?.javascript object (optional) ... configuration?.javascript?.useLLInt boolean (optional) Enable Low Level Interpreter configuration?.javascript?.useJIT boolean (optional) Enable JIT configuration?.javascript?.useDFG boolean (optional) Enable Data-Flow-Graph-JIT compiler configuration?.javascript?.useFTL boolean (optional) Enable Faster-Than-Light-JIT compiler configuration?.javascript?.useDOM boolean (optional) Enable the DOM-JIT compiler configuration?.javascript?.dumpOptions string (optional) Dump options: 0 = None, 1 = Overridden only, 2 = All, 3 = Verbose configuration?.secure boolean (optional) If false, every domain can access any other domain, otherwise fill in fields in whitelist definition table configuration?.whitelist object (optional) ... configuration?.whitelist?.origin string (optional) Origin domain allowed to access domains in domain configuration?.whitelist?.domain array (optional) ... configuration?.whitelist?.domain[#] string (optional) Domain allowed to access from origin configuration?.whitelist?.subdomain string (optional) Whether it is also OK to access subdomains of domains listed in domain configuration?.localstorageenabled boolean (optional) Controls the local storage availability configuration?.logtosystemconsoleenabled boolean (optional) Enable page logging to system console (stderr) configuration?.watchdogchecktimeoutinseconds integer (optional) How often to check main event loop for responsiveness (0 - disable) configuration?.watchdoghangthresholdtinseconds integer (optional) The amount of time to give a process to recover before declaring a hang state configuration?.loadblankpageonsuspendenabled boolean (optional) Load 'about:blank' before suspending the page Interfaces This plugin implements the following interfaces: IWebBrowser ( IBrowser.h ) (version 1.0.0) (uncompliant-extended format) IBrowserResources ( IBrowser.h ) (version 1.0.0) (uncompliant-extended format) IBrowserSecurity ( IBrowser.h ) (version 1.0.0) (uncompliant-extended format) IBrowserScripting ( IBrowser.h ) (version 1.0.0) (uncompliant-extended format) IBrowserCookieJar ( IBrowser.h ) (version 1.0.0) (uncompliant-extended format) WebKitBrowser.json (version 1.0.0) (uncompliant-collapsed format) StateControl.json (version 1.0.0) (uncompliant-collapsed format) Methods The following methods are provided by the WebKitBrowser plugin: WebBrowser interface methods: Method Description collectgarbage Initiate garbage collection BrowserScripting interface methods: Method Description runjavascript Run javascript in main frame adduserscript Add user script to be executed at document start removealluserscripts Remove all user scripts WebKitBrowser interface methods: Method Description delete Removes contents of a directory from the persistent storage collectgarbage method Initiate garbage collection. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.collectgarbage\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } runjavascript method Run javascript in main frame. Parameters Name Type Description params object ... params.script string Utf8 encoded JS code string Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.runjavascript\", \"params\": { \"script\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } adduserscript method Add user script to be executed at document start. Parameters Name Type Description params object ... params.script string Utf8 encoded JS code string params.topframeonly boolean Enable only top frame Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.adduserscript\", \"params\": { \"script\": \"...\", \"topframeonly\": false } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } removealluserscripts method Remove all user scripts. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.removealluserscripts\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } delete method Removes contents of a directory from the persistent storage. Description Use this method to recursively delete contents of a directory Parameters Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of Result Name Type Description result null Always null (default: None ) Errors Message Description ERROR_UNKNOWN_KEY The given path was incorrect Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the WebKitBrowser plugin: WebBrowser interface properties: Property Description url Page loaded in the browser visibility Browser window visibility state fps (read-only) Current framerate the browser is rendering at useragent UserAgent string used by the browser localstorageenabled Controls the local storage availability httpcookieacceptpolicy HTTP cookies accept policy bridgereply (write-only) Response for legacy $badger bridgeevent (write-only) Send legacy $badger event BrowserResources interface properties: Property Description userscripts User scripts used by the browser userstylesheets User style sheets used by the browser BrowserSecurity interface properties: Property Description securityprofile Security profile for secure connections mixedcontentpolicy Mixed content policy BrowserCookieJar interface properties: Property Description cookiejar Get/Set CookieJar config details WebKitBrowser interface properties: Property Description languages User preferred languages headers Headers to send on all requests that the browser makes StateControl interface properties: Property Description state Running state of the service url property Provides access to the page loaded in the browser. Value Name Type Description (property) string Page loaded in the browser Result Name Type Description result string Loaded URL Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.url\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://example.com\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.url\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } visibility property Provides access to the browser window visibility state. Value Name Type Description (property) string Browser window visibility state (must be one of the following: hidden, visible ) Result Name Type Description result string Visiblity state (must be one of the following: hidden, visible ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.visibility\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"hidden\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.visibility\", \"params\": \"hidden\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } fps property Provides access to the current framerate the browser is rendering at. This property is read-only . Value Result Name Type Description result integer Current FPS Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.fps\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 } useragent property Provides access to the userAgent string used by the browser. Value Name Type Description (property) string UserAgent string used by the browser Result Name Type Description result string UserAgent value Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.useragent\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Mozilla/5.0 (Linux; x86_64 GNU/Linux) AppleWebKit/601.1 (KHTML, like Gecko) Version/8.0 Safari/601.1 WP\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.useragent\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } localstorageenabled property Provides access to the controls the local storage availability. Value Name Type Description (property) boolean Controls the local storage availability Result Name Type Description result boolean Controls the local storage availability Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.localstorageenabled\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.localstorageenabled\", \"params\": false } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } httpcookieacceptpolicy property Provides access to the HTTP cookies accept policy. Value Name Type Description (property) string HTTP cookies accept policy (must be one of the following: always, exclusivelyfrommaindocumentdomain, never, onlyfrommaindocumentdomain ) Result Name Type Description result string HTTP Cookie Accept Policy Type (must be one of the following: always, exclusivelyfrommaindocumentdomain, never, onlyfrommaindocumentdomain ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.httpcookieacceptpolicy\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"always\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.httpcookieacceptpolicy\", \"params\": \"always\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } bridgereply property Provides access to the response for legacy $badger. This property is write-only . Value Name Type Description (property) string Base64 encoded JSON string response to be delivered to $badger.callback Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.bridgereply\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } bridgeevent property Provides access to the send legacy $badger event. This property is write-only . Value Name Type Description (property) string Base64 encoded JSON string response to be delivered to window.$badger.event Example Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.bridgeevent\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } userscripts property Provides access to the user scripts used by the browser. Value Name Type Description (property) array User scripts used by the browser (property)[#] string ... Result Name Type Description result array JSON array containing URIs pointing to user scripts, supported protocols: file:// result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.userscripts\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.userscripts\", \"params\": [ \"...\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } userstylesheets property Provides access to the user style sheets used by the browser. Value Name Type Description (property) array User style sheets used by the browser (property)[#] string ... Result Name Type Description result array JSON array containing URIs pointing to user style sheets, supported protocols: file:// result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.userstylesheets\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.userstylesheets\", \"params\": [ \"...\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } securityprofile property Provides access to the security profile for secure connections. Value Name Type Description (property) string Security profile for secure connections Result Name Type Description result string Security profile for secure connections Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.securityprofile\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"compatible\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.securityprofile\", \"params\": \"...\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } mixedcontentpolicy property Provides access to the mixed content policy. Value Name Type Description (property) string Mixed content policy (must be one of the following: allowed, blocked ) Result Name Type Description result string Mixed content policy type (must be one of the following: allowed, blocked ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.mixedcontentpolicy\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"allowed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.mixedcontentpolicy\", \"params\": \"allowed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } cookiejar property Provides access to the get/Set CookieJar config details. Value Name Type Description (property) object Get/Set CookieJar config details (property).version integer Version of payload format (property).checksum integer The checksum of the string used for payload creation (property).payload string Base64 string representation of compressed and encrypted cookies Result Name Type Description result object Config info CookieJar result.version integer Version of payload format result.checksum integer The checksum of the string used for payload creation result.payload string Base64 string representation of compressed and encrypted cookies Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.cookiejar\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"version\": 0, \"checksum\": 0, \"payload\": \"...\" } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.cookiejar\", \"params\": { \"version\": 0, \"checksum\": 0, \"payload\": \"...\" } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } languages property Provides access to the user preferred languages. Value Name Type Description (property) array User preferred languages (property)[#] string ... Result Name Type Description result array User preferred languages result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"en-US\" ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\", \"params\": [ \"en-US\" ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } headers property Provides access to the headers to send on all requests that the browser makes. Value Name Type Description (property) array Headers to send on all requests that the browser makes (property)[#] object ... (property)[#]?.name string (optional) Header name (property)[#]?.value string (optional) Header value Result Name Type Description result array Headers to send on all requests that the browser makes result[#] object ... result[#]?.name string (optional) Header name result[#]?.value string (optional) Header value Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\", \"params\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } state property Provides access to the running state of the service. Also see: statechange Value Name Type Description (property) string Running state of the service Result Name Type Description result string Running state of the service Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\", \"params\": \"resumed\" } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WebKitBrowser plugin: WebBrowser interface events: Notification Description loadfinished Initial HTML document has been completely loaded and parsed loadfailed Browser failed to load page urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser pageclosure Notifies that the web page requests to close its window BrowserCookieJar interface events: Notification Description cookiejarchanged Notifies that cookies were added, removed or modified WebKitBrowser interface events: Notification Description bridgequery obsolete A Base64 encoded JSON message from legacy $badger bridge StateControl interface events: Notification Description statechange Signals a state change of the service loadfinished notification Initial HTML document has been completely loaded and parsed. Parameters Name Type Description params object ... params.url string The URL that has been loaded params.httpstatus integer The response code of main resource request Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"loadfinished\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.loadfinished\", \"params\": { \"url\": \"https://example.com\", \"httpstatus\": 200 } } loadfailed notification Browser failed to load page. Parameters Name Type Description params object ... params.url string The URL that has been failed to load Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"loadfailed\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.loadfailed\", \"params\": { \"url\": \"https://example.com\" } } urlchange notification Signals a URL change in the browser. Parameters Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Loaded (true) or not (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://example.com\", \"loaded\": false } } visibilitychange notification Signals a visibility change of the browser. Parameters Name Type Description params object ... params.hidden boolean Hidden (true) or Visible (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } } pageclosure notification Notifies that the web page requests to close its window. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"pageclosure\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.pageclosure\" } cookiejarchanged notification Notifies that cookies were added, removed or modified. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"cookiejarchanged\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.cookiejarchanged\" } bridgequery notification A Base64 encoded JSON message from legacy $badger bridge. bridgequery is an alternative name for this notification. This name is obsolete . It is not recommended for use in new implementations. Parameters Name Type Description params string ... Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"bridgequery\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.bridgequery\", \"params\": \"...\" } statechange notification Signals a state change of the service. Parameters Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"WebKit Browser Plugin"},{"location":"plugins/WebKitBrowserPlugin/#webkit-browser-plugin","text":"Version: 1.0 Status: WebKitBrowser plugin for Thunder framework.","title":"WebKit Browser Plugin"},{"location":"plugins/WebKitBrowserPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/WebKitBrowserPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/WebKitBrowserPlugin/#scope","text":"This document describes purpose and functionality of the WebKitBrowser plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/WebKitBrowserPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/WebKitBrowserPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/WebKitBrowserPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/WebKitBrowserPlugin/#description","text":"The WebKitBrowser plugin provides web browsing functionality based on the WebKit engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/WebKitBrowserPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: WebKitBrowser ) classname string Class name: WebKitBrowser locator string Library name: libThunderWebKitBrowser.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.useragent string (optional) The UserAgent used during communication with the web server configuration?.url string (optional) The URL that is loaded upon starting the browser configuration?.injectedbundle string (optional) The name of the .so loaded to extend the HTML5 with customized JavaScript handlers configuration?.cookiestorage string (optional) Post-fixed path to the persistent location on where cookies will be stored configuration?.localstorage string (optional) Post-fixed path to the persistent location on where local-storage will be stored configuration?.certificatecheck boolean (optional) If enabled, SSL certificate error will lead to a page error configuration?.javascript object (optional) ... configuration?.javascript?.useLLInt boolean (optional) Enable Low Level Interpreter configuration?.javascript?.useJIT boolean (optional) Enable JIT configuration?.javascript?.useDFG boolean (optional) Enable Data-Flow-Graph-JIT compiler configuration?.javascript?.useFTL boolean (optional) Enable Faster-Than-Light-JIT compiler configuration?.javascript?.useDOM boolean (optional) Enable the DOM-JIT compiler configuration?.javascript?.dumpOptions string (optional) Dump options: 0 = None, 1 = Overridden only, 2 = All, 3 = Verbose configuration?.secure boolean (optional) If false, every domain can access any other domain, otherwise fill in fields in whitelist definition table configuration?.whitelist object (optional) ... configuration?.whitelist?.origin string (optional) Origin domain allowed to access domains in domain configuration?.whitelist?.domain array (optional) ... configuration?.whitelist?.domain[#] string (optional) Domain allowed to access from origin configuration?.whitelist?.subdomain string (optional) Whether it is also OK to access subdomains of domains listed in domain configuration?.localstorageenabled boolean (optional) Controls the local storage availability configuration?.logtosystemconsoleenabled boolean (optional) Enable page logging to system console (stderr) configuration?.watchdogchecktimeoutinseconds integer (optional) How often to check main event loop for responsiveness (0 - disable) configuration?.watchdoghangthresholdtinseconds integer (optional) The amount of time to give a process to recover before declaring a hang state configuration?.loadblankpageonsuspendenabled boolean (optional) Load 'about:blank' before suspending the page","title":"Configuration"},{"location":"plugins/WebKitBrowserPlugin/#interfaces","text":"This plugin implements the following interfaces: IWebBrowser ( IBrowser.h ) (version 1.0.0) (uncompliant-extended format) IBrowserResources ( IBrowser.h ) (version 1.0.0) (uncompliant-extended format) IBrowserSecurity ( IBrowser.h ) (version 1.0.0) (uncompliant-extended format) IBrowserScripting ( IBrowser.h ) (version 1.0.0) (uncompliant-extended format) IBrowserCookieJar ( IBrowser.h ) (version 1.0.0) (uncompliant-extended format) WebKitBrowser.json (version 1.0.0) (uncompliant-collapsed format) StateControl.json (version 1.0.0) (uncompliant-collapsed format)","title":"Interfaces"},{"location":"plugins/WebKitBrowserPlugin/#methods","text":"The following methods are provided by the WebKitBrowser plugin: WebBrowser interface methods: Method Description collectgarbage Initiate garbage collection BrowserScripting interface methods: Method Description runjavascript Run javascript in main frame adduserscript Add user script to be executed at document start removealluserscripts Remove all user scripts WebKitBrowser interface methods: Method Description delete Removes contents of a directory from the persistent storage","title":"Methods"},{"location":"plugins/WebKitBrowserPlugin/#collectgarbage-method","text":"Initiate garbage collection.","title":"collectgarbage method"},{"location":"plugins/WebKitBrowserPlugin/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.collectgarbage\" }","title":"Request"},{"location":"plugins/WebKitBrowserPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/WebKitBrowserPlugin/#runjavascript-method","text":"Run javascript in main frame.","title":"runjavascript method"},{"location":"plugins/WebKitBrowserPlugin/#parameters_1","text":"Name Type Description params object ... params.script string Utf8 encoded JS code string","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.runjavascript\", \"params\": { \"script\": \"...\" } }","title":"Request"},{"location":"plugins/WebKitBrowserPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/WebKitBrowserPlugin/#adduserscript-method","text":"Add user script to be executed at document start.","title":"adduserscript method"},{"location":"plugins/WebKitBrowserPlugin/#parameters_2","text":"Name Type Description params object ... params.script string Utf8 encoded JS code string params.topframeonly boolean Enable only top frame","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.adduserscript\", \"params\": { \"script\": \"...\", \"topframeonly\": false } }","title":"Request"},{"location":"plugins/WebKitBrowserPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/WebKitBrowserPlugin/#removealluserscripts-method","text":"Remove all user scripts.","title":"removealluserscripts method"},{"location":"plugins/WebKitBrowserPlugin/#parameters_3","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.removealluserscripts\" }","title":"Request"},{"location":"plugins/WebKitBrowserPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/WebKitBrowserPlugin/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"plugins/WebKitBrowserPlugin/#description_1","text":"Use this method to recursively delete contents of a directory","title":"Description"},{"location":"plugins/WebKitBrowserPlugin/#parameters_4","text":"Name Type Description params object ... params.path string Path to directory (within the persistent storage) to delete contents of","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#result_4","text":"Name Type Description result null Always null (default: None )","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#errors","text":"Message Description ERROR_UNKNOWN_KEY The given path was incorrect","title":"Errors"},{"location":"plugins/WebKitBrowserPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.delete\", \"params\": { \"path\": \".cache/wpe/disk-cache\" } }","title":"Request"},{"location":"plugins/WebKitBrowserPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/WebKitBrowserPlugin/#properties","text":"The following properties are provided by the WebKitBrowser plugin: WebBrowser interface properties: Property Description url Page loaded in the browser visibility Browser window visibility state fps (read-only) Current framerate the browser is rendering at useragent UserAgent string used by the browser localstorageenabled Controls the local storage availability httpcookieacceptpolicy HTTP cookies accept policy bridgereply (write-only) Response for legacy $badger bridgeevent (write-only) Send legacy $badger event BrowserResources interface properties: Property Description userscripts User scripts used by the browser userstylesheets User style sheets used by the browser BrowserSecurity interface properties: Property Description securityprofile Security profile for secure connections mixedcontentpolicy Mixed content policy BrowserCookieJar interface properties: Property Description cookiejar Get/Set CookieJar config details WebKitBrowser interface properties: Property Description languages User preferred languages headers Headers to send on all requests that the browser makes StateControl interface properties: Property Description state Running state of the service","title":"Properties"},{"location":"plugins/WebKitBrowserPlugin/#url-property","text":"Provides access to the page loaded in the browser.","title":"url property"},{"location":"plugins/WebKitBrowserPlugin/#value","text":"Name Type Description (property) string Page loaded in the browser","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_5","text":"Name Type Description result string Loaded URL","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.url\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"https://example.com\" }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.url\", \"params\": \"...\" }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#visibility-property","text":"Provides access to the browser window visibility state.","title":"visibility property"},{"location":"plugins/WebKitBrowserPlugin/#value_1","text":"Name Type Description (property) string Browser window visibility state (must be one of the following: hidden, visible )","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_6","text":"Name Type Description result string Visiblity state (must be one of the following: hidden, visible )","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.visibility\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"hidden\" }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.visibility\", \"params\": \"hidden\" }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#fps-property","text":"Provides access to the current framerate the browser is rendering at. This property is read-only .","title":"fps property"},{"location":"plugins/WebKitBrowserPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_7","text":"Name Type Description result integer Current FPS","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.fps\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": 0 }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#useragent-property","text":"Provides access to the userAgent string used by the browser.","title":"useragent property"},{"location":"plugins/WebKitBrowserPlugin/#value_3","text":"Name Type Description (property) string UserAgent string used by the browser","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_8","text":"Name Type Description result string UserAgent value","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.useragent\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"Mozilla/5.0 (Linux; x86_64 GNU/Linux) AppleWebKit/601.1 (KHTML, like Gecko) Version/8.0 Safari/601.1 WP\" }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.useragent\", \"params\": \"...\" }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#localstorageenabled-property","text":"Provides access to the controls the local storage availability.","title":"localstorageenabled property"},{"location":"plugins/WebKitBrowserPlugin/#value_4","text":"Name Type Description (property) boolean Controls the local storage availability","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_9","text":"Name Type Description result boolean Controls the local storage availability","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_9","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.localstorageenabled\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": false }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.localstorageenabled\", \"params\": false }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#httpcookieacceptpolicy-property","text":"Provides access to the HTTP cookies accept policy.","title":"httpcookieacceptpolicy property"},{"location":"plugins/WebKitBrowserPlugin/#value_5","text":"Name Type Description (property) string HTTP cookies accept policy (must be one of the following: always, exclusivelyfrommaindocumentdomain, never, onlyfrommaindocumentdomain )","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_10","text":"Name Type Description result string HTTP Cookie Accept Policy Type (must be one of the following: always, exclusivelyfrommaindocumentdomain, never, onlyfrommaindocumentdomain )","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_10","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.httpcookieacceptpolicy\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"always\" }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.httpcookieacceptpolicy\", \"params\": \"always\" }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#bridgereply-property","text":"Provides access to the response for legacy $badger. This property is write-only .","title":"bridgereply property"},{"location":"plugins/WebKitBrowserPlugin/#value_6","text":"Name Type Description (property) string Base64 encoded JSON string response to be delivered to $badger.callback","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#example_11","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#set-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.bridgereply\", \"params\": \"...\" }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#bridgeevent-property","text":"Provides access to the send legacy $badger event. This property is write-only .","title":"bridgeevent property"},{"location":"plugins/WebKitBrowserPlugin/#value_7","text":"Name Type Description (property) string Base64 encoded JSON string response to be delivered to window.$badger.event","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#example_12","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#set-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.bridgeevent\", \"params\": \"...\" }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#userscripts-property","text":"Provides access to the user scripts used by the browser.","title":"userscripts property"},{"location":"plugins/WebKitBrowserPlugin/#value_8","text":"Name Type Description (property) array User scripts used by the browser (property)[#] string ...","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_11","text":"Name Type Description result array JSON array containing URIs pointing to user scripts, supported protocols: file:// result[#] string ...","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_13","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.userscripts\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.userscripts\", \"params\": [ \"...\" ] }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#userstylesheets-property","text":"Provides access to the user style sheets used by the browser.","title":"userstylesheets property"},{"location":"plugins/WebKitBrowserPlugin/#value_9","text":"Name Type Description (property) array User style sheets used by the browser (property)[#] string ...","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_12","text":"Name Type Description result array JSON array containing URIs pointing to user style sheets, supported protocols: file:// result[#] string ...","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_14","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.userstylesheets\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.userstylesheets\", \"params\": [ \"...\" ] }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#securityprofile-property","text":"Provides access to the security profile for secure connections.","title":"securityprofile property"},{"location":"plugins/WebKitBrowserPlugin/#value_10","text":"Name Type Description (property) string Security profile for secure connections","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_13","text":"Name Type Description result string Security profile for secure connections","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_15","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.securityprofile\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"compatible\" }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.securityprofile\", \"params\": \"...\" }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#mixedcontentpolicy-property","text":"Provides access to the mixed content policy.","title":"mixedcontentpolicy property"},{"location":"plugins/WebKitBrowserPlugin/#value_11","text":"Name Type Description (property) string Mixed content policy (must be one of the following: allowed, blocked )","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_14","text":"Name Type Description result string Mixed content policy type (must be one of the following: allowed, blocked )","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_16","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.mixedcontentpolicy\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"allowed\" }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.mixedcontentpolicy\", \"params\": \"allowed\" }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#cookiejar-property","text":"Provides access to the get/Set CookieJar config details.","title":"cookiejar property"},{"location":"plugins/WebKitBrowserPlugin/#value_12","text":"Name Type Description (property) object Get/Set CookieJar config details (property).version integer Version of payload format (property).checksum integer The checksum of the string used for payload creation (property).payload string Base64 string representation of compressed and encrypted cookies","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_15","text":"Name Type Description result object Config info CookieJar result.version integer Version of payload format result.checksum integer The checksum of the string used for payload creation result.payload string Base64 string representation of compressed and encrypted cookies","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_17","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.cookiejar\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"version\": 0, \"checksum\": 0, \"payload\": \"...\" } }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.cookiejar\", \"params\": { \"version\": 0, \"checksum\": 0, \"payload\": \"...\" } }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#languages-property","text":"Provides access to the user preferred languages.","title":"languages property"},{"location":"plugins/WebKitBrowserPlugin/#value_13","text":"Name Type Description (property) array User preferred languages (property)[#] string ...","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_16","text":"Name Type Description result array User preferred languages result[#] string ...","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_18","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_11","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"en-US\" ] }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.languages\", \"params\": [ \"en-US\" ] }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#headers-property","text":"Provides access to the headers to send on all requests that the browser makes.","title":"headers property"},{"location":"plugins/WebKitBrowserPlugin/#value_14","text":"Name Type Description (property) array Headers to send on all requests that the browser makes (property)[#] object ... (property)[#]?.name string (optional) Header name (property)[#]?.value string (optional) Header value","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_17","text":"Name Type Description result array Headers to send on all requests that the browser makes result[#] object ... result[#]?.name string (optional) Header name result[#]?.value string (optional) Header value","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_19","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_12","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.headers\", \"params\": [ { \"name\": \"X-Forwarded-For\", \"value\": \"::1\" } ] }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#state-property","text":"Provides access to the running state of the service. Also see: statechange","title":"state property"},{"location":"plugins/WebKitBrowserPlugin/#value_15","text":"Name Type Description (property) string Running state of the service","title":"Value"},{"location":"plugins/WebKitBrowserPlugin/#result_18","text":"Name Type Description result string Running state of the service","title":"Result"},{"location":"plugins/WebKitBrowserPlugin/#example_20","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#get-request_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\" }","title":"Get Request"},{"location":"plugins/WebKitBrowserPlugin/#get-response_13","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"resumed\" }","title":"Get Response"},{"location":"plugins/WebKitBrowserPlugin/#set-request_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.state\", \"params\": \"resumed\" }","title":"Set Request"},{"location":"plugins/WebKitBrowserPlugin/#set-response_14","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WebKitBrowserPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WebKitBrowser plugin: WebBrowser interface events: Notification Description loadfinished Initial HTML document has been completely loaded and parsed loadfailed Browser failed to load page urlchange Signals a URL change in the browser visibilitychange Signals a visibility change of the browser pageclosure Notifies that the web page requests to close its window BrowserCookieJar interface events: Notification Description cookiejarchanged Notifies that cookies were added, removed or modified WebKitBrowser interface events: Notification Description bridgequery obsolete A Base64 encoded JSON message from legacy $badger bridge StateControl interface events: Notification Description statechange Signals a state change of the service","title":"Notifications"},{"location":"plugins/WebKitBrowserPlugin/#loadfinished-notification","text":"Initial HTML document has been completely loaded and parsed.","title":"loadfinished notification"},{"location":"plugins/WebKitBrowserPlugin/#parameters_5","text":"Name Type Description params object ... params.url string The URL that has been loaded params.httpstatus integer The response code of main resource request","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#example_21","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"loadfinished\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/WebKitBrowserPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.loadfinished\", \"params\": { \"url\": \"https://example.com\", \"httpstatus\": 200 } }","title":"Message"},{"location":"plugins/WebKitBrowserPlugin/#loadfailed-notification","text":"Browser failed to load page.","title":"loadfailed notification"},{"location":"plugins/WebKitBrowserPlugin/#parameters_6","text":"Name Type Description params object ... params.url string The URL that has been failed to load","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#example_22","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"loadfailed\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/WebKitBrowserPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.loadfailed\", \"params\": { \"url\": \"https://example.com\" } }","title":"Message"},{"location":"plugins/WebKitBrowserPlugin/#urlchange-notification","text":"Signals a URL change in the browser.","title":"urlchange notification"},{"location":"plugins/WebKitBrowserPlugin/#parameters_7","text":"Name Type Description params object ... params.url string The URL that has been loaded or requested params.loaded boolean Loaded (true) or not (false)","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#example_23","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"urlchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/WebKitBrowserPlugin/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.urlchange\", \"params\": { \"url\": \"https://example.com\", \"loaded\": false } }","title":"Message"},{"location":"plugins/WebKitBrowserPlugin/#visibilitychange-notification","text":"Signals a visibility change of the browser.","title":"visibilitychange notification"},{"location":"plugins/WebKitBrowserPlugin/#parameters_8","text":"Name Type Description params object ... params.hidden boolean Hidden (true) or Visible (false)","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#example_24","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#registration_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"visibilitychange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/WebKitBrowserPlugin/#message_3","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.visibilitychange\", \"params\": { \"hidden\": false } }","title":"Message"},{"location":"plugins/WebKitBrowserPlugin/#pageclosure-notification","text":"Notifies that the web page requests to close its window.","title":"pageclosure notification"},{"location":"plugins/WebKitBrowserPlugin/#parameters_9","text":"This notification carries no parameters.","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#example_25","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#registration_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"pageclosure\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/WebKitBrowserPlugin/#message_4","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.pageclosure\" }","title":"Message"},{"location":"plugins/WebKitBrowserPlugin/#cookiejarchanged-notification","text":"Notifies that cookies were added, removed or modified.","title":"cookiejarchanged notification"},{"location":"plugins/WebKitBrowserPlugin/#parameters_10","text":"This notification carries no parameters.","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#example_26","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#registration_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"cookiejarchanged\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/WebKitBrowserPlugin/#message_5","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.cookiejarchanged\" }","title":"Message"},{"location":"plugins/WebKitBrowserPlugin/#bridgequery-notification","text":"A Base64 encoded JSON message from legacy $badger bridge. bridgequery is an alternative name for this notification. This name is obsolete . It is not recommended for use in new implementations.","title":"bridgequery notification"},{"location":"plugins/WebKitBrowserPlugin/#parameters_11","text":"Name Type Description params string ...","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#example_27","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#registration_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"bridgequery\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/WebKitBrowserPlugin/#message_6","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.bridgequery\", \"params\": \"...\" }","title":"Message"},{"location":"plugins/WebKitBrowserPlugin/#statechange-notification","text":"Signals a state change of the service.","title":"statechange notification"},{"location":"plugins/WebKitBrowserPlugin/#parameters_12","text":"Name Type Description params object ... params.suspended boolean Determines if the service has entered suspended state (true) or resumed state (false)","title":"Parameters"},{"location":"plugins/WebKitBrowserPlugin/#example_28","text":"","title":"Example"},{"location":"plugins/WebKitBrowserPlugin/#registration_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WebKitBrowser.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/WebKitBrowserPlugin/#message_7","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"suspended\": false } }","title":"Message"},{"location":"plugins/WebPAPlugin/","text":"WebPA Plugin Version: 1.0 Status: WebPA plugin for Thunder framework. Table of Contents Introduction Description Configuration Introduction Scope This document describes purpose and functionality of the WebPA plugin. It includes detailed specification about its configuration. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The WebPA plugin provides web browsing functionality based on the WebPA engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: WebPA ) classname string Class name: WebPA locator string Library name: libThunderWebPA.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.interface string (optional) Interface configuration?.pingwaittime string (optional) Ping waittime timout configuration?.webpaurl string (optional) WebPA url configuration?.paroduslocalurl string (optional) Parodus local url configuration?.partnerid string (optional) Partner id configuration?.webpabackoffmax string (optional) WebPA backoff max configuration?.sslcertpath string (optional) Path of SSL certification configuration?.forceipv4 string (optional) Force IPv4 configuration?.location string (optional) Location","title":"WebPA Plugin"},{"location":"plugins/WebPAPlugin/#webpa-plugin","text":"Version: 1.0 Status: WebPA plugin for Thunder framework.","title":"WebPA Plugin"},{"location":"plugins/WebPAPlugin/#table-of-contents","text":"Introduction Description Configuration","title":"Table of Contents"},{"location":"plugins/WebPAPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/WebPAPlugin/#scope","text":"This document describes purpose and functionality of the WebPA plugin. It includes detailed specification about its configuration.","title":"Scope"},{"location":"plugins/WebPAPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/WebPAPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/WebPAPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/WebPAPlugin/#description","text":"The WebPA plugin provides web browsing functionality based on the WebPA engine. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/WebPAPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: WebPA ) classname string Class name: WebPA locator string Library name: libThunderWebPA.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.interface string (optional) Interface configuration?.pingwaittime string (optional) Ping waittime timout configuration?.webpaurl string (optional) WebPA url configuration?.paroduslocalurl string (optional) Parodus local url configuration?.partnerid string (optional) Partner id configuration?.webpabackoffmax string (optional) WebPA backoff max configuration?.sslcertpath string (optional) Path of SSL certification configuration?.forceipv4 string (optional) Force IPv4 configuration?.location string (optional) Location","title":"Configuration"},{"location":"plugins/WifiControlPlugin/","text":"Wifi Control Plugin Version: 1.0 Status: WifiControl plugin for Thunder framework. Table of Contents Introduction Description Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the WifiControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Description The WiFi Control plugin allows to manage various aspects of wireless connectivity. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ]. Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: WifiControl ) classname string Class name: WifiControl locator string Library name: libWPEWifiControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.connector string (optional) Connector name configuration?.interface string (optional) Interface name configuration?.application string (optional) Application name configuration?.autoconnect string (optional) Enable autoconnect configuration?.retryinterval string (optional) Retry interval Interfaces This plugin implements the following interfaces: IWifiControl ( IWifiControl.h ) (version 1.0.0) (compliant format) Methods The following methods are provided by the WifiControl plugin: WifiControl interface methods: Method Description scan Trigger Scanning abortscan Abort Currentlt running scan connect Connect device to requested SSID disconnect Disconnect device from requested SSID status Status of current device, like which SSID is connected and it is in scanning state or not scan method Trigger Scanning. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.scan\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } abortscan method Abort Currentlt running scan. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.abortscan\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } connect method Connect device to requested SSID. Parameters Name Type Description params object ... params.configssid string SSID to be connected Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.connect\", \"params\": { \"configssid\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } disconnect method Disconnect device from requested SSID. Parameters Name Type Description params object ... params.configssid string SSID to be disconnected Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.disconnect\", \"params\": { \"configssid\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } status method Status of current device, like which SSID is connected and it is in scanning state or not. Parameters This method takes no parameters. Result Name Type Description result object ... result.connectedssid string SSID of connected router/ap result.isscanning boolean Scanning is in progress or not Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.status\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"connectedssid\": \"...\", \"isscanning\": false } } Properties The following properties are provided by the WifiControl plugin: WifiControl interface properties: Property Description networks (read-only) Provides available networks information securities (read-only) Provides security method of requested SSID configs (read-only) Provides configs list config Provide config details for requested SSID networks property Provides access to the provides available networks information. This property is read-only . Value Result Name Type Description result array Provides available networks information result[#] object ... result[#].ssid string SSID of the network result[#].bssid integer BSSID of the network result[#].frequency integer Frequency used result[#].signal integer Signal strength result[#].security array Security method result[#].security[#] string ... (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.networks\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"...\", \"bssid\": 0, \"frequency\": 0, \"signal\": 0, \"security\": [ \"Open\" ] } ] } securities property Provides access to the provides security method of requested SSID. This property is read-only . Value The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.securities@<ssid> . Result Name Type Description result array Provides security method of requested SSID result[#] object ... result[#].method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) result[#].keys array Security Keys result[#].keys[#] string ... (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.securities@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"method\": \"Open\", \"keys\": [ \"PSK\" ] } ] } configs property Provides access to the provides configs list. This property is read-only . Value Result Name Type Description result array Provides configs list result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.configs\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } config property Provides access to the provide config details for requested SSID. Value Name Type Description (property) object Provide config details for requested SSID (property).value object ... (property).value.hidden boolean Visibility of the router (hidden or visible) (property).value.accesspoint boolean Accesspoint or not (property).value.ssid string SSID of the router/ap (property).value.secret string Secret key used (property).value.identity string Identity (property).value.method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) (property).value.key string Security Info: method and keys (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP ) The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.config@<ssid> . Result Name Type Description result object Details about requested SSID result.hidden boolean Visibility of the router (hidden or visible) result.accesspoint boolean Accesspoint or not result.ssid string SSID of the router/ap result.secret string Secret key used result.identity string Identity result.method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) result.key string Security Info: method and keys (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP ) Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hidden\": false, \"accesspoint\": false, \"ssid\": \"...\", \"secret\": \"...\", \"identity\": \"...\", \"method\": \"Open\", \"key\": \"PSK\" } } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@xyz\", \"params\": { \"value\": { \"hidden\": false, \"accesspoint\": false, \"ssid\": \"...\", \"secret\": \"...\", \"identity\": \"...\", \"method\": \"Open\", \"key\": \"PSK\" } } } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WifiControl plugin: WifiControl interface events: Notification Description networkchange Notifies that Network were added, removed or modified connectionchange Notifies that wifi connection changes networkchange notification Notifies that Network were added, removed or modified. Parameters This notification carries no parameters. Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.register\", \"params\": { \"event\": \"networkchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.networkchange\" } connectionchange notification Notifies that wifi connection changes. Parameters Name Type Description params object ... params.ssid string SSID of connection changed network Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.register\", \"params\": { \"event\": \"connectionchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.connectionchange\", \"params\": { \"ssid\": \"...\" } }","title":"Wifi Control Plugin"},{"location":"plugins/WifiControlPlugin/#wifi-control-plugin","text":"Version: 1.0 Status: WifiControl plugin for Thunder framework.","title":"Wifi Control Plugin"},{"location":"plugins/WifiControlPlugin/#table-of-contents","text":"Introduction Description Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"plugins/WifiControlPlugin/#introduction","text":"","title":"Introduction"},{"location":"plugins/WifiControlPlugin/#scope","text":"This document describes purpose and functionality of the WifiControl plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"plugins/WifiControlPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"plugins/WifiControlPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"plugins/WifiControlPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"plugins/WifiControlPlugin/#description","text":"The WiFi Control plugin allows to manage various aspects of wireless connectivity. The plugin is designed to be loaded and executed within the Thunder framework. For more information about the framework refer to [ Thunder ].","title":"Description"},{"location":"plugins/WifiControlPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: WifiControl ) classname string Class name: WifiControl locator string Library name: libWPEWifiControl.so startmode string Determines in which state the plugin should be moved to at startup of the framework configuration object (optional) ... configuration?.connector string (optional) Connector name configuration?.interface string (optional) Interface name configuration?.application string (optional) Application name configuration?.autoconnect string (optional) Enable autoconnect configuration?.retryinterval string (optional) Retry interval","title":"Configuration"},{"location":"plugins/WifiControlPlugin/#interfaces","text":"This plugin implements the following interfaces: IWifiControl ( IWifiControl.h ) (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"plugins/WifiControlPlugin/#methods","text":"The following methods are provided by the WifiControl plugin: WifiControl interface methods: Method Description scan Trigger Scanning abortscan Abort Currentlt running scan connect Connect device to requested SSID disconnect Disconnect device from requested SSID status Status of current device, like which SSID is connected and it is in scanning state or not","title":"Methods"},{"location":"plugins/WifiControlPlugin/#scan-method","text":"Trigger Scanning.","title":"scan method"},{"location":"plugins/WifiControlPlugin/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/WifiControlPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/WifiControlPlugin/#example","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.scan\" }","title":"Request"},{"location":"plugins/WifiControlPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/WifiControlPlugin/#abortscan-method","text":"Abort Currentlt running scan.","title":"abortscan method"},{"location":"plugins/WifiControlPlugin/#parameters_1","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/WifiControlPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/WifiControlPlugin/#example_1","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.abortscan\" }","title":"Request"},{"location":"plugins/WifiControlPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/WifiControlPlugin/#connect-method","text":"Connect device to requested SSID.","title":"connect method"},{"location":"plugins/WifiControlPlugin/#parameters_2","text":"Name Type Description params object ... params.configssid string SSID to be connected","title":"Parameters"},{"location":"plugins/WifiControlPlugin/#result_2","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/WifiControlPlugin/#example_2","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.connect\", \"params\": { \"configssid\": \"...\" } }","title":"Request"},{"location":"plugins/WifiControlPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/WifiControlPlugin/#disconnect-method","text":"Disconnect device from requested SSID.","title":"disconnect method"},{"location":"plugins/WifiControlPlugin/#parameters_3","text":"Name Type Description params object ... params.configssid string SSID to be disconnected","title":"Parameters"},{"location":"plugins/WifiControlPlugin/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"plugins/WifiControlPlugin/#example_3","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.disconnect\", \"params\": { \"configssid\": \"...\" } }","title":"Request"},{"location":"plugins/WifiControlPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"plugins/WifiControlPlugin/#status-method","text":"Status of current device, like which SSID is connected and it is in scanning state or not.","title":"status method"},{"location":"plugins/WifiControlPlugin/#parameters_4","text":"This method takes no parameters.","title":"Parameters"},{"location":"plugins/WifiControlPlugin/#result_4","text":"Name Type Description result object ... result.connectedssid string SSID of connected router/ap result.isscanning boolean Scanning is in progress or not","title":"Result"},{"location":"plugins/WifiControlPlugin/#example_4","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.status\" }","title":"Request"},{"location":"plugins/WifiControlPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"connectedssid\": \"...\", \"isscanning\": false } }","title":"Response"},{"location":"plugins/WifiControlPlugin/#properties","text":"The following properties are provided by the WifiControl plugin: WifiControl interface properties: Property Description networks (read-only) Provides available networks information securities (read-only) Provides security method of requested SSID configs (read-only) Provides configs list config Provide config details for requested SSID","title":"Properties"},{"location":"plugins/WifiControlPlugin/#networks-property","text":"Provides access to the provides available networks information. This property is read-only .","title":"networks property"},{"location":"plugins/WifiControlPlugin/#value","text":"","title":"Value"},{"location":"plugins/WifiControlPlugin/#result_5","text":"Name Type Description result array Provides available networks information result[#] object ... result[#].ssid string SSID of the network result[#].bssid integer BSSID of the network result[#].frequency integer Frequency used result[#].signal integer Signal strength result[#].security array Security method result[#].security[#] string ... (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS )","title":"Result"},{"location":"plugins/WifiControlPlugin/#example_5","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.networks\" }","title":"Get Request"},{"location":"plugins/WifiControlPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"ssid\": \"...\", \"bssid\": 0, \"frequency\": 0, \"signal\": 0, \"security\": [ \"Open\" ] } ] }","title":"Get Response"},{"location":"plugins/WifiControlPlugin/#securities-property","text":"Provides access to the provides security method of requested SSID. This property is read-only .","title":"securities property"},{"location":"plugins/WifiControlPlugin/#value_1","text":"The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.securities@<ssid> .","title":"Value"},{"location":"plugins/WifiControlPlugin/#result_6","text":"Name Type Description result array Provides security method of requested SSID result[#] object ... result[#].method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) result[#].keys array Security Keys result[#].keys[#] string ... (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP )","title":"Result"},{"location":"plugins/WifiControlPlugin/#example_6","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.securities@xyz\" }","title":"Get Request"},{"location":"plugins/WifiControlPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"method\": \"Open\", \"keys\": [ \"PSK\" ] } ] }","title":"Get Response"},{"location":"plugins/WifiControlPlugin/#configs-property","text":"Provides access to the provides configs list. This property is read-only .","title":"configs property"},{"location":"plugins/WifiControlPlugin/#value_2","text":"","title":"Value"},{"location":"plugins/WifiControlPlugin/#result_7","text":"Name Type Description result array Provides configs list result[#] string ...","title":"Result"},{"location":"plugins/WifiControlPlugin/#example_7","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.configs\" }","title":"Get Request"},{"location":"plugins/WifiControlPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"plugins/WifiControlPlugin/#config-property","text":"Provides access to the provide config details for requested SSID.","title":"config property"},{"location":"plugins/WifiControlPlugin/#value_3","text":"Name Type Description (property) object Provide config details for requested SSID (property).value object ... (property).value.hidden boolean Visibility of the router (hidden or visible) (property).value.accesspoint boolean Accesspoint or not (property).value.ssid string SSID of the router/ap (property).value.secret string Secret key used (property).value.identity string Identity (property).value.method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) (property).value.key string Security Info: method and keys (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP ) The ssid argument shall be passed as the index to the property, e.g. WifiControl.1.config@<ssid> .","title":"Value"},{"location":"plugins/WifiControlPlugin/#result_8","text":"Name Type Description result object Details about requested SSID result.hidden boolean Visibility of the router (hidden or visible) result.accesspoint boolean Accesspoint or not result.ssid string SSID of the router/ap result.secret string Secret key used result.identity string Identity result.method string Security method (must be one of the following: Enterprise, Open, Unknown, WEP, WPA, WPA2, WPA_WPA2, WPS ) result.key string Security Info: method and keys (must be one of the following: CCMP, EAP, None, PBC, PIN, PSK, PSK_HASHED, Preauth, TKIP )","title":"Result"},{"location":"plugins/WifiControlPlugin/#example_8","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@xyz\" }","title":"Get Request"},{"location":"plugins/WifiControlPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hidden\": false, \"accesspoint\": false, \"ssid\": \"...\", \"secret\": \"...\", \"identity\": \"...\", \"method\": \"Open\", \"key\": \"PSK\" } }","title":"Get Response"},{"location":"plugins/WifiControlPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.config@xyz\", \"params\": { \"value\": { \"hidden\": false, \"accesspoint\": false, \"ssid\": \"...\", \"secret\": \"...\", \"identity\": \"...\", \"method\": \"Open\", \"key\": \"PSK\" } } }","title":"Set Request"},{"location":"plugins/WifiControlPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"plugins/WifiControlPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the WifiControl plugin: WifiControl interface events: Notification Description networkchange Notifies that Network were added, removed or modified connectionchange Notifies that wifi connection changes","title":"Notifications"},{"location":"plugins/WifiControlPlugin/#networkchange-notification","text":"Notifies that Network were added, removed or modified.","title":"networkchange notification"},{"location":"plugins/WifiControlPlugin/#parameters_5","text":"This notification carries no parameters.","title":"Parameters"},{"location":"plugins/WifiControlPlugin/#example_9","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.register\", \"params\": { \"event\": \"networkchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/WifiControlPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.networkchange\" }","title":"Message"},{"location":"plugins/WifiControlPlugin/#connectionchange-notification","text":"Notifies that wifi connection changes.","title":"connectionchange notification"},{"location":"plugins/WifiControlPlugin/#parameters_6","text":"Name Type Description params object ... params.ssid string SSID of connection changed network","title":"Parameters"},{"location":"plugins/WifiControlPlugin/#example_10","text":"","title":"Example"},{"location":"plugins/WifiControlPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"WifiControl.1.register\", \"params\": { \"event\": \"connectionchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"plugins/WifiControlPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.connectionchange\", \"params\": { \"ssid\": \"...\" } }","title":"Message"},{"location":"thunder/ControllerPlugin/","text":"Controller Plugin Version: 1.0 Status: Controller plugin for Thunder framework. Table of Contents Introduction Configuration Interfaces Methods Properties Notifications Introduction Scope This document describes purpose and functionality of the Controller plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications. Case Sensitivity All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such. Acronyms, Abbreviations and Terms The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface FQDN Fully-Qualified Domain Name HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON SSDP Simple Service Discovery Protocol The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique. References Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference Configuration The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Controller ) classname string Class name: Controller locator string Library name: (built-in) startmode string Determines in which state the plugin should be moved to at startup of the framework Interfaces This plugin implements the following interfaces: ISystem ( IController.h ) (version 1.0.0) (compliant format) IDiscovery ( IController.h ) (version 1.0.0) (compliant format) IConfiguration ( IController.h ) (version 1.0.0) (uncompliant-extended format) ILifeTime ( IController.h ) (version 1.0.0) (compliant format) ISubsystems ( IController.h ) (version 1.0.0) (uncompliant-collapsed format) IEvents ( IController.h ) (version 1.0.0) (compliant format) IMetadata ( IController.h ) (version 1.0.0) (compliant format) Methods The following methods are provided by the Controller plugin: System interface methods: Method Description reboot / harakiri Reboots the device delete Removes contents of a directory from the persistent storage clone Creates a clone of given plugin with a new callsign Discovery interface methods: Method Description startdiscovery Starts SSDP network discovery Configuration interface methods: Method Description persist / storeconfig Stores all configuration to the persistent memory LifeTime interface methods: Method Description activate Activates a plugin deactivate Deactivates a plugin unavailable Makes a plugin unavailable for interaction hibernate Hibernates a plugin suspend Suspends a plugin resume Resumes a plugin reboot method Reboots the device. harakiri is an alternative name for this method. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Description Depending on the device this call may not generate a response. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.reboot\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } delete method Removes contents of a directory from the persistent storage. Parameters Name Type Description params object ... params.path string Path to the directory within the persisent storage Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.delete\", \"params\": { \"path\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } clone method Creates a clone of given plugin with a new callsign. Parameters Name Type Description params object ... params.callsign string Callsign of the plugin params.newcallsign string Callsign for the cloned plugin Result Name Type Description result string ... Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.clone\", \"params\": { \"callsign\": \"...\", \"newcallsign\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } startdiscovery method Starts SSDP network discovery. Parameters Name Type Description params object ... params.ttl integer Time to live, parameter for SSDP discovery Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.startdiscovery\", \"params\": { \"ttl\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } persist method Stores all configuration to the persistent memory. storeconfig is an alternative name for this method. Parameters This method takes no parameters. Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.persist\" } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } activate method Activates a plugin. Description Use this method to activate a plugin, i.e. move from Deactivated, via Activating to Activated state. If a plugin is in Activated state, it can handle JSON-RPC requests that are coming in. The plugin is loaded into memory only if it gets activated. Parameters Name Type Description params object ... params.callsign string Callsign of plugin to be activated Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.activate\", \"params\": { \"callsign\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } deactivate method Deactivates a plugin. Description Use this method to deactivate a plugin, i.e. move from Activated, via Deactivating to Deactivated state. If a plugin is deactivated, the actual plugin (.so) is no longer loaded into the memory of the process. In a Deactivated state the plugin will not respond to any JSON-RPC requests. Parameters Name Type Description params object ... params.callsign string Callsign of plugin to be deactivated Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.deactivate\", \"params\": { \"callsign\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } unavailable method Makes a plugin unavailable for interaction. Description Use this method to mark a plugin as unavailable, i.e. move from Deactivated to Unavailable state. It can not be started unless it is first deactivated (what triggers a state transition). Parameters Name Type Description params object ... params.callsign string Callsign of plugin to be set as unavailable Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.unavailable\", \"params\": { \"callsign\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } hibernate method Hibernates a plugin. Description Use activate to wake up a hibernated plugin. In a Hibernated state the plugin will not respond to any JSON-RPC requests. Parameters Name Type Description params object ... params.callsign string Callsign of plugin to be hibernated params.timeout integer Allowed time Result Name Type Description result null Always null Errors Message Description ERROR_INPROC The plugin is running in-process and thus cannot be hibernated Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.hibernate\", \"params\": { \"callsign\": \"...\", \"timeout\": 0 } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } suspend method Suspends a plugin. Description This is a more intelligent method, compared to deactivate , to move a plugin to a suspended state depending on its current state. Depending on the startmode flag this method will deactivate the plugin or only suspend the plugin. Parameters Name Type Description params object ... params.callsign string Callsign of plugin to be suspended Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.suspend\", \"params\": { \"callsign\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } resume method Resumes a plugin. Description This is a more intelligent method, compared to activate , to move a plugin to a resumed state depending on its current state. If required it will activate and move to the resumed state, regardless of the flags in the config (i.e. startmode , resumed ) Parameters Name Type Description params object ... params.callsign string Callsign of plugin to be resumed Result Name Type Description result null Always null Example Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.resume\", \"params\": { \"callsign\": \"...\" } } Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null } Properties The following properties are provided by the Controller plugin: System interface properties: Property Description environment (read-only) Environment variable value Discovery interface properties: Property Description discoveryresults (read-only) SSDP network discovery results Configuration interface properties: Property Description configuration Service configuration Subsystems interface properties: Property Description subsystems (read-only) Subsystems status Metadata interface properties: Property Description services / status (read-only) Services metadata links (read-only) Connections list proxies (read-only) Proxies list version (read-only) Framework version threads (read-only) Workerpool threads pendingrequests (read-only) Pending requests callstack (read-only) Thread callstack environment property Provides access to the environment variable value. This property is read-only . Value The variable argument shall be passed as the index to the property, e.g. Controller.1.environment@<variable> . Result Name Type Description result string Environment variable value Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.environment@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" } discoveryresults property Provides access to the SSDP network discovery results. This property is read-only . Value Result Name Type Description result array SSDP network discovery results result[#] object ... result[#].locator string Locator for the discovery result[#].latency integer Latency for the discovery result[#]?.model string (optional) Model result[#].secure boolean Secure or not Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.discoveryresults\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"locator\": \"...\", \"latency\": 0, \"model\": \"...\", \"secure\": false } ] } configuration property Provides access to the service configuration. Value Name Type Description (property) opaque object Service configuration The callsign argument shall be passed as the index to the property, e.g. Controller.1.configuration@<callsign> . Result Name Type Description result opaque object Service configuration Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.configuration@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": {} } Set Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.configuration@xyz\", \"params\": {} } Set Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" } subsystems property Provides access to the subsystems status. This property is read-only . Value Name Type Description (property) array Subsystems status (property)[#] object ... (property)[#].subsystem string Name of the subsystem (must be one of the following: Bluetooth, Cryptography, Decryption, Graphics, Identifier, Installation, Internet, Location, Network, Platform, Provisioning, Security, Streaming, Time, WebSource ) (property)[#].active boolean Denotes if the subsystem is currently active Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.subsystems\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"subsystem\": \"Platform\", \"active\": false } ] } services property Provides access to the services metadata. This property is read-only . status is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations. Description If callsign is omitted, metadata of all services is returned. Value The callsign argument shall be passed as the index to the property, e.g. Controller.1.services@<callsign> . Result Name Type Description result array Services metadata (if only one element is present then the array will be omitted) result[#] object ... result[#].callsign string Plugin callsign result[#].locator string Shared library path result[#].classname string Plugin class name result[#].module string Module name result[#].state string Current state (must be one of the following: Activated, Activation, Deactivated, Deactivation, Destroyed, Hibernated, Precondition, Resumed, Suspended, Unavailable ) result[#].startmode string Startup mode (must be one of the following: Activated, Deactivated, Unavailable ) result[#].resumed boolean Determines if the plugin is to be activated in resumed or suspended mode result[#].version object Version result[#].version.hash string SHA256 hash identifying the source code result[#].version.major integer Major number result[#].version.minor integer Minor number result[#].version.patch integer Patch number result[#]?.communicator string (optional) Communicator result[#]?.persistentpathpostfix string (optional) Postfix of persistent path result[#]?.volatilepathpostfix string (optional) Postfix of volatile path result[#]?.systemrootpath string (optional) Path of system root result[#]?.precondition opaque object (optional) Activation conditons result[#]?.termination opaque object (optional) Deactivation conditions result[#]?.configuration opaque object (optional) Plugin configuration result[#]?.observers integer (optional) Number or observers result[#]?.processedrequests integer (optional) Number of API requests that have been processed by the plugin result[#]?.processedobjects integer (optional) Number of objects that have been processed by the plugin Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.services@xyz\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"callsign\": \"...\", \"locator\": \"...\", \"classname\": \"...\", \"module\": \"...\", \"state\": \"Unavailable\", \"startmode\": \"Unavailable\", \"resumed\": false, \"version\": { \"hash\": \"...\", \"major\": 0, \"minor\": 0, \"patch\": 0 }, \"communicator\": \"...\", \"persistentpathpostfix\": \"...\", \"volatilepathpostfix\": \"...\", \"systemrootpath\": \"...\", \"precondition\": {}, \"termination\": {}, \"configuration\": {}, \"observers\": 0, \"processedrequests\": 0, \"processedobjects\": 0 } ] } links property Provides access to the connections list. This property is read-only . Value Result Name Type Description result array Connections list result[#] object ... result[#].remote string IP address (or FQDN) of the other side of the connection result[#].state string State of the link (must be one of the following: COMRPC, Closed, RawSocket, Suspended, WebServer, WebSocket ) result[#]?.name string (optional) Name of the connection result[#].id integer A unique number identifying the connection result[#].activity boolean Denotes if there was any activity on this connection Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.links\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"remote\": \"...\", \"state\": \"Closed\", \"name\": \"...\", \"id\": 0, \"activity\": false } ] } proxies property Provides access to the proxies list. This property is read-only . Value The linkid argument shall be passed as the index to the property, e.g. Controller.1.proxies@<linkid> . Result Name Type Description result array Proxies list result[#] object ... result[#].interface integer Interface ID result[#].name string The fully qualified name of the interface result[#].instance instanceid Instance ID result[#].count integer Reference count Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.proxies@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": 0, \"name\": \"...\", \"instance\": \"0x...\", \"count\": 0 } ] } version property Provides access to the framework version. This property is read-only . Value Result Name Type Description result object Framework version result.hash string SHA256 hash identifying the source code result.major integer Major number result.minor integer Minor number result.patch integer Patch number Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.version\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hash\": \"...\", \"major\": 0, \"minor\": 0, \"patch\": 0 } } threads property Provides access to the workerpool threads. This property is read-only . Value Result Name Type Description result array Workerpool threads result[#] object ... result[#].id instanceid Thread ID result[#].job string Job name result[#].runs integer Number of runs Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.threads\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"id\": \"0x...\", \"job\": \"...\", \"runs\": 0 } ] } pendingrequests property Provides access to the pending requests. This property is read-only . Value Result Name Type Description result array Pending requests result[#] string ... Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.pendingrequests\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] } callstack property Provides access to the thread callstack. This property is read-only . Value The thread argument shall be passed as the index to the property, e.g. Controller.1.callstack@<thread> . Result Name Type Description result array Thread callstack result[#] object ... result[#].address instanceid Memory address result[#].module string Module name result[#]?.function string (optional) Function name result[#]?.line integer (optional) Line number Example Get Request { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.callstack@0\" } Get Response { \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"address\": \"0x...\", \"module\": \"...\", \"function\": \"...\", \"line\": 0 } ] } Notifications Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Controller plugin: LifeTime interface events: Notification Description statechange Notifies of a plugin state change Subsystems interface events: Notification Description subsystemchange Notifies a subsystem change Events interface events: Notification Description all Notifies all events forwarded by the framework statechange notification Notifies of a plugin state change. Parameters Name Type Description params object ... params.callsign string Plugin callsign params.state string New state of the plugin (must be one of the following: Activated, Activation, Deactivated, Deactivation, Destroyed, Hibernated, Precondition, Unavailable ) params.reason string Reason for state change (must be one of the following: Automatic, Conditions, Failure, InitializationFailed, MemoryExceeded, Requested, Shutdown, Startup, WatchdogExpired ) Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"callsign\": \"...\", \"state\": \"Unavailable\", \"reason\": \"Requested\" } } subsystemchange notification Notifies a subsystem change. Parameters Name Type Description params array Subsystems that have changed params[#] object ... params[#].subsystem string Name of the subsystem (must be one of the following: Bluetooth, Cryptography, Decryption, Graphics, Identifier, Installation, Internet, Location, Network, Platform, Provisioning, Security, Streaming, Time, WebSource ) params[#].active boolean Denotes if the subsystem is currently active Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.register\", \"params\": { \"event\": \"subsystemchange\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.subsystemchange\", \"params\": [ { \"subsystem\": \"Platform\", \"active\": false } ] } all notification Notifies all events forwarded by the framework. Description The Controller plugin is an aggregator of all the events triggered by a specific plugin. All notifications send by any plugin are forwarded over the Controller socket as an event. Parameters Name Type Description params object ... params.data object Contents of the message params.data.event string ... params.data?.params opaque object (optional) ... params.data?.callsign string (optional) ... Example Registration { \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.register\", \"params\": { \"event\": \"all\", \"id\": \"client\" } } Message { \"jsonrpc\": \"2.0\", \"method\": \"client.all\", \"params\": { \"data\": { \"event\": \"...\", \"params\": {}, \"callsign\": \"...\" } } }","title":"Controller Plugin"},{"location":"thunder/ControllerPlugin/#controller-plugin","text":"Version: 1.0 Status: Controller plugin for Thunder framework.","title":"Controller Plugin"},{"location":"thunder/ControllerPlugin/#table-of-contents","text":"Introduction Configuration Interfaces Methods Properties Notifications","title":"Table of Contents"},{"location":"thunder/ControllerPlugin/#introduction","text":"","title":"Introduction"},{"location":"thunder/ControllerPlugin/#scope","text":"This document describes purpose and functionality of the Controller plugin. It includes detailed specification about its configuration, methods and properties as well as sent notifications.","title":"Scope"},{"location":"thunder/ControllerPlugin/#case-sensitivity","text":"All identifiers of the interfaces described in this document are case-sensitive. Thus, unless stated otherwise, all keywords, entities, properties, relations and actions should be treated as such.","title":"Case Sensitivity"},{"location":"thunder/ControllerPlugin/#acronyms-abbreviations-and-terms","text":"The table below provides and overview of acronyms used in this document and their definitions. Acronym Description API Application Programming Interface FQDN Fully-Qualified Domain Name HTTP Hypertext Transfer Protocol JSON JavaScript Object Notation; a data interchange format JSON-RPC A remote procedure call protocol encoded in JSON SSDP Simple Service Discovery Protocol The table below provides and overview of terms and abbreviations used in this document and their definitions. Term Description callsign The name given to an instance of a plugin. One plugin can be instantiated multiple times, but each instance the instance name, callsign, must be unique.","title":"Acronyms, Abbreviations and Terms"},{"location":"thunder/ControllerPlugin/#references","text":"Ref ID Description HTTP HTTP specification JSON-RPC JSON-RPC 2.0 specification JSON JSON specification Thunder Thunder API Reference","title":"References"},{"location":"thunder/ControllerPlugin/#configuration","text":"The table below lists configuration options of the plugin. Name Type Description callsign string Plugin instance name (default: Controller ) classname string Class name: Controller locator string Library name: (built-in) startmode string Determines in which state the plugin should be moved to at startup of the framework","title":"Configuration"},{"location":"thunder/ControllerPlugin/#interfaces","text":"This plugin implements the following interfaces: ISystem ( IController.h ) (version 1.0.0) (compliant format) IDiscovery ( IController.h ) (version 1.0.0) (compliant format) IConfiguration ( IController.h ) (version 1.0.0) (uncompliant-extended format) ILifeTime ( IController.h ) (version 1.0.0) (compliant format) ISubsystems ( IController.h ) (version 1.0.0) (uncompliant-collapsed format) IEvents ( IController.h ) (version 1.0.0) (compliant format) IMetadata ( IController.h ) (version 1.0.0) (compliant format)","title":"Interfaces"},{"location":"thunder/ControllerPlugin/#methods","text":"The following methods are provided by the Controller plugin: System interface methods: Method Description reboot / harakiri Reboots the device delete Removes contents of a directory from the persistent storage clone Creates a clone of given plugin with a new callsign Discovery interface methods: Method Description startdiscovery Starts SSDP network discovery Configuration interface methods: Method Description persist / storeconfig Stores all configuration to the persistent memory LifeTime interface methods: Method Description activate Activates a plugin deactivate Deactivates a plugin unavailable Makes a plugin unavailable for interaction hibernate Hibernates a plugin suspend Suspends a plugin resume Resumes a plugin","title":"Methods"},{"location":"thunder/ControllerPlugin/#reboot-method","text":"Reboots the device. harakiri is an alternative name for this method. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"reboot method"},{"location":"thunder/ControllerPlugin/#description","text":"Depending on the device this call may not generate a response.","title":"Description"},{"location":"thunder/ControllerPlugin/#parameters","text":"This method takes no parameters.","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result","text":"Name Type Description result null Always null","title":"Result"},{"location":"thunder/ControllerPlugin/#example","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.reboot\" }","title":"Request"},{"location":"thunder/ControllerPlugin/#response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"thunder/ControllerPlugin/#delete-method","text":"Removes contents of a directory from the persistent storage.","title":"delete method"},{"location":"thunder/ControllerPlugin/#parameters_1","text":"Name Type Description params object ... params.path string Path to the directory within the persisent storage","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result_1","text":"Name Type Description result null Always null","title":"Result"},{"location":"thunder/ControllerPlugin/#example_1","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.delete\", \"params\": { \"path\": \"...\" } }","title":"Request"},{"location":"thunder/ControllerPlugin/#response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"thunder/ControllerPlugin/#clone-method","text":"Creates a clone of given plugin with a new callsign.","title":"clone method"},{"location":"thunder/ControllerPlugin/#parameters_2","text":"Name Type Description params object ... params.callsign string Callsign of the plugin params.newcallsign string Callsign for the cloned plugin","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result_2","text":"Name Type Description result string ...","title":"Result"},{"location":"thunder/ControllerPlugin/#example_2","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.clone\", \"params\": { \"callsign\": \"...\", \"newcallsign\": \"...\" } }","title":"Request"},{"location":"thunder/ControllerPlugin/#response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Response"},{"location":"thunder/ControllerPlugin/#startdiscovery-method","text":"Starts SSDP network discovery.","title":"startdiscovery method"},{"location":"thunder/ControllerPlugin/#parameters_3","text":"Name Type Description params object ... params.ttl integer Time to live, parameter for SSDP discovery","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result_3","text":"Name Type Description result null Always null","title":"Result"},{"location":"thunder/ControllerPlugin/#example_3","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.startdiscovery\", \"params\": { \"ttl\": 0 } }","title":"Request"},{"location":"thunder/ControllerPlugin/#response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"thunder/ControllerPlugin/#persist-method","text":"Stores all configuration to the persistent memory. storeconfig is an alternative name for this method.","title":"persist method"},{"location":"thunder/ControllerPlugin/#parameters_4","text":"This method takes no parameters.","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result_4","text":"Name Type Description result null Always null","title":"Result"},{"location":"thunder/ControllerPlugin/#example_4","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.persist\" }","title":"Request"},{"location":"thunder/ControllerPlugin/#response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"thunder/ControllerPlugin/#activate-method","text":"Activates a plugin.","title":"activate method"},{"location":"thunder/ControllerPlugin/#description_1","text":"Use this method to activate a plugin, i.e. move from Deactivated, via Activating to Activated state. If a plugin is in Activated state, it can handle JSON-RPC requests that are coming in. The plugin is loaded into memory only if it gets activated.","title":"Description"},{"location":"thunder/ControllerPlugin/#parameters_5","text":"Name Type Description params object ... params.callsign string Callsign of plugin to be activated","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result_5","text":"Name Type Description result null Always null","title":"Result"},{"location":"thunder/ControllerPlugin/#example_5","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.activate\", \"params\": { \"callsign\": \"...\" } }","title":"Request"},{"location":"thunder/ControllerPlugin/#response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"thunder/ControllerPlugin/#deactivate-method","text":"Deactivates a plugin.","title":"deactivate method"},{"location":"thunder/ControllerPlugin/#description_2","text":"Use this method to deactivate a plugin, i.e. move from Activated, via Deactivating to Deactivated state. If a plugin is deactivated, the actual plugin (.so) is no longer loaded into the memory of the process. In a Deactivated state the plugin will not respond to any JSON-RPC requests.","title":"Description"},{"location":"thunder/ControllerPlugin/#parameters_6","text":"Name Type Description params object ... params.callsign string Callsign of plugin to be deactivated","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result_6","text":"Name Type Description result null Always null","title":"Result"},{"location":"thunder/ControllerPlugin/#example_6","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.deactivate\", \"params\": { \"callsign\": \"...\" } }","title":"Request"},{"location":"thunder/ControllerPlugin/#response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"thunder/ControllerPlugin/#unavailable-method","text":"Makes a plugin unavailable for interaction.","title":"unavailable method"},{"location":"thunder/ControllerPlugin/#description_3","text":"Use this method to mark a plugin as unavailable, i.e. move from Deactivated to Unavailable state. It can not be started unless it is first deactivated (what triggers a state transition).","title":"Description"},{"location":"thunder/ControllerPlugin/#parameters_7","text":"Name Type Description params object ... params.callsign string Callsign of plugin to be set as unavailable","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result_7","text":"Name Type Description result null Always null","title":"Result"},{"location":"thunder/ControllerPlugin/#example_7","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.unavailable\", \"params\": { \"callsign\": \"...\" } }","title":"Request"},{"location":"thunder/ControllerPlugin/#response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"thunder/ControllerPlugin/#hibernate-method","text":"Hibernates a plugin.","title":"hibernate method"},{"location":"thunder/ControllerPlugin/#description_4","text":"Use activate to wake up a hibernated plugin. In a Hibernated state the plugin will not respond to any JSON-RPC requests.","title":"Description"},{"location":"thunder/ControllerPlugin/#parameters_8","text":"Name Type Description params object ... params.callsign string Callsign of plugin to be hibernated params.timeout integer Allowed time","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result_8","text":"Name Type Description result null Always null","title":"Result"},{"location":"thunder/ControllerPlugin/#errors","text":"Message Description ERROR_INPROC The plugin is running in-process and thus cannot be hibernated","title":"Errors"},{"location":"thunder/ControllerPlugin/#example_8","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.hibernate\", \"params\": { \"callsign\": \"...\", \"timeout\": 0 } }","title":"Request"},{"location":"thunder/ControllerPlugin/#response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"thunder/ControllerPlugin/#suspend-method","text":"Suspends a plugin.","title":"suspend method"},{"location":"thunder/ControllerPlugin/#description_5","text":"This is a more intelligent method, compared to deactivate , to move a plugin to a suspended state depending on its current state. Depending on the startmode flag this method will deactivate the plugin or only suspend the plugin.","title":"Description"},{"location":"thunder/ControllerPlugin/#parameters_9","text":"Name Type Description params object ... params.callsign string Callsign of plugin to be suspended","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result_9","text":"Name Type Description result null Always null","title":"Result"},{"location":"thunder/ControllerPlugin/#example_9","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.suspend\", \"params\": { \"callsign\": \"...\" } }","title":"Request"},{"location":"thunder/ControllerPlugin/#response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"thunder/ControllerPlugin/#resume-method","text":"Resumes a plugin.","title":"resume method"},{"location":"thunder/ControllerPlugin/#description_6","text":"This is a more intelligent method, compared to activate , to move a plugin to a resumed state depending on its current state. If required it will activate and move to the resumed state, regardless of the flags in the config (i.e. startmode , resumed )","title":"Description"},{"location":"thunder/ControllerPlugin/#parameters_10","text":"Name Type Description params object ... params.callsign string Callsign of plugin to be resumed","title":"Parameters"},{"location":"thunder/ControllerPlugin/#result_10","text":"Name Type Description result null Always null","title":"Result"},{"location":"thunder/ControllerPlugin/#example_10","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.resume\", \"params\": { \"callsign\": \"...\" } }","title":"Request"},{"location":"thunder/ControllerPlugin/#response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": null }","title":"Response"},{"location":"thunder/ControllerPlugin/#properties","text":"The following properties are provided by the Controller plugin: System interface properties: Property Description environment (read-only) Environment variable value Discovery interface properties: Property Description discoveryresults (read-only) SSDP network discovery results Configuration interface properties: Property Description configuration Service configuration Subsystems interface properties: Property Description subsystems (read-only) Subsystems status Metadata interface properties: Property Description services / status (read-only) Services metadata links (read-only) Connections list proxies (read-only) Proxies list version (read-only) Framework version threads (read-only) Workerpool threads pendingrequests (read-only) Pending requests callstack (read-only) Thread callstack","title":"Properties"},{"location":"thunder/ControllerPlugin/#environment-property","text":"Provides access to the environment variable value. This property is read-only .","title":"environment property"},{"location":"thunder/ControllerPlugin/#value","text":"The variable argument shall be passed as the index to the property, e.g. Controller.1.environment@<variable> .","title":"Value"},{"location":"thunder/ControllerPlugin/#result_11","text":"Name Type Description result string Environment variable value","title":"Result"},{"location":"thunder/ControllerPlugin/#example_11","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.environment@xyz\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"...\" }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#discoveryresults-property","text":"Provides access to the SSDP network discovery results. This property is read-only .","title":"discoveryresults property"},{"location":"thunder/ControllerPlugin/#value_1","text":"","title":"Value"},{"location":"thunder/ControllerPlugin/#result_12","text":"Name Type Description result array SSDP network discovery results result[#] object ... result[#].locator string Locator for the discovery result[#].latency integer Latency for the discovery result[#]?.model string (optional) Model result[#].secure boolean Secure or not","title":"Result"},{"location":"thunder/ControllerPlugin/#example_12","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.discoveryresults\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"locator\": \"...\", \"latency\": 0, \"model\": \"...\", \"secure\": false } ] }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#configuration-property","text":"Provides access to the service configuration.","title":"configuration property"},{"location":"thunder/ControllerPlugin/#value_2","text":"Name Type Description (property) opaque object Service configuration The callsign argument shall be passed as the index to the property, e.g. Controller.1.configuration@<callsign> .","title":"Value"},{"location":"thunder/ControllerPlugin/#result_13","text":"Name Type Description result opaque object Service configuration","title":"Result"},{"location":"thunder/ControllerPlugin/#example_13","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.configuration@xyz\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": {} }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#set-request","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.configuration@xyz\", \"params\": {} }","title":"Set Request"},{"location":"thunder/ControllerPlugin/#set-response","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": \"null\" }","title":"Set Response"},{"location":"thunder/ControllerPlugin/#subsystems-property","text":"Provides access to the subsystems status. This property is read-only .","title":"subsystems property"},{"location":"thunder/ControllerPlugin/#value_3","text":"Name Type Description (property) array Subsystems status (property)[#] object ... (property)[#].subsystem string Name of the subsystem (must be one of the following: Bluetooth, Cryptography, Decryption, Graphics, Identifier, Installation, Internet, Location, Network, Platform, Provisioning, Security, Streaming, Time, WebSource ) (property)[#].active boolean Denotes if the subsystem is currently active","title":"Value"},{"location":"thunder/ControllerPlugin/#example_14","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.subsystems\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response_3","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"subsystem\": \"Platform\", \"active\": false } ] }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#services-property","text":"Provides access to the services metadata. This property is read-only . status is an alternative name for this property. This name is deprecated and may be removed in the future. It is not recommended for use in new implementations.","title":"services property"},{"location":"thunder/ControllerPlugin/#description_7","text":"If callsign is omitted, metadata of all services is returned.","title":"Description"},{"location":"thunder/ControllerPlugin/#value_4","text":"The callsign argument shall be passed as the index to the property, e.g. Controller.1.services@<callsign> .","title":"Value"},{"location":"thunder/ControllerPlugin/#result_14","text":"Name Type Description result array Services metadata (if only one element is present then the array will be omitted) result[#] object ... result[#].callsign string Plugin callsign result[#].locator string Shared library path result[#].classname string Plugin class name result[#].module string Module name result[#].state string Current state (must be one of the following: Activated, Activation, Deactivated, Deactivation, Destroyed, Hibernated, Precondition, Resumed, Suspended, Unavailable ) result[#].startmode string Startup mode (must be one of the following: Activated, Deactivated, Unavailable ) result[#].resumed boolean Determines if the plugin is to be activated in resumed or suspended mode result[#].version object Version result[#].version.hash string SHA256 hash identifying the source code result[#].version.major integer Major number result[#].version.minor integer Minor number result[#].version.patch integer Patch number result[#]?.communicator string (optional) Communicator result[#]?.persistentpathpostfix string (optional) Postfix of persistent path result[#]?.volatilepathpostfix string (optional) Postfix of volatile path result[#]?.systemrootpath string (optional) Path of system root result[#]?.precondition opaque object (optional) Activation conditons result[#]?.termination opaque object (optional) Deactivation conditions result[#]?.configuration opaque object (optional) Plugin configuration result[#]?.observers integer (optional) Number or observers result[#]?.processedrequests integer (optional) Number of API requests that have been processed by the plugin result[#]?.processedobjects integer (optional) Number of objects that have been processed by the plugin","title":"Result"},{"location":"thunder/ControllerPlugin/#example_15","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.services@xyz\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response_4","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"callsign\": \"...\", \"locator\": \"...\", \"classname\": \"...\", \"module\": \"...\", \"state\": \"Unavailable\", \"startmode\": \"Unavailable\", \"resumed\": false, \"version\": { \"hash\": \"...\", \"major\": 0, \"minor\": 0, \"patch\": 0 }, \"communicator\": \"...\", \"persistentpathpostfix\": \"...\", \"volatilepathpostfix\": \"...\", \"systemrootpath\": \"...\", \"precondition\": {}, \"termination\": {}, \"configuration\": {}, \"observers\": 0, \"processedrequests\": 0, \"processedobjects\": 0 } ] }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#links-property","text":"Provides access to the connections list. This property is read-only .","title":"links property"},{"location":"thunder/ControllerPlugin/#value_5","text":"","title":"Value"},{"location":"thunder/ControllerPlugin/#result_15","text":"Name Type Description result array Connections list result[#] object ... result[#].remote string IP address (or FQDN) of the other side of the connection result[#].state string State of the link (must be one of the following: COMRPC, Closed, RawSocket, Suspended, WebServer, WebSocket ) result[#]?.name string (optional) Name of the connection result[#].id integer A unique number identifying the connection result[#].activity boolean Denotes if there was any activity on this connection","title":"Result"},{"location":"thunder/ControllerPlugin/#example_16","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.links\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response_5","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"remote\": \"...\", \"state\": \"Closed\", \"name\": \"...\", \"id\": 0, \"activity\": false } ] }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#proxies-property","text":"Provides access to the proxies list. This property is read-only .","title":"proxies property"},{"location":"thunder/ControllerPlugin/#value_6","text":"The linkid argument shall be passed as the index to the property, e.g. Controller.1.proxies@<linkid> .","title":"Value"},{"location":"thunder/ControllerPlugin/#result_16","text":"Name Type Description result array Proxies list result[#] object ... result[#].interface integer Interface ID result[#].name string The fully qualified name of the interface result[#].instance instanceid Instance ID result[#].count integer Reference count","title":"Result"},{"location":"thunder/ControllerPlugin/#example_17","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.proxies@0\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response_6","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"interface\": 0, \"name\": \"...\", \"instance\": \"0x...\", \"count\": 0 } ] }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#version-property","text":"Provides access to the framework version. This property is read-only .","title":"version property"},{"location":"thunder/ControllerPlugin/#value_7","text":"","title":"Value"},{"location":"thunder/ControllerPlugin/#result_17","text":"Name Type Description result object Framework version result.hash string SHA256 hash identifying the source code result.major integer Major number result.minor integer Minor number result.patch integer Patch number","title":"Result"},{"location":"thunder/ControllerPlugin/#example_18","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.version\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response_7","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": { \"hash\": \"...\", \"major\": 0, \"minor\": 0, \"patch\": 0 } }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#threads-property","text":"Provides access to the workerpool threads. This property is read-only .","title":"threads property"},{"location":"thunder/ControllerPlugin/#value_8","text":"","title":"Value"},{"location":"thunder/ControllerPlugin/#result_18","text":"Name Type Description result array Workerpool threads result[#] object ... result[#].id instanceid Thread ID result[#].job string Job name result[#].runs integer Number of runs","title":"Result"},{"location":"thunder/ControllerPlugin/#example_19","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.threads\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response_8","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"id\": \"0x...\", \"job\": \"...\", \"runs\": 0 } ] }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#pendingrequests-property","text":"Provides access to the pending requests. This property is read-only .","title":"pendingrequests property"},{"location":"thunder/ControllerPlugin/#value_9","text":"","title":"Value"},{"location":"thunder/ControllerPlugin/#result_19","text":"Name Type Description result array Pending requests result[#] string ...","title":"Result"},{"location":"thunder/ControllerPlugin/#example_20","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.pendingrequests\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response_9","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ \"...\" ] }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#callstack-property","text":"Provides access to the thread callstack. This property is read-only .","title":"callstack property"},{"location":"thunder/ControllerPlugin/#value_10","text":"The thread argument shall be passed as the index to the property, e.g. Controller.1.callstack@<thread> .","title":"Value"},{"location":"thunder/ControllerPlugin/#result_20","text":"Name Type Description result array Thread callstack result[#] object ... result[#].address instanceid Memory address result[#].module string Module name result[#]?.function string (optional) Function name result[#]?.line integer (optional) Line number","title":"Result"},{"location":"thunder/ControllerPlugin/#example_21","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#get-request_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.callstack@0\" }","title":"Get Request"},{"location":"thunder/ControllerPlugin/#get-response_10","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"result\": [ { \"address\": \"0x...\", \"module\": \"...\", \"function\": \"...\", \"line\": 0 } ] }","title":"Get Response"},{"location":"thunder/ControllerPlugin/#notifications","text":"Notifications are autonomous events triggered by the internals of the implementation and broadcasted via JSON-RPC to all registered observers. Refer to [ Thunder ] for information on how to register for a notification. The following events are provided by the Controller plugin: LifeTime interface events: Notification Description statechange Notifies of a plugin state change Subsystems interface events: Notification Description subsystemchange Notifies a subsystem change Events interface events: Notification Description all Notifies all events forwarded by the framework","title":"Notifications"},{"location":"thunder/ControllerPlugin/#statechange-notification","text":"Notifies of a plugin state change.","title":"statechange notification"},{"location":"thunder/ControllerPlugin/#parameters_11","text":"Name Type Description params object ... params.callsign string Plugin callsign params.state string New state of the plugin (must be one of the following: Activated, Activation, Deactivated, Deactivation, Destroyed, Hibernated, Precondition, Unavailable ) params.reason string Reason for state change (must be one of the following: Automatic, Conditions, Failure, InitializationFailed, MemoryExceeded, Requested, Shutdown, Startup, WatchdogExpired )","title":"Parameters"},{"location":"thunder/ControllerPlugin/#example_22","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#registration","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.register\", \"params\": { \"event\": \"statechange\", \"id\": \"client\" } }","title":"Registration"},{"location":"thunder/ControllerPlugin/#message","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.statechange\", \"params\": { \"callsign\": \"...\", \"state\": \"Unavailable\", \"reason\": \"Requested\" } }","title":"Message"},{"location":"thunder/ControllerPlugin/#subsystemchange-notification","text":"Notifies a subsystem change.","title":"subsystemchange notification"},{"location":"thunder/ControllerPlugin/#parameters_12","text":"Name Type Description params array Subsystems that have changed params[#] object ... params[#].subsystem string Name of the subsystem (must be one of the following: Bluetooth, Cryptography, Decryption, Graphics, Identifier, Installation, Internet, Location, Network, Platform, Provisioning, Security, Streaming, Time, WebSource ) params[#].active boolean Denotes if the subsystem is currently active","title":"Parameters"},{"location":"thunder/ControllerPlugin/#example_23","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#registration_1","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.register\", \"params\": { \"event\": \"subsystemchange\", \"id\": \"client\" } }","title":"Registration"},{"location":"thunder/ControllerPlugin/#message_1","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.subsystemchange\", \"params\": [ { \"subsystem\": \"Platform\", \"active\": false } ] }","title":"Message"},{"location":"thunder/ControllerPlugin/#all-notification","text":"Notifies all events forwarded by the framework.","title":"all notification"},{"location":"thunder/ControllerPlugin/#description_8","text":"The Controller plugin is an aggregator of all the events triggered by a specific plugin. All notifications send by any plugin are forwarded over the Controller socket as an event.","title":"Description"},{"location":"thunder/ControllerPlugin/#parameters_13","text":"Name Type Description params object ... params.data object Contents of the message params.data.event string ... params.data?.params opaque object (optional) ... params.data?.callsign string (optional) ...","title":"Parameters"},{"location":"thunder/ControllerPlugin/#example_24","text":"","title":"Example"},{"location":"thunder/ControllerPlugin/#registration_2","text":"{ \"jsonrpc\": \"2.0\", \"id\": 42, \"method\": \"Controller.1.register\", \"params\": { \"event\": \"all\", \"id\": \"client\" } }","title":"Registration"},{"location":"thunder/ControllerPlugin/#message_2","text":"{ \"jsonrpc\": \"2.0\", \"method\": \"client.all\", \"params\": { \"data\": { \"event\": \"...\", \"params\": {}, \"callsign\": \"...\" } } }","title":"Message"}]}